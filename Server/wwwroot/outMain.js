define("Main/UI", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TotalPagesSpan = exports.TotalDevicesCount = exports.ToastsWrapper = exports.TabContentWrapper = exports.RightPaginationButton = exports.OnlineDevicesCount = exports.MeasurementContext = exports.MeasurementCanvas = exports.LeftPaginationButton = exports.HideOfflineDevicesCheckbox = exports.GridFilter = exports.DevicesSelectedCount = exports.DeviceGroupSelect = exports.DeviceGridBody = exports.DeviceGrid = exports.CurrentPageInput = exports.ConsoleTextArea = exports.ConsoleTab = exports.ConsoleOutputDiv = exports.ConsoleFrame = exports.ConsoleAlert = exports.CommandModeSelect = exports.CommandInfoDiv = exports.CommandCompletionDiv = exports.CloseAlertsButton = exports.AlertsFrame = exports.AlertsCount = exports.AlertsButton = void 0;
    exports.AlertsButton = document.getElementById("alertsButton");
    exports.AlertsCount = document.getElementById("alertsCount");
    exports.AlertsFrame = document.getElementById("alertsFrame");
    exports.CloseAlertsButton = document.getElementById("closeAlertsFrameButton");
    exports.CommandCompletionDiv = document.querySelector("#commandCompletionDiv");
    exports.CommandInfoDiv = document.querySelector("#commandInfoDiv");
    exports.CommandModeSelect = document.querySelector("#commandModeSelect");
    exports.ConsoleAlert = document.getElementById("consoleAlert");
    exports.ConsoleFrame = document.getElementById("consoleFrame");
    exports.ConsoleOutputDiv = document.querySelector("#consoleOutputDiv");
    exports.ConsoleTab = document.getElementById("consoleTab");
    exports.ConsoleTextArea = document.querySelector("#consoleTextArea");
    exports.CurrentPageInput = document.querySelector("#currentPageInput");
    exports.DeviceGrid = document.querySelector("#deviceGrid");
    exports.DeviceGridBody = document.querySelector("#deviceGrid tbody");
    exports.DeviceGroupSelect = document.getElementById("deviceGroupSelect");
    exports.DevicesSelectedCount = document.querySelector("#devicesSelectedSpan");
    exports.GridFilter = document.getElementById("gridFilter");
    exports.HideOfflineDevicesCheckbox = document.querySelector("#hideOfflineDevicesCheckbox");
    exports.LeftPaginationButton = document.querySelector("#leftPaginationButton");
    exports.MeasurementCanvas = document.createElement("canvas");
    exports.MeasurementContext = exports.MeasurementCanvas.getContext("2d");
    exports.OnlineDevicesCount = document.querySelector("#onlineDevicesSpan");
    exports.RightPaginationButton = document.querySelector("#rightPaginationButton");
    exports.TabContentWrapper = document.getElementById("tabContentWrapper");
    exports.ToastsWrapper = document.getElementById("toastsWrapper");
    exports.TotalDevicesCount = document.querySelector("#totalDevicesSpan");
    exports.TotalPagesSpan = document.querySelector("#totalPagesSpan");
});
define("Main/UserSettings", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserSettings = void 0;
    exports.UserSettings = {
        PromptString: "~>",
        CommandModeShortcuts: {
            "Web": "/web",
            "PSCore": "/pscore",
            "WinPS": "/winps",
            "CMD": "/cmd",
            "Bash": "/bash"
        }
    };
});
define("Main/Console", ["require", "exports", "Main/UserSettings", "Main/UI"], function (require, exports, UserSettings_js_1, UI_js_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IncrementMissedMessageCount = exports.AutoSizeTextArea = exports.AddTransferHarness = exports.AddConsoleHTML = exports.AddConsoleOutput = void 0;
    function AddConsoleOutput(strOutputMessage) {
        var outputBlock = document.createElement("div");
        outputBlock.classList.add("console-block");
        var prompt = document.createElement("div");
        prompt.classList.add("console-prompt");
        prompt.innerHTML = UserSettings_js_1.UserSettings.PromptString;
        var output = document.createElement("div");
        output.classList.add("console-output");
        output.innerHTML = strOutputMessage;
        outputBlock.appendChild(prompt);
        outputBlock.appendChild(output);
        UI_js_1.ConsoleOutputDiv.appendChild(outputBlock);
        UI_js_1.ConsoleFrame.scrollTop = UI_js_1.ConsoleFrame.scrollHeight;
        IncrementMissedMessageCount();
    }
    exports.AddConsoleOutput = AddConsoleOutput;
    function AddConsoleHTML(html) {
        var contentWrapper = document.createElement("div");
        contentWrapper.innerHTML = html;
        UI_js_1.ConsoleOutputDiv.appendChild(contentWrapper);
        UI_js_1.ConsoleFrame.scrollTop = UI_js_1.ConsoleFrame.scrollHeight;
        IncrementMissedMessageCount();
    }
    exports.AddConsoleHTML = AddConsoleHTML;
    function AddTransferHarness(transferID, totalDevices) {
        var transferHarness = document.createElement("div");
        transferHarness.id = transferID;
        transferHarness.classList.add("command-harness");
        transferHarness.innerHTML = `
        <div class="command-harness-title">
            File Transfer Status  |  
            Total Devices: ${totalDevices} |  
            Completed: <span id="${transferID}-completed">0</span>
        </div>`;
        AddConsoleHTML(transferHarness.outerHTML);
    }
    exports.AddTransferHarness = AddTransferHarness;
    function AutoSizeTextArea() {
        UI_js_1.ConsoleTextArea.style.height = "1px";
        UI_js_1.ConsoleTextArea.style.height = Math.max(12, UI_js_1.ConsoleTextArea.scrollHeight) + "px";
    }
    exports.AutoSizeTextArea = AutoSizeTextArea;
    function IncrementMissedMessageCount() {
        if (!UI_js_1.ConsoleTab.classList.contains("active")) {
            var currentCount = Number.parseInt(UI_js_1.ConsoleAlert.innerText);
            if (Number.isNaN(currentCount)) {
                UI_js_1.ConsoleAlert.innerText = "1";
            }
            else {
                UI_js_1.ConsoleAlert.innerText = String(currentCount + 1);
            }
            UI_js_1.ConsoleAlert.hidden = false;
        }
    }
    exports.IncrementMissedMessageCount = IncrementMissedMessageCount;
});
define("Shared/Utilities", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RemoveFromArray = exports.FormatScriptOutputArray = exports.FormatScriptOutput = exports.ConvertUInt8ArrayToBase64 = exports.ConvertBase64ToUInt8Array = exports.When = exports.GetDistanceBetween = exports.ParseSearchString = exports.EncodeForHTML = exports.CreateGUID = exports.Split = void 0;
    /**
     * Splits a string into "parts" number of pieces.  Once "parts" number is
     * reached, additional occurrences of the splitter are ignored.
     * @param splitter
     * @param parts
     */
    function Split(originalString, splitter, parts) {
        var returnArray = [];
        var remainingString = originalString;
        for (var i = 1; i < parts; i++) {
            if (remainingString.indexOf(splitter) == -1) {
                break;
            }
            returnArray.push(remainingString.slice(0, remainingString.indexOf(splitter)));
            remainingString = remainingString.slice(remainingString.indexOf(splitter) + splitter.length);
        }
        returnArray.push(remainingString);
        return returnArray;
    }
    exports.Split = Split;
    function CreateGUID() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }
    exports.CreateGUID = CreateGUID;
    function EncodeForHTML(text) {
        var tempDiv = document.createElement("div");
        tempDiv.innerText = text;
        return tempDiv.innerHTML;
    }
    exports.EncodeForHTML = EncodeForHTML;
    function ParseSearchString() {
        var queryStrings = {};
        var queryArray = location.search.substring(1).split("&");
        queryArray.forEach(value => {
            var keyValue = value.split("=");
            queryStrings[keyValue[0]] = keyValue[1];
        });
        return queryStrings;
    }
    exports.ParseSearchString = ParseSearchString;
    function GetDistanceBetween(fromX, fromY, toX, toY) {
        return Math.sqrt(Math.pow(fromX - toX, 2) +
            Math.pow(fromY - toY, 2));
    }
    exports.GetDistanceBetween = GetDistanceBetween;
    async function When(predicate, pollingTimeMs = 100) {
        return new Promise((resolve, reject) => {
            function checkCondition() {
                if (predicate()) {
                    resolve();
                }
                else {
                    window.setTimeout(() => {
                        checkCondition();
                    }, pollingTimeMs);
                }
            }
            checkCondition();
        });
    }
    exports.When = When;
    function ConvertBase64ToUInt8Array(base64) {
        var binaryString = window.atob(base64);
        var bytes = new Uint8ClampedArray(binaryString.length);
        for (var i = 0; i < binaryString.length; i++) {
            bytes[i] = binaryString.charCodeAt(i);
        }
        return bytes;
    }
    exports.ConvertBase64ToUInt8Array = ConvertBase64ToUInt8Array;
    function ConvertUInt8ArrayToBase64(array) {
        var base64String = '';
        for (var i = 0; i < array.byteLength; i++) {
            base64String += String.fromCharCode(array[i]);
        }
        return btoa(base64String);
    }
    exports.ConvertUInt8ArrayToBase64 = ConvertUInt8ArrayToBase64;
    function FormatScriptOutput(output) {
        return EncodeForHTML(output).replace(/ /g, "&nbsp;").replace(/\n/g, "<br>");
    }
    exports.FormatScriptOutput = FormatScriptOutput;
    function FormatScriptOutputArray(output) {
        return output.map(x => EncodeForHTML(x)).join("<br>");
    }
    exports.FormatScriptOutputArray = FormatScriptOutputArray;
    function RemoveFromArray(array, item) {
        var index = array.indexOf(item);
        if (index > -1) {
            array.splice(index, 1);
        }
    }
    exports.RemoveFromArray = RemoveFromArray;
    ;
});
define("Shared/UI", ["require", "exports", "Shared/Utilities"], function (require, exports, Utilities_js_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValidateInput = exports.ShowModal = exports.ShowMessage = exports.ToastsWrapper = void 0;
    exports.ToastsWrapper = document.getElementById("toastsWrapper");
    function ShowMessage(message) {
        var messageDiv = document.createElement("div");
        messageDiv.classList.add("toast-message");
        messageDiv.innerHTML = message;
        exports.ToastsWrapper.appendChild(messageDiv);
        window.setTimeout(() => {
            messageDiv.remove();
        }, 5000);
    }
    exports.ShowMessage = ShowMessage;
    function ShowModal(title, modalBodyHtml, buttonsHTML = "", onDismissCallback = null) {
        var modalID = Utilities_js_1.CreateGUID();
        var modalHTML = `<div id="${modalID}" class="modal fade in" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">${title}</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                ${modalBodyHtml}
              </div>
              <div class="modal-footer">
                ${buttonsHTML}
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              </div>
            </div>
          </div>
        </div>`;
        var wrapperDiv = document.createElement("div");
        wrapperDiv.innerHTML = modalHTML;
        document.body.appendChild(wrapperDiv);
        $("#" + modalID).on("hidden.bs.modal", ev => {
            try {
                if (onDismissCallback) {
                    onDismissCallback();
                }
            }
            finally {
                ev.currentTarget.parentElement.remove();
            }
        });
        $("#" + modalID)["modal"]("show");
        return wrapperDiv;
    }
    exports.ShowModal = ShowModal;
    function ValidateInput(inputElement) {
        if (!inputElement.checkValidity()) {
            $(inputElement)["tooltip"]({
                template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner text-danger"></div></div>',
                title: inputElement.validationMessage
            });
            $(inputElement)["tooltip"]("show");
            return false;
        }
        else {
            return true;
        }
    }
    exports.ValidateInput = ValidateInput;
});
define("Main/Chat", ["require", "exports", "Main/HubConnection", "Main/DataGrid", "Shared/UI"], function (require, exports, HubConnection, DataGrid_js_1, UI_js_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReceiveChatText = exports.CreateChatWindow = void 0;
    function CreateChatWindow(deviceID, deviceName) {
        var chatWindow = document.getElementById("chat-" + deviceID);
        if (!chatWindow) {
            var windowHtml = `
            <div class="chat-header">
                <h6 class="mt-3">Chat with ${deviceName}</h6>
                <div class="text-right">
                    <i class="fas fa-window-close close-button pointer"></i>
                </div>
            </div>
            <div class="chat-messages">
            </div>
            <textarea class="chat-input" value="" style="border: 1px solid gray"></textarea>
        `;
            chatWindow = document.createElement("div");
            chatWindow.classList.add("chat-window");
            chatWindow.style.right = "20px";
            chatWindow.style.bottom = "20px";
            chatWindow.setAttribute("id", "chat-" + deviceID);
            chatWindow.innerHTML = windowHtml;
            document.body.appendChild(chatWindow);
            chatWindow.addEventListener("mousedown", (ev) => {
                document.querySelectorAll(".chat-window").forEach(x => {
                    x.style.zIndex = "0";
                });
                ev.currentTarget.style.zIndex = "1";
            });
            chatWindow.querySelector(".close-button").onclick = (ev) => {
                ev.preventDefault();
                ev.stopPropagation();
                document.body.removeChild(chatWindow);
            };
            chatWindow.querySelector(".chat-header").onmousedown = (ev) => {
                ev.preventDefault();
                chatWindow.removeEventListener("mousemove", moveChatWindow);
                chatWindow.removeEventListener("mouseup", stopMovingChatWindow);
                chatWindow.removeEventListener("mouseleave", stopMovingChatWindow);
                chatWindow.addEventListener("mousemove", moveChatWindow);
                chatWindow.addEventListener("mouseup", stopMovingChatWindow);
                chatWindow.addEventListener("mouseleave", stopMovingChatWindow);
            };
            chatWindow.querySelector(".chat-input").onkeypress = (ev) => {
                if (ev.key.toLowerCase() == "enter") {
                    ev.preventDefault();
                    ev.stopPropagation();
                    if (!DataGrid_js_1.DataSource.find(x => x.ID == deviceID).IsOnline) {
                        UI_js_2.ShowMessage("Device is offline.");
                        return;
                    }
                    var inputText = ev.currentTarget.value;
                    if (!inputText) {
                        return;
                    }
                    chatWindow.querySelector(".chat-messages").innerHTML += `
                    <div>
                        <span class="text-secondary font-weight-bold">You: </span>
                        <span>${inputText}</span>
                    </div>
                `;
                    ev.currentTarget.value = "";
                    HubConnection.Connection.invoke("Chat", inputText, [deviceID]);
                    var chatMessages = chatWindow.querySelector(".chat-messages");
                    chatMessages.scrollTo({ top: chatMessages.scrollHeight });
                }
            };
        }
    }
    exports.CreateChatWindow = CreateChatWindow;
    function ReceiveChatText(deviceID, deviceName, message, disconnected) {
        CreateChatWindow(deviceID, deviceName);
        var chatWindow = document.getElementById("chat-" + deviceID);
        var chatMessages = chatWindow.querySelector(".chat-messages");
        if (disconnected) {
            chatMessages.innerHTML += `
            <div>
                <span class="font-italic">${deviceName} disconnected from chat.</span>
                <span>${message}</span>
            </div>
        `;
        }
        else {
            chatMessages.innerHTML += `
            <div>
                <span class="text-primary font-weight-bold">${deviceName}: </span>
                <span>${message}</span>
            </div>
        `;
        }
        chatMessages.scrollTo({ top: chatMessages.scrollHeight });
    }
    exports.ReceiveChatText = ReceiveChatText;
    function moveChatWindow(ev) {
        var chatWindow = ev.currentTarget;
        chatWindow.style.right = String(parseInt(chatWindow.style.right || "0") - ev.movementX) + "px";
        chatWindow.style.bottom = String(parseInt(chatWindow.style.bottom || "0") - ev.movementY) + "px";
    }
    function stopMovingChatWindow(ev) {
        ev.currentTarget.removeEventListener("mousemove", moveChatWindow);
        ev.currentTarget.removeEventListener("mouseup", stopMovingChatWindow);
        ev.currentTarget.removeEventListener("mouseleave", stopMovingChatWindow);
    }
});
define("Shared/Models/Device", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("Main/DataGrid", ["require", "exports", "Main/UI", "Main/Console", "Main/Chat", "Main/HubConnection", "Shared/UI"], function (require, exports, UI_js_3, Console_js_1, Chat_js_1, HubConnection, UI_js_4) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UpdateDeviceCounts = exports.ToggleSelectAll = exports.RefreshGrid = exports.PageUp = exports.PageDown = exports.GoToCurrentPage = exports.GetSelectedDevices = exports.RenderDeviceRows = exports.ApplyFilterToDevice = exports.ApplyFilterToAll = exports.AddOrUpdateDevice = exports.AddOrUpdateDevices = exports.GridState = exports.FilteredDevices = exports.DataSource = void 0;
    exports.DataSource = new Array();
    exports.FilteredDevices = new Array();
    exports.GridState = new class {
        constructor() {
            this.GroupFilter = "";
            this.HideOffline = true;
            this.SearchFilter = "";
            this.ShowAllGroups = true;
            this.CurrentPage = 1;
            this.TotalPages = 1;
            this.RowsPerPage = 100;
        }
    };
    function AddOrUpdateDevices(devices) {
        exports.DataSource.splice(0);
        exports.FilteredDevices.splice(0);
        exports.GridState.CurrentPage = 1;
        devices.sort((a, b) => {
            //if (a.IsOnline && !b.IsOnline) {
            //    return -1;
            //}
            //else if (b.IsOnline && !a.IsOnline) {
            //    return 1;
            //}
            return a.DeviceName.localeCompare(b.DeviceName, [], { sensitivity: "base" });
        });
        devices.forEach(x => {
            AddOrUpdateDevice(x, false);
        });
        UpdateDeviceCounts();
        RenderDeviceRows();
    }
    exports.AddOrUpdateDevices = AddOrUpdateDevices;
    function AddOrUpdateDevice(device, rerenderGrid) {
        var existingIndex = exports.DataSource.findIndex(x => x.ID == device.ID);
        if (existingIndex > -1) {
            exports.DataSource[existingIndex] = device;
        }
        else {
            exports.DataSource.push(device);
        }
        ApplyFilterToDevice(device);
        if (rerenderGrid) {
            UpdateDeviceCounts();
            RenderDeviceRows();
        }
    }
    exports.AddOrUpdateDevice = AddOrUpdateDevice;
    function ApplyFilterToAll() {
        exports.FilteredDevices.splice(0);
        exports.GridState.CurrentPage = 1;
        for (var i = 0; i < exports.DataSource.length; i++) {
            ApplyFilterToDevice(exports.DataSource[i]);
        }
        UpdateDeviceCounts();
        RenderDeviceRows();
    }
    exports.ApplyFilterToAll = ApplyFilterToAll;
    function ApplyFilterToDevice(device) {
        if (exports.GridState.HideOffline && !device.IsOnline) {
            return;
        }
        if (!exports.GridState.ShowAllGroups &&
            (device.DeviceGroupID || "") != (exports.GridState.GroupFilter || "")) {
            return;
        }
        if (deviceMatchesSearchFilter(device)) {
            var existingIndex = exports.FilteredDevices.findIndex(x => x.ID == device.ID);
            if (existingIndex > -1) {
                exports.FilteredDevices[existingIndex] = device;
            }
            else {
                exports.FilteredDevices.push(device);
            }
            return;
        }
    }
    exports.ApplyFilterToDevice = ApplyFilterToDevice;
    function RenderDeviceRows() {
        UI_js_3.DeviceGridBody.innerHTML = "";
        var startCurrentDevices = (exports.GridState.CurrentPage - 1) * exports.GridState.RowsPerPage;
        var endCurrentDevices = startCurrentDevices + exports.GridState.RowsPerPage;
        var currentPageDevices = exports.FilteredDevices.slice(startCurrentDevices, endCurrentDevices);
        for (var i = 0; i < currentPageDevices.length; i++) {
            let device = currentPageDevices[i];
            let recordRow = document.getElementById(device.ID);
            if (recordRow == null) {
                recordRow = document.createElement("tr");
                recordRow.classList.add("record-row");
                recordRow.id = device.ID;
                UI_js_3.DeviceGridBody.appendChild(recordRow);
                recordRow.addEventListener("click", (e) => {
                    if (!e.ctrlKey && !e.shiftKey) {
                        var selectedID = e.currentTarget.id;
                        UI_js_3.DeviceGrid.querySelectorAll(`.record-row.row-selected:not([id='${selectedID}'])`).forEach(elem => {
                            elem.classList.remove("row-selected");
                        });
                    }
                    e.currentTarget.classList.toggle("row-selected");
                    UpdateDeviceCounts();
                });
            }
            recordRow.innerHTML = `
                    <td>
                        ${device.IsOnline ?
                "<span class='fa fa-check-circle'></span>" :
                "<span class='fa fa-times'></span>"}
                    </td>
                    <td>${device.DeviceName}</td>
                    <td>${device.Alias || ""}</td>
                    <td>${device.CurrentUser}</td>
                    <td>${new Date(device.LastOnline).toLocaleString()}</td>
                    <td>${device.PublicIP}</td>
                    <td>${device.Platform}</td>
                    <td>${device.OSDescription}</td>
                    <td>${Math.round(device.CpuUtilization * 100)}%</td>
                    <td>${Math.round(device.UsedStorage / device.TotalStorage * 100)}%</td>
                    <td>${device.TotalStorage.toLocaleString()}</td>
                    <td>${Math.round(device.UsedMemory / device.TotalMemory * 100)}%</td>
                    <td>${device.TotalMemory.toLocaleString()}</td>
                    <td style="white-space: nowrap">
                        <i class="fas fa-comment device-chat-button mr-2" title="Chat" style="font-size:1.5em"></i>
                        <i class="fas fa-mouse device-remotecontrol-button mr-2" title="Remote Control" style="font-size:1.5em"></i>
                        <i class="fas fa-edit device-edit-button" title="Edit" style="font-size:1.5em"></i>
                    </td>`;
            recordRow.querySelector(".device-edit-button").onclick = (ev) => {
                ev.preventDefault();
                ev.stopPropagation();
                window.open(`${location.origin}/EditDevice?deviceID=${device.ID}`, "_blank");
            };
            recordRow.querySelector(".device-chat-button").onclick = (ev) => {
                ev.preventDefault();
                ev.stopPropagation();
                Chat_js_1.CreateChatWindow(device.ID, device.DeviceName);
            };
            recordRow.querySelector(".device-remotecontrol-button").onclick = (ev) => {
                ev.preventDefault();
                ev.stopPropagation();
                Console_js_1.AddConsoleOutput("Launching remote control on client device...");
                HubConnection.Connection.invoke("RemoteControl", device.ID);
            };
        }
    }
    exports.RenderDeviceRows = RenderDeviceRows;
    function GetSelectedDevices() {
        var devices = new Array();
        UI_js_3.DeviceGrid.querySelectorAll(".row-selected").forEach(row => {
            devices.push(exports.DataSource.find(x => x.ID == row.id));
        });
        return devices;
    }
    exports.GetSelectedDevices = GetSelectedDevices;
    ;
    function GoToCurrentPage() {
        var newPage = Number(UI_js_3.CurrentPageInput.value);
        if (Number.isInteger(newPage) &&
            newPage > 0 &&
            newPage < exports.GridState.TotalPages) {
            exports.GridState.CurrentPage = newPage;
            UpdateDeviceCounts();
            RenderDeviceRows();
        }
        else {
            UI_js_3.CurrentPageInput.value = String(exports.GridState.CurrentPage);
        }
    }
    exports.GoToCurrentPage = GoToCurrentPage;
    function PageDown() {
        if (exports.GridState.CurrentPage > 1) {
            exports.GridState.CurrentPage--;
            UpdateDeviceCounts();
            RenderDeviceRows();
        }
    }
    exports.PageDown = PageDown;
    function PageUp() {
        if (exports.GridState.CurrentPage < exports.GridState.TotalPages) {
            exports.GridState.CurrentPage++;
            UpdateDeviceCounts();
            RenderDeviceRows();
        }
    }
    exports.PageUp = PageUp;
    function RefreshGrid() {
        exports.DataSource.splice(0);
        UI_js_3.DeviceGridBody.innerHTML = "";
        UpdateDeviceCounts();
        var xhr = new XMLHttpRequest();
        xhr.open("get", "/API/Devices");
        xhr.onerror = () => {
            UI_js_4.ShowModal("Request Failure", "Failed to retrieve device data.  Please refresh your connection or contact support.");
        };
        xhr.onload = () => {
            if (xhr.status == 200) {
                var devices = JSON.parse(xhr.responseText);
                if (devices.length == 0) {
                    Console_js_1.AddConsoleOutput("It looks like you don't have the Remotely service installed on any devices.  You can get the install script from the Client Downloads page.");
                }
                else {
                    AddOrUpdateDevices(devices);
                }
            }
            else {
                UI_js_4.ShowModal("Request Failure", "Failed to retrieve device data.  Please refresh your connection or contact support.");
            }
        };
        xhr.send();
    }
    exports.RefreshGrid = RefreshGrid;
    function ToggleSelectAll() {
        var hiddenRows = UI_js_3.DeviceGrid.querySelectorAll(".row-selected.hidden.row-selected");
        hiddenRows.forEach(x => {
            x.classList.remove("row-selected");
        });
        var currentlySelected = UI_js_3.DeviceGrid.querySelectorAll(".row-selected:not(.hidden)");
        if (currentlySelected.length > 0) {
            currentlySelected.forEach(elem => {
                elem.classList.remove("row-selected");
            });
        }
        else {
            UI_js_3.DeviceGrid.querySelectorAll(".record-row:not(.hidden)").forEach(elem => {
                elem.classList.add("row-selected");
            });
        }
        UpdateDeviceCounts();
    }
    exports.ToggleSelectAll = ToggleSelectAll;
    function UpdateDeviceCounts() {
        exports.GridState.TotalPages = Math.ceil(exports.FilteredDevices.length / exports.GridState.RowsPerPage);
        UI_js_3.TotalPagesSpan.innerHTML = String(exports.GridState.TotalPages);
        UI_js_3.CurrentPageInput.value = String(exports.GridState.CurrentPage);
        UI_js_3.DevicesSelectedCount.innerText = UI_js_3.DeviceGrid.querySelectorAll(".row-selected").length.toString();
        UI_js_3.OnlineDevicesCount.innerText = exports.FilteredDevices.filter(x => x.IsOnline).length.toString();
        UI_js_3.TotalDevicesCount.innerText = exports.FilteredDevices.length.toString();
        if (exports.FilteredDevices.some(x => !x.IsOnline &&
            document.getElementById(x.ID) &&
            document.getElementById(x.ID).classList.contains("row-selected"))) {
            Console_js_1.AddConsoleOutput(`Your selection contains offline computers.  Your commands will only be sent to those that are online.`);
        }
    }
    exports.UpdateDeviceCounts = UpdateDeviceCounts;
    function deviceMatchesSearchFilter(device) {
        if (!exports.GridState.SearchFilter) {
            return true;
        }
        for (var key in device) {
            var value = device[key];
            if (!value) {
                continue;
            }
            if (value.toString().toLowerCase().includes(exports.GridState.SearchFilter.toLowerCase())) {
                return true;
            }
        }
        return false;
    }
});
define("Shared/Models/PSCoreCommandResult", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("Shared/Models/GenericCommandResult", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("Shared/Models/CommandResult", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("Main/ResultsParser", ["require", "exports", "Main/DataGrid", "Main/UI", "Shared/Utilities"], function (require, exports, DataGrid, UI_js_5, Utilities_js_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UpdateResultsCount = exports.AddCommandResultsHarness = exports.AddPSCoreResultsHarness = exports.CreateCommandHarness = void 0;
    function CreateCommandHarness(result) {
        var collapseClass = result.TargetDeviceIDs.length > 1 ? "collapse" : "collapse show";
        var commandHarness = document.createElement("div");
        var contextID = "c" + result.ID;
        commandHarness.id = contextID;
        commandHarness.classList.add("command-harness");
        commandHarness.innerHTML = `
        <div class="command-harness-title">
            Command Type: ${result.CommandMode}  |  
            Total Devices: <span id="${contextID}-totaldevices">${result.TargetDeviceIDs.length}</span>  |  
            Completed: <span id="${contextID}-completed">0%</span>  |
            Errors: <span id="${contextID}-errors">0</span>  |  
            <button class="btn btn-sm btn-secondary" data-toggle="collapse" data-target='#${contextID}-results'>View</button> 
            <a class="btn btn-sm btn-secondary" target="_blank" href="${location.origin}/API/Commands/JSON/${result.ID}">JSON</a>
            <a class="btn btn-sm btn-secondary" target="_blank" href="${location.origin}/API/Commands/XML/${result.ID}">XML</a> 
        </div>
        <div id="${contextID}-results" class="${collapseClass}">
        </div>`;
        return commandHarness;
    }
    exports.CreateCommandHarness = CreateCommandHarness;
    function AddPSCoreResultsHarness(result) {
        var contextID = "c" + result.CommandResultID;
        var deviceName = DataGrid.DataSource.find(x => x.ID == result.DeviceID).DeviceName;
        var resultsWrapper = document.getElementById(contextID + "-results");
        var totalDevices = parseInt(document.getElementById(contextID + "-totaldevices").innerText);
        var collapseClass = totalDevices > 1 ? "collapse" : "collapse show";
        var resultDiv = document.createElement("div");
        resultDiv.innerHTML = `
        <div class="result-header">
                Device: ${deviceName}  |  
                Had Errors: ${result.ErrorOutput.length > 1 ? "Yes" : "No"}  |  
                <button class="btn btn-sm btn-secondary" data-toggle="collapse" data-target='#${contextID + result.DeviceID}-result'>View</button>
        </div>
        <div id='${contextID + result.DeviceID}-result' class="command-result-output ${collapseClass}">
            <div>Host Output:<br>${Utilities_js_2.FormatScriptOutput(result.HostOutput)}</div>
            <div>Debug Output:<br>${Utilities_js_2.FormatScriptOutputArray(result.DebugOutput)}</div>
            <div>Verbose Output:<br>${Utilities_js_2.FormatScriptOutputArray(result.VerboseOutput)}</div>
            <div>Information Output:<br>${Utilities_js_2.FormatScriptOutputArray(result.InformationOutput)}</div>
            <div>Error Output:<br>${Utilities_js_2.FormatScriptOutputArray(result.ErrorOutput)}</div>
        </div>`;
        if (result.ErrorOutput.length > 0) {
            var errorSpan = document.getElementById(contextID + "-errors");
            var currentErrors = parseInt(errorSpan.innerText);
            currentErrors += 1;
            errorSpan.innerText = String(currentErrors);
        }
        resultsWrapper.appendChild(resultDiv);
        UI_js_5.ConsoleFrame.scrollTop = UI_js_5.ConsoleFrame.scrollHeight;
    }
    exports.AddPSCoreResultsHarness = AddPSCoreResultsHarness;
    function AddCommandResultsHarness(result) {
        var contextID = "c" + result.CommandResultID;
        var deviceName = DataGrid.DataSource.find(x => x.ID == result.DeviceID).DeviceName;
        var resultsWrapper = document.getElementById(contextID + "-results");
        var totalDevices = parseInt(document.getElementById(contextID + "-totaldevices").innerText);
        var collapseClass = totalDevices > 1 ? "collapse" : "collapse show";
        var resultDiv = document.createElement("div");
        resultDiv.innerHTML = `
        <div class="result-header">
                Device: ${deviceName}  |  
                Had Errors: ${result.ErrorOutput.length > 1 ? "Yes" : "No"}  |  
                <button class="btn btn-sm btn-secondary" data-toggle="collapse" data-target="#${contextID + result.DeviceID}-result">View</button>
        </div>
        <div id="${contextID + result.DeviceID}-result" class="command-result-output ${collapseClass}">
            <div>Standard Output:<br>${Utilities_js_2.FormatScriptOutput(result.StandardOutput)}</div>
            <div>Error Output:<br>${Utilities_js_2.FormatScriptOutput(result.ErrorOutput)}</div>
        </div>`;
        if (result.ErrorOutput.length > 0) {
            var errorSpan = document.getElementById(`${contextID}-errors`);
            var currentErrors = parseInt(errorSpan.innerText);
            currentErrors += 1;
            errorSpan.innerText = String(currentErrors);
        }
        resultsWrapper.appendChild(resultDiv);
        UI_js_5.ConsoleFrame.scrollTop = UI_js_5.ConsoleFrame.scrollHeight;
    }
    exports.AddCommandResultsHarness = AddCommandResultsHarness;
    function UpdateResultsCount(commandResultID) {
        var contextID = "c" + commandResultID;
        var totalDevices = parseInt(document.getElementById(`${contextID}-totaldevices`).innerText);
        var percentComplete = Math.round(document.getElementById(`${contextID}-results`).children.length / totalDevices * 100);
        document.getElementById(`${contextID}-completed`).innerText = String(percentComplete) + "%";
    }
    exports.UpdateResultsCount = UpdateResultsCount;
});
define("Shared/Models/UserOptions", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("Main/HubConnection", ["require", "exports", "Main/DataGrid", "Main/ResultsParser", "Main/App", "Main/Console", "Main/Chat", "Shared/UI"], function (require, exports, DataGrid, ResultsParser_js_1, App_js_1, Console_js_2, Chat_js_2, UI_js_6) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Connect = exports.Connected = exports.ServiceID = exports.Connection = void 0;
    function Connect() {
        var signalR = window["signalR"];
        exports.Connection = new signalR.HubConnectionBuilder()
            .withUrl("/BrowserHub")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        applyMessageHandlers(exports.Connection);
        exports.Connection.start().catch(err => {
            console.error(err.toString());
            exports.Connected = false;
            Console_js_2.AddConsoleOutput("Your connection was lost.  Refresh the page or enter a command to reconnect.");
        }).then(() => {
            exports.Connected = true;
        });
        this.Connection.closedCallbacks.push((ev) => {
            exports.Connected = false;
            UI_js_6.ShowModal("Connection Failure", "Your connection was lost. Click Reconnect to start a new session.", `<button type="button" class="btn btn-secondary" onclick="location.reload()">Reconnect</button>`);
            Console_js_2.AddConsoleOutput("Connection lost.");
        });
    }
    exports.Connect = Connect;
    ;
    function applyMessageHandlers(hubConnection) {
        hubConnection.on("Chat", (deviceID, deviceName, message, disconnected) => {
            if (disconnected) {
                Console_js_2.AddConsoleHTML(`<span class="text-info font-italic">${deviceName} disconnected from chat.</span>`);
            }
            else if (message) {
                Console_js_2.AddConsoleHTML(`<span class="text-info font-weight-bold">Chat from ${deviceName}</span>: ${message}`);
            }
            Chat_js_2.ReceiveChatText(deviceID, deviceName, message, disconnected);
        });
        hubConnection.on("UserOptions", (options) => {
            App_js_1.MainApp.UserSettings.CommandModeShortcuts.Web = options.CommandModeShortcutWeb;
            App_js_1.MainApp.UserSettings.CommandModeShortcuts.PSCore = options.CommandModeShortcutPSCore;
            App_js_1.MainApp.UserSettings.CommandModeShortcuts.WinPS = options.CommandModeShortcutWinPS;
            App_js_1.MainApp.UserSettings.CommandModeShortcuts.Bash = options.CommandModeShortcutBash;
            App_js_1.MainApp.UserSettings.CommandModeShortcuts.CMD = options.CommandModeShortcutCMD;
            Console_js_2.AddConsoleOutput("Console connected.");
            DataGrid.RefreshGrid();
        });
        hubConnection.on("LockedOut", (args) => {
            location.assign("/Identity/Account/Lockout");
        });
        hubConnection.on("DeviceCameOnline", (device) => {
            DataGrid.AddOrUpdateDevice(device, true);
        });
        hubConnection.on("DeviceWentOffline", (device) => {
            DataGrid.AddOrUpdateDevice(device, true);
        });
        hubConnection.on("DeviceHeartbeat", (device) => {
            DataGrid.AddOrUpdateDevice(device, true);
        });
        hubConnection.on("RefreshDeviceList", () => {
            DataGrid.RefreshGrid();
        });
        hubConnection.on("PSCoreResult", (result) => {
            ResultsParser_js_1.AddPSCoreResultsHarness(result);
            ResultsParser_js_1.UpdateResultsCount(result.CommandResultID);
        });
        hubConnection.on("CommandResult", (result) => {
            ResultsParser_js_1.AddCommandResultsHarness(result);
            ResultsParser_js_1.UpdateResultsCount(result.CommandResultID);
        });
        hubConnection.on("DisplayMessage", (consoleMessage, popupMessage) => {
            if (consoleMessage) {
                Console_js_2.AddConsoleOutput(consoleMessage);
            }
            if (popupMessage) {
                UI_js_6.ShowMessage(popupMessage);
            }
        });
        hubConnection.on("DisplayConsoleHTML", (message) => {
            Console_js_2.AddConsoleHTML(message);
        });
        hubConnection.on("DownloadFile", (fileID) => {
            location.assign(`/API/FileSharing/${fileID}`);
        });
        hubConnection.on("DownloadFileProgress", (progressPercent) => {
            Console_js_2.AddConsoleOutput(`Remote computer upload progress: ${progressPercent}%`);
        });
        hubConnection.on("TransferCompleted", (transferID) => {
            var completedWrapper = document.getElementById(transferID + "-completed");
            var count = parseInt(completedWrapper.innerHTML);
            completedWrapper.innerHTML = (count + 1).toString();
        });
        hubConnection.on("PSCoreResultViaAjax", (commandID, deviceID) => {
            var targetURL = `${location.origin}/API/Commands/PSCoreResult/${commandID}/${deviceID}`;
            var xhr = new XMLHttpRequest();
            xhr.open("get", targetURL);
            xhr.onload = function () {
                if (xhr.status == 200) {
                    ResultsParser_js_1.AddPSCoreResultsHarness(JSON.parse(xhr.responseText));
                    ResultsParser_js_1.UpdateResultsCount(commandID);
                }
            };
            xhr.send();
        });
        hubConnection.on("WinPSResultViaAjax", (commandID, deviceID) => {
            var targetURL = `${location.origin}/API/Commands/WinPSResult/${commandID}/${deviceID}`;
            var xhr = new XMLHttpRequest();
            xhr.open("get", targetURL);
            xhr.onload = function () {
                if (xhr.status == 200) {
                    ResultsParser_js_1.AddCommandResultsHarness(JSON.parse(xhr.responseText));
                    ResultsParser_js_1.UpdateResultsCount(commandID);
                }
            };
            xhr.send();
        });
        hubConnection.on("CMDResultViaAjax", (commandID, deviceID) => {
            var targetURL = `${location.origin}/API/Commands/PSCoreResult/${commandID}/${deviceID}`;
            var xhr = new XMLHttpRequest();
            xhr.open("get", targetURL);
            xhr.onload = function () {
                if (xhr.status == 200) {
                    ResultsParser_js_1.AddCommandResultsHarness(JSON.parse(xhr.responseText));
                    ResultsParser_js_1.UpdateResultsCount(commandID);
                }
            };
            xhr.send();
        });
        hubConnection.on("BashResultViaAjax", (commandID, deviceID) => {
            var targetURL = `${location.origin}/API/Commands/PSCoreResult/${commandID}/${deviceID}`;
            var xhr = new XMLHttpRequest();
            xhr.open("get", targetURL);
            xhr.onload = function () {
                if (xhr.status == 200) {
                    ResultsParser_js_1.AddCommandResultsHarness(JSON.parse(xhr.responseText));
                    ResultsParser_js_1.UpdateResultsCount(commandID);
                }
            };
            xhr.send();
        });
        hubConnection.on("CommandResultCreated", (result) => {
            Console_js_2.AddConsoleHTML(ResultsParser_js_1.CreateCommandHarness(result).outerHTML);
        });
        hubConnection.on("ServiceID", (serviceID) => {
            exports.ServiceID = serviceID;
        });
        hubConnection.on("UnattendedSessionReady", (rcConnectionID) => {
            window.open(`/RemoteControl?clientID=${rcConnectionID}&serviceID=${exports.ServiceID}`, "_blank");
        });
    }
});
define("Shared/Models/Parameter", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Parameter = void 0;
    /**A parameter definition for Command Completion. */
    class Parameter {
        constructor(name, summary, parameterType) {
            this.Name = name;
            this.Summary = summary;
            this.ParameterType = parameterType;
        }
    }
    exports.Parameter = Parameter;
});
define("Shared/Models/CommandLineParameter", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CommandLineParameter = void 0;
    class CommandLineParameter {
        constructor(name, value) {
            this.Name = name;
            this.Value = value;
        }
    }
    exports.CommandLineParameter = CommandLineParameter;
});
define("Shared/Models/ConsoleCommand", ["require", "exports", "Shared/Utilities"], function (require, exports, Utilities_js_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ConsoleCommand = void 0;
    class ConsoleCommand {
        constructor(name, parameters, summary, syntax, extendedHelp, callback) {
            this.Name = name;
            this.Parameters = parameters;
            this.Summary = summary;
            this.Syntax = syntax;
            this.ExtendedHelp = extendedHelp;
            this.Callback = callback;
        }
        get FullHelp() {
            if (this.ExtendedHelp) {
                var fullHelp = this.PartialHelp.substring(0, this.PartialHelp.lastIndexOf("</div>"));
                fullHelp += "<br><br><span class='extended-help'>Extended Help:</span><br>" + this.ExtendedHelp + "</div>";
                return fullHelp;
            }
            else {
                return this.PartialHelp;
            }
        }
        get PartialHelp() {
            var partialHelp = `<div class='help-wrapper'>
                            <div>
                                <span class="text-primary">Summary: </span>
                                ${Utilities_js_3.EncodeForHTML(this.Summary)}
                            </div>
                            <div>
                                <span class="text-success">Syntax: </span>
                                <span class="label label-default code">${Utilities_js_3.EncodeForHTML(this.Syntax).trim()}</span>
                            </div>`;
            if (this.Parameters.length > 0) {
                partialHelp += "<br>";
                partialHelp += `<div class='text-info'>Parameters:</div> <div>`;
                for (var i = 0; i < this.Parameters.length; i++) {
                    var paramText = "";
                    if (this.Parameters[i].ParameterType) {
                        paramText = ` [${Utilities_js_3.EncodeForHTML(this.Parameters[i].ParameterType)}]`;
                    }
                    partialHelp += `<div>-${Utilities_js_3.EncodeForHTML(this.Parameters[i].Name)}${Utilities_js_3.EncodeForHTML(paramText)}: ${Utilities_js_3.EncodeForHTML(this.Parameters[i].Summary).trim()}</div>`;
                }
                partialHelp += "</div>";
            }
            partialHelp += "</div>";
            return partialHelp;
        }
        Execute(parameters) {
            var paramDictionary = {};
            parameters.forEach(x => {
                paramDictionary[x.Name.toLowerCase()] = x.Value;
            });
            this.Callback(parameters, paramDictionary);
        }
    }
    exports.ConsoleCommand = ConsoleCommand;
});
define("Main/Commands/WebCommands", ["require", "exports", "Shared/Models/ConsoleCommand", "Shared/Models/Parameter", "Main/UI", "Main/HubConnection", "Main/App", "Main/DataGrid", "Main/Console", "Main/DataGrid"], function (require, exports, ConsoleCommand_js_1, Parameter_js_1, UI, HubConnection, App_js_2, DataGrid, Console_js_3, DataGrid_js_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WebCommands = void 0;
    var commands = [
        new ConsoleCommand_js_1.ConsoleCommand("Chat", [
            new Parameter_js_1.Parameter("message", "The message to send to the remote device.", "String")
        ], "Start a chat session with the selected device.", "chat -message Hey, this is your IT guy.", "", (parameters, paramaterDict) => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("You must select a device first.");
                return;
            }
            HubConnection.Connection.invoke("Chat", paramaterDict["message"], selectedDevices.map(x => x.ID));
        }),
        new ConsoleCommand_js_1.ConsoleCommand("DeployScript", [
            new Parameter_js_1.Parameter("pscore", "Indicates that script should be run with PowerShell Core.", "Switch"),
            new Parameter_js_1.Parameter("winps", "Indicates that script should be run with Windows PowerShell.", "Switch"),
            new Parameter_js_1.Parameter("cmd", "Indicates that script should be run with Windows CMD.", "Switch"),
            new Parameter_js_1.Parameter("bash", "Indicates that script should be run with Bash.", "Switch")
        ], "Deploy and run a script on the selected device(s).  Note: Only one switch argument can be used.", "deployscript -pscore", "", (parameters, parameterDict) => {
            if (parameters.length != 1) {
                Console_js_3.AddConsoleOutput("There should be exactly 1 argument to indicate the script type.");
                return;
            }
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
                return;
            }
            var fileInput = document.createElement("input");
            fileInput.type = "file";
            fileInput.hidden = true;
            document.body.appendChild(fileInput);
            fileInput.onchange = () => {
                uploadFiles(fileInput.files).then(value => {
                    HubConnection.Connection.invoke("DeployScript", value[0], parameters[0].Name, selectedDevices.map(x => x.ID));
                    fileInput.remove();
                });
            };
            fileInput.click();
        }),
        new ConsoleCommand_js_1.ConsoleCommand("DownloadFile", [
            new Parameter_js_1.Parameter("path", "The path on the remote computer of the file to download.", "String"),
        ], "Download a file from the remote computer.", `DownloadFile -path "C:\Users\Me\Pictures\ThatFunnyPic.png"`, "", (parameters, paramDictionary) => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
                return;
            }
            ;
            HubConnection.Connection.invoke("DownloadFile", paramDictionary["path"], selectedDevices[0].ID);
        }),
        new ConsoleCommand_js_1.ConsoleCommand("GetLogs", [], "Retrieve the logs from the remote agent.", "GetLogs", "", (parameters, paramDictionary) => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
                return;
            }
            ;
            HubConnection.Connection.invoke("ExecuteCommandOnClient", "PSCore", 'Get-Content -Path "$([System.IO.Path]::GetTempPath())\\Remotely_Logs.log"', selectedDevices.map(x => x.ID));
        }),
        new ConsoleCommand_js_1.ConsoleCommand("GetVersion", [], "Display the remote agent's version.", "GetVersion", "", (parameters, paramDictionary) => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
                return;
            }
            ;
            var output = `<div>Version Results:</div>
                            <table class="console-device-table table table-responsive">
                            <thead><tr>
                            <th>Device Name</th><th>Agent Version</th>
                            </tr></thead>`;
            var deviceList = selectedDevices.map(x => {
                return `<tr>
                        <td>${x.DeviceName}</td>
                        <td>
                            ${x.AgentVersion}
                        </td>
                        </tr>`;
            });
            output += deviceList.join("");
            output += "</table>";
            Console_js_3.AddConsoleOutput(output);
        }),
        new ConsoleCommand_js_1.ConsoleCommand("Clear", [], "Clears the output window of text.", "clear", "", (parameters, paramDictionary) => { UI.ConsoleOutputDiv.innerHTML = ""; }),
        new ConsoleCommand_js_1.ConsoleCommand("Connect", [], "Connect or reconnect to the server.", "connect", "", (parameters, paramDictionary) => { HubConnection.Connect(); }),
        new ConsoleCommand_js_1.ConsoleCommand("Echo", [
            new Parameter_js_1.Parameter("message", "The text to display in the console.", "String")
        ], "Writes a message to the console window.", "echo -message This will appear in the console.", "", (parameters, paramDictionary) => {
            Console_js_3.AddConsoleOutput(paramDictionary["message"]);
        }),
        new ConsoleCommand_js_1.ConsoleCommand("ExpandResults", [], "Expands the results of the last scripting command.", "expandresults", "", (parameters, paramDictionary) => {
            $(UI.ConsoleOutputDiv).find(".command-harness").last().find(".collapse")['collapse']('show');
        }),
        new ConsoleCommand_js_1.ConsoleCommand("CollapseResults", [], "Collapses all scripting results.", "collapseresults", "", (parameters, paramDictionary) => {
            $(UI.ConsoleOutputDiv).find(".command-harness").find(".collapse")['collapse']('hide');
        }),
        new ConsoleCommand_js_1.ConsoleCommand("Help", [
            new Parameter_js_1.Parameter("command", "The name of the command to look up.", "String")
        ], "Displays the full help text for a command.", "help -command Select", "", (parameters) => {
            if (parameters.length == 0) {
                var output = `Command List:<br><div class="help-list">`;
                exports.WebCommands.forEach(x => {
                    output += `<div>${x.Name}</div><div>${x.Summary}</div>`;
                });
                output += "</div>";
                Console_js_3.AddConsoleOutput(output);
                return;
            }
            var suppliedCommand = parameters.find(x => x.Name.toLowerCase() == "command") || {};
            var result = commands.filter(command => {
                return command.Name.toLowerCase() == (suppliedCommand.Value || "").toLowerCase();
            });
            if (result.length == 0) {
                Console_js_3.AddConsoleOutput("No matching commands found.");
            }
            else if (result.length == 1) {
                Console_js_3.AddConsoleHTML("<br>" + result[0].FullHelp);
            }
            else {
                var outputText = "Multiple commands found: <br><br>";
                for (var i = 0; i < result.length; i++) {
                    outputText += result[i].Name + "<br>";
                }
                Console_js_3.AddConsoleHTML(outputText);
            }
        }),
        new ConsoleCommand_js_1.ConsoleCommand("List", [], "Displays a list of the currently-selected devices.", "list", "", () => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
                return;
            }
            var output = `<div>Selected Devices:</div>
                            <table class="console-device-table table table-responsive">
                            <thead><tr>
                            <th>Online</th><th>Device Name</th><th>Alias</th><th>Current User</th><th>Last Online</th><th>Platform</th><th>OS Description</th><th>Free Storage</th><th>Total Storage (GB)</th><th>Free Memory</th><th>Total Memory (GB)</th><th>Tags</th>
                            </tr></thead>`;
            var deviceList = selectedDevices.map(x => {
                return `<tr>
                        <td>${String(x.IsOnline)
                    .replace("true", "<span class='fa fa-check-circle'></span>")
                    .replace("false", "<span class='fa fa-times'></span>")}</td>
                        <td>${x.DeviceName}</td>
                        <td>${x.Alias}</td>
                        <td>${x.CurrentUser}</td>
                        <td>${new Date(x.LastOnline).toLocaleString()}</td>
                        <td>${x.Platform}</td>
                        <td>${x.OSDescription}</td>
                        <td>${Math.round(x.UsedStorage / x.TotalStorage * 100)}%</td>
                        <td>${x.TotalStorage.toLocaleString()}</td>
                        <td>${Math.round(x.UsedMemory / x.TotalMemory * 100)}%</td>
                        <td>${x.TotalMemory.toLocaleString()}</td>
                        <td>${x.Tags || ""}</td>
                        </tr>`;
            });
            output += deviceList.join("");
            output += "</table>";
            Console_js_3.AddConsoleOutput(output);
        }),
        new ConsoleCommand_js_1.ConsoleCommand("Remove", [], "Removes the selected devices from the database.  (Note: This does not attempt to uninstall the client.  Use Uninstall.)", "remove", "", (parameters) => {
            var devices = DataGrid.GetSelectedDevices();
            if (devices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
            }
            else {
                HubConnection.Connection.invoke("RemoveDevices", devices.map(x => x.ID));
            }
        }),
        new ConsoleCommand_js_1.ConsoleCommand("Select", [
            new Parameter_js_1.Parameter("all", "If specified, all devices will be selected.", "Switch"),
            new Parameter_js_1.Parameter("none", "If specified, no devices will be selected.", "Switch"),
            new Parameter_js_1.Parameter("online", "If specified, selects the devices that are currently online.", "Switch"),
            new Parameter_js_1.Parameter("filter", "A comma-separated list of search filters (spaces are optional).  See the help article for more details.", "String"),
            new Parameter_js_1.Parameter("append", "If specified, selected devices will be added list of computers already selected (if any).", "Switch"),
        ], "Selects devices based on a supplied filter.", "select -filter isonline=true, devicename*Rig, freestorage<50", `The filter contains a comma-separated list of fields to search, and devices that match all filters will be selected.
            There are multiple operator types, and they can be used on any of the fields on the grid (plus some extra hidden ones).<br><br>
            Operators:<br>
            <ul style="list-style:none">
                <li>=&nbsp;&nbsp;&nbsp;  Exactly equal to. "devicename=myrig" would match "MyRig", but not "MyRig2"</li>
                <li>*&nbsp;&nbsp;&nbsp;  Like. "currentuser*bus" would match "Business" and "A_Busy_User"</li>
                <li>!=&nbsp;&nbsp;       Not equal to. "currentuser!=jon" would match every user except "Jon"</li>
                <li>!*&nbsp;&nbsp;       Not like. "currentuser!*jon" would match "Jon", "Jonathan", and "SuperJon"</li>
                <li>>&nbsp;&nbsp;&nbsp;  Greater than. "totalmemory>10" would match computers with more than 10GB of RAM</li>
                <li><&nbsp;&nbsp;&nbsp;  Less than. "freestorage<0.1" would match computers with less than 10% disk space left</li>
            </ul>

            Fields:<br>
                <ul style="list-style:none">
                    <li>IsOnline (true or false)</li>
                    <li>DeviceName (text)</li>
                    <li>Alias (text)</li>
                    <li>CurrentUser (text)</li>
                    <li>LastOnline (date or date+time</li>
                    <li>Is64Bit (true or false)</li>
                    <li>OSDescription (text)</li>
                    <li>Platform (text)</li>
                    <li>FreeStorage (between 0 and 1)</li>
                    <li>TotalStorage (number in GB)</li>
                    <li>FreeMemory (between 0 and 1)</li>
                    <li>TotalMemory (number in GB)</li>
                    <li>ProcessorCount (number)</li>
                    <li>PublicIP (string)</li>
                    <li>Tags (text)</li>
                    <li>Notes (text)</li>
                </ul>`, (parameters, paramDictionary) => {
            if (typeof paramDictionary["all"] != "undefined") {
                App_js_2.MainApp.DataGrid.DataSource.forEach(x => {
                    document.getElementById(x.ID).classList.add("row-selected");
                });
                Console_js_3.AddConsoleOutput(`${DataGrid_js_2.GetSelectedDevices().length} devices selected.`);
            }
            if (typeof paramDictionary["none"] != "undefined") {
                App_js_2.MainApp.UI.DeviceGrid.querySelectorAll(".row-selected").forEach(x => {
                    x.classList.remove("row-selected");
                });
                Console_js_3.AddConsoleOutput(`${DataGrid_js_2.GetSelectedDevices().length} devices selected.`);
            }
            if (typeof paramDictionary["online"] != "undefined") {
                App_js_2.MainApp.DataGrid.DataSource.filter(x => x.IsOnline).forEach(x => {
                    document.getElementById(x.ID).classList.add("row-selected");
                });
                Console_js_3.AddConsoleOutput(`${DataGrid_js_2.GetSelectedDevices().length} devices selected.`);
            }
            if (typeof paramDictionary["filter"] != "undefined") {
                try {
                    var lambda = "";
                    var filterString = paramDictionary["filter"];
                    var filters = filterString.split(",");
                    filters.forEach(filter => {
                        var operatorIndex = filter.search(/([^\w|\d|\s])/i);
                        var valueIndex = filter.slice(operatorIndex).search(/([\w|\d|\s|.])/i) + operatorIndex;
                        var key = filter.slice(0, operatorIndex).trim().toLowerCase();
                        var operator = filter.slice(operatorIndex, valueIndex).trim().toLowerCase();
                        var value = filter.slice(valueIndex).trim().toLowerCase();
                        console.log(`Searching by key ${key}, operator ${operator}, value ${value}`);
                        if (key == "lastonline") {
                            var parsedDate = Date.parse(value);
                            switch (operator) {
                                case "=":
                                case "*":
                                case "!=":
                                case "!*":
                                    Console_js_3.AddConsoleOutput("Only < and > operators can be used with dates.");
                                    return;
                                case ">":
                                    lambda += `Date.parse(x[Object.keys(x).find(y=>y.toLowerCase().indexOf("${key}") > -1)]) > ${parsedDate} && `;
                                    break;
                                case "<":
                                    lambda += `Date.parse(x[Object.keys(x).find(y=>y.toLowerCase().indexOf("${key}") > -1)]) < ${parsedDate} && `;
                                    break;
                                default:
                                    throw "Unable to parse comparison operator.";
                            }
                        }
                        else {
                            switch (operator) {
                                case "=":
                                    lambda += `(String(x[Object.keys(x).find(y=>y.toString().toLowerCase().indexOf("${key}") > -1)])).toLowerCase() === "${value}".toString().toLowerCase() && `;
                                    break;
                                case "*":
                                    lambda += `(String(x[Object.keys(x).find(y=>y.toString().toLowerCase().indexOf("${key}") > -1)])).toLowerCase().search("${value}".toString().toLowerCase()) > -1 && `;
                                    break;
                                case "!=":
                                    lambda += `(String(x[Object.keys(x).find(y=>y.toString().toLowerCase().indexOf("${key}") > -1)])).toLowerCase() !== "${value}".toString().toLowerCase() && `;
                                    break;
                                case "!*":
                                    lambda += `(String(x[Object.keys(x).find(y=>y.toString().toLowerCase().indexOf("${key}") > -1)])).toLowerCase().search("${value}".toString().toLowerCase()) === -1 && `;
                                    break;
                                case ">":
                                    lambda += `parseFloat(x[Object.keys(x).find(y=>y.toString().toLowerCase().indexOf("${key}") > -1)]) > parseFloat("${value}") && `;
                                    break;
                                case "<":
                                    lambda += `parseFloat(x[Object.keys(x).find(y=>y.toString().toLowerCase().indexOf("${key}") > -1)]) < parseFloat("${value}") && `;
                                    break;
                                default:
                                    throw "Unable to parse comparison operator.";
                            }
                        }
                    });
                }
                catch (ex) {
                    Console_js_3.AddConsoleOutput("Unable to parse filter.  Please check your syntax.");
                    console.error(ex);
                    return;
                }
                lambda = lambda.slice(0, lambda.lastIndexOf(" &&"));
                if (paramDictionary["append"] != "true") {
                    App_js_2.MainApp.UI.DeviceGrid.querySelectorAll(".row-selected").forEach(x => {
                        x.classList.remove("row-selected");
                    });
                }
                var selectedDevices = App_js_2.MainApp.DataGrid.DataSource.filter(x => {
                    try {
                        return eval(lambda);
                    }
                    catch (_a) {
                        return false;
                    }
                });
                selectedDevices.forEach(x => {
                    document.getElementById(x.ID).classList.add("row-selected");
                });
                Console_js_3.AddConsoleOutput(`${DataGrid_js_2.GetSelectedDevices().length} devices selected.`);
            }
            App_js_2.MainApp.DataGrid.UpdateDeviceCounts();
        }),
        new ConsoleCommand_js_1.ConsoleCommand("RemoteControl", [], "Connect to a computer with Remotely Remote Control.", "remotecontrol", "", () => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("You must select a device first.");
                return;
            }
            if (selectedDevices.length > 1) {
                Console_js_3.AddConsoleOutput("You can only initiate remote control on one device at a time.");
                return;
            }
            Console_js_3.AddConsoleOutput("Launching remote control on client device...");
            HubConnection.Connection.invoke("RemoteControl", selectedDevices[0].ID);
        }),
        new ConsoleCommand_js_1.ConsoleCommand("Uninstall", [], "Uninstalls the Remotely client from the selected devices.  Warning: This can't be undone from the web portal.  You would need to redeploy the client.", "uninstall", "", (parameters, parameterDict) => {
            var selectedDevices = DataGrid.GetSelectedDevices();
            HubConnection.Connection.invoke("UninstallClients", selectedDevices.map(x => x.ID));
        }),
        new ConsoleCommand_js_1.ConsoleCommand("SetTags", [
            new Parameter_js_1.Parameter("Tags", "The tags to set for the device. Max length is 200 characters.", "String"),
            new Parameter_js_1.Parameter("Append", "Append the tags to any existing ones.", "Switch")
        ], "Set the tag/description for the selected devices.  Max length is 200 characters.", "SetTags -tags John's computer, Portland office, desktop", "", (parameters, parameterDict) => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
                return;
            }
            selectedDevices.forEach(x => {
                if (typeof parameterDict["append"] != 'undefined') {
                    var separator = x.Tags.trim().endsWith(",") ? " " : ", ";
                    parameterDict["tags"] = x.Tags.trim() + separator + parameterDict["tags"];
                }
                DataGrid.DataSource.find(y => y.ID == x.ID).Tags = parameterDict["tags"];
                HubConnection.Connection.invoke("UpdateTags", x.ID, parameterDict["tags"]);
            });
        }),
        new ConsoleCommand_js_1.ConsoleCommand("UploadFiles", [], "Upload file(s) to the selected devices.  The files get saved in C:\\Windows\\Temp on the remote computer.", "uploadfiles", "", (parameters, parameterDict) => {
            var selectedDevices = App_js_2.MainApp.DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                Console_js_3.AddConsoleOutput("No devices are selected.");
                return;
            }
            var transferID = App_js_2.MainApp.Utilities.CreateGUID();
            Console_js_3.AddTransferHarness(transferID, selectedDevices.length);
            var fileInput = document.createElement("input");
            fileInput.type = "file";
            fileInput.hidden = true;
            fileInput.multiple = true;
            document.body.appendChild(fileInput);
            fileInput.onchange = () => {
                uploadFiles(fileInput.files).then(value => {
                    HubConnection.Connection.invoke("UploadFiles", value, transferID, selectedDevices.map(x => x.ID));
                    fileInput.remove();
                });
            };
            fileInput.click();
        })
    ];
    function uploadFiles(fileList) {
        return new Promise((resolve, reject) => {
            Console_js_3.AddConsoleOutput("File upload started.");
            var strPath = "/API/FileSharing/";
            var fd = new FormData();
            for (var i = 0; i < fileList.length; i++) {
                fd.append('fileUpload' + i, fileList[i]);
            }
            var xhr = new XMLHttpRequest();
            xhr.open('POST', strPath, true);
            xhr.addEventListener("load", function () {
                if (xhr.status === 200) {
                    Console_js_3.AddConsoleOutput("File upload completed.  It might take a while for the agent to download it.");
                    resolve(JSON.parse(xhr.responseText));
                }
                else {
                    Console_js_3.AddConsoleOutput("File upload failed.");
                    reject();
                }
            });
            xhr.addEventListener("error", () => {
                Console_js_3.AddConsoleOutput("File upload failed.");
                reject();
            });
            xhr.upload.onprogress = (e) => {
                var currentPercent = isFinite(e.loaded / e.total) ? Math.round(e.loaded / e.total * 100) : 0;
                if (currentPercent > uploadPercent) {
                    var uploadPercent = currentPercent;
                    Console_js_3.AddConsoleOutput("File upload progress: " + String(currentPercent) + "%");
                }
            };
            xhr.send(fd);
        });
    }
    exports.WebCommands = commands;
});
define("Main/Commands/CMDCommands", ["require", "exports", "Shared/Models/ConsoleCommand", "Shared/Models/Parameter"], function (require, exports, ConsoleCommand_js_2, Parameter_js_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CMDCommands = void 0;
    var commands = [
        new ConsoleCommand_js_2.ConsoleCommand(`append`, [
            new Parameter_js_2.Parameter(`[<Drive>:]<Path>`, `Specifies a drive and directory to append.`, ``),
            new Parameter_js_2.Parameter(`/x:on`, `Applies appended directories to file searches and launching applications.`, ``),
            new Parameter_js_2.Parameter(`/x:off`, `Applies appended directories only to requests to open files.</br>/x:off is the default setting.`, ``),
            new Parameter_js_2.Parameter(`/path:on`, `Applies appended directories to file requests that already specify a path. /path:on is the default setting.`, ``),
            new Parameter_js_2.Parameter(`/path:off`, `Turns off the effect of /path:on.`, ``),
            new Parameter_js_2.Parameter(`/e`, `Stores a copy of the appended directory list in an environment variable named APPEND. /e may be used only the first time you use append after starting your system.`, ``),
            new Parameter_js_2.Parameter(`;`, `Clears the appended directory list.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Allows programs to open data files in specified directories as if they were in the current directory. If used without parameters, append displays the appended directory list.`, `append [[<Drive>:]<Path>[;...]] [/x[:on|:off]] [/path:[:on|:off] [/e] 

append ;`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`arp`, [
            new Parameter_js_2.Parameter(`/a [<Inetaddr>] [/n <ifaceaddr>]`, `Displays current arp cache tables for all interfaces. The /n parameter is case-sensitive.<br /><br />To display the arp cache entry for a specific IP address, use arp /a with the *Inetaddr* parameter, where *Inetaddr* is an IP address. If *Inetaddr* is not specified, the first applicable interface is used.<br /><br />To display the arp cache table for a specific interface, use the /n*ifaceaddr* parameter in conjunction with the /a parameter where *ifaceaddr* is the IP address assigned to the interface.`, ``),
            new Parameter_js_2.Parameter(`/g [<Inetaddr>] [/n <ifaceaddr>]`, `Identical to /a.`, ``),
            new Parameter_js_2.Parameter(`[/d <Inetaddr> [<ifaceaddr>]`, `deletes an entry with a specific IP address, where *Inetaddr* is the IP address.<br /><br />To delete an entry in a table for a specific interface, use the *ifaceaddr* parameter where *ifaceaddr* is the IP address assigned to the interface.<br /><br />To delete all entries, use the asterisk (*) wildcard character in place of *Inetaddr*.`, ``),
            new Parameter_js_2.Parameter(`/s <Inetaddr> <Etheraddr> [<ifaceaddr>]`, `adds a static entry to the arp cache that resolves the IP address *Inetaddr* to the physical address *Etheraddr*.<br /><br />To add a static arp cache entry to the table for a specific interface, use the *ifaceaddr* parameter where *ifaceaddr* is an IP address assigned to the interface.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays and modifies entries in the Address Resolution Protocol (ARP) cache. The ARP cache contains one or more tables that are used to store IP addresses and their resolved Ethernet or Token Ring physical addresses. There is a separate table for each Ethernet or Token Ring network adapter installed on your computer. Used without parameters, arp displays help information.`, `arp [/a [<Inetaddr>] [/n <ifaceaddr>]] [/g [<Inetaddr>] [-n <ifaceaddr>]] [/d <Inetaddr> [<ifaceaddr>]] [/s <Inetaddr> <Etheraddr> [<ifaceaddr>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`assoc`, [
            new Parameter_js_2.Parameter(`<.ext>`, `Specifies the file name extension.`, ``),
            new Parameter_js_2.Parameter(`<FileType>`, `Specifies the file type to associate with the specified file name extension.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or modifies file name extension associations. If used without parameters, assoc displays a list of all the current file name extension associations.`, `assoc [<.ext>[=[<FileType>]]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`at`, [
            new Parameter_js_2.Parameter(`\\<computerName>`, `Specifies a remote computer. If you omit this parameter, at schedules the commands and programs on the local computer.`, ``),
            new Parameter_js_2.Parameter(`<id>`, `Specifies the identification number assigned to a scheduled command.`, ``),
            new Parameter_js_2.Parameter(`/delete`, `Cancels a scheduled command. If you omit *ID*, all of the scheduled commands on the computer are canceled.`, ``),
            new Parameter_js_2.Parameter(`/yes`, `Answers yes to all queries from the system when you delete scheduled events.`, ``),
            new Parameter_js_2.Parameter(`<time>`, `Specifies the time when you want to run the command. time is expressed as Hours:Minutes in 24-hour notation (that is, 00:00 [midnight] through 23:59).`, ``),
            new Parameter_js_2.Parameter(`/interactive`, `Allows *command* to interact with the desktop of the user who is logged on at the time *Command* runs.`, ``),
            new Parameter_js_2.Parameter(`/every:`, `Runs *command* on every specified day or days of the week or month (for example, every Thursday, or the third day of every month).`, ``),
            new Parameter_js_2.Parameter(`<date>`, `Specifies the date when you want to run the command. You can specify one or more days of the week (that is, type M,T,W,Th,F,S,Su) or one or more days of the month (that is, type 1 through 31). Separate multiple date entries with commas. If you omit *date*, at uses the current day of the month.`, ``),
            new Parameter_js_2.Parameter(`/next:`, `Runs *command* on the next occurrence of the day (for example, next Thursday).`, ``),
            new Parameter_js_2.Parameter(`<command>`, `Specifies the Windows command, program (that is, .exe or .com file), or batch program (that is, .bat or .cmd file) that you want to run. When the command requires a path as an argument, use the absolute path (that is, the entire path beginning with the drive letter). If the command is on a remote computer, specify Universal Naming Convention (UNC) notation for the server and share name, rather than a remote drive letter.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Schedules commands and programs to run on a computer at a specified time and date. You can use at only when the Schedule service is running. Used without parameters, at lists scheduled commands.`, `at [\\computername] [[id] [/delete] | /delete [/yes]]

at [\\computername] <time> [/interactive] [/every:date[,...] | /next:date[,...]] <command>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`atmadm`, [
            new Parameter_js_2.Parameter(`/c`, `Displays call information for all current connections to the atM network adapter installed on this computer.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Displays the registered atM network service access point (NSAP) address for each adapter installed in this computer.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Displays statistics for monitoring the status of active atM connections.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Monitors connections and addresses that are registered by the atM call Manager on an asynchronous transfer mode (atM) network. You can use atmadm to display statistics for incoming and outgoing calls on atM adapters. Used without parameters, atmadm displays statistics for monitoring the status of active atM connections. `, `atmadm [/c][/a][/s]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`attrib`, [
            new Parameter_js_2.Parameter(`{+|-}r`, `Sets (+) or clears (-) the Read-only file attribute.`, ``),
            new Parameter_js_2.Parameter(`{+|-}a`, `Sets (+) or clears (-) the Archive file attribute.`, ``),
            new Parameter_js_2.Parameter(`{+|-}s`, `Sets (+) or clears (-) the System file attribute.`, ``),
            new Parameter_js_2.Parameter(`{+|-}h`, `Sets (+) or clears (-) the Hidden file attribute.`, ``),
            new Parameter_js_2.Parameter(`{+|-}i`, `Sets (+) or clears (-) the Not Content Indexed file attribute.`, ``),
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>][<FileName>]`, `Specifies the location and name of the directory, file, or group of files for which you want to display or change attributes. You can use the ? and * wildcard characters in the *FileName* parameter to display or change the attributes for a group of files.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Applies attrib and any command-line options to matching files in the current directory and all of its subdirectories.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Applies attrib and any command-line options to directories.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Applies attrib and any command-line options to the Symbolic Link, rather than the target of the Symbolic Link.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays, sets, or removes attributes assigned to files or directories. If used without parameters, attrib displays attributes of all files in the current directory.`, `attrib [{+|-}r] [{+|-}a] [{+|-}s] [{+|-}h] [{+|-}i] [<Drive>:][<Path>][<FileName>] [/s [/d] [/l]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`auditpol`, [
            new Parameter_js_2.Parameter(`/get`, `Displays the current audit policy.</br>See [Auditpol get](auditpol-get.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/set`, `Sets the audit policy.</br>See [Auditpol set](auditpol-set.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/list`, `Displays selectable policy elements.</br>See [Auditpol list](auditpol-list.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/backup`, `Saves the audit policy to a file.</br>See [Auditpol backup](auditpol-backup.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/restore`, `Restores the audit policy from a file that was previously created by using auditpol /backup.</br>See [Auditpol restore](auditpol-restore.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/clear`, `Clears the audit policy.</br>See [Auditpol clear](auditpol-clear.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/remove`, `Removes all per-user audit policy settings and disables all system audit policy settings.</br>See [Auditpol remove](auditpol-remove.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/resourceSACL`, `Configures global resource system access control lists (SACLs).</br>Note: Applies only to Windows 7 and Windows Server 2008 R2.</br>See [Auditpol resourceSACL](auditpol-resourcesacl.md).`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays information about and performs functions to manipulate audit policies.`, `Auditpol command [<sub-command><options>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`autochk`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Runs when the computer is started and prior to Windows ServerÂ® 2008 R2 starting to verify the logical integrity of a file system.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`autoconv`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `converts file allocation table (Fat) and Fat32 volumes to the NTFS file system, leaving existing files and directories intact at startup after autochk runs. volumes converted to the NTFS file system cannot be converted back to Fat or Fat32.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`autofmt`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Formats a drive or partition when called from the Windows Recovery Console.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`bcdboot`, [
            new Parameter_js_2.Parameter(`source`, `Specifies the location of the Windows directory to use as the source for copying boot environment files.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Specifies the locale. The default locale is US English.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Specifies the volume letter of the system partition. The default is the system partition identified by the firmware.`, ``),
        ], `Enables you to quickly set up a system partition, or to repair the boot environment located on the system partition. The system partition is set up by copying a simple set of Boot Configuration Data (BCD) files to an existing empty partition.`, `bcdboot <source> [/l] [/s]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`bcdedit`, [
            new Parameter_js_2.Parameter(`/?`, `Displays a list of BCDEdit commands. Running this command without an argument displays a summary of the available commands. To display detailed help for a particular command, run bcdedit /? <command>, where <command> is the name of the command you are searching for more information about. For example, bcdedit /? createstore displays detailed help for the Createstore command.`, ``),
        ], `Boot Configuration Data (BCD) files provide a store that is used to describe boot applications and boot application settings. The objects and elements in the store effectively replace Boot.ini.`, `BCDEdit /Command [<Argument1>] [<Argument2>] ...`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`bdehdcfg`, [
            new Parameter_js_2.Parameter(`[Bdehdcfg: driveinfo](bdehdcfg-driveinfo.md)`, `Displays the drive letter, the total size, the maximum free space, and the partition characteristics of the partitions on the drive specified. Only valid partitions are listed. Unallocated space is not listed if four primary or extended partitions already exist.`, ``),
            new Parameter_js_2.Parameter(`[Bdehdcfg: target](bdehdcfg-target.md)`, `Defines which portion of a drive to use as the system drive and makes the portion active.`, ``),
            new Parameter_js_2.Parameter(`[Bdehdcfg: newdriveletter](bdehdcfg-newdriveletter.md)`, `Assigns a new drive letter to the portion of a drive used as the system drive.`, ``),
            new Parameter_js_2.Parameter(`[Bdehdcfg: size](bdehdcfg-size.md)`, `Determines the size of the system partition when a new system drive is being created.`, ``),
            new Parameter_js_2.Parameter(`[Bdehdcfg: quiet](bdehdcfg-quiet.md)`, `Prevents the display of all actions and errors in the command-line interface and directs Bdehdcfg to use the "Yes" answer to any Yes/No prompts that may occur during subsequent drive preparation.`, ``),
            new Parameter_js_2.Parameter(`[Bdehdcfg: restart](bdehdcfg-restart.md)`, `Directs the computer to restart after the drive preparation has finished.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Prepares a hard drive with the partitions necessary for BitLocker Drive Encryption. Most installations of Windows 7 will not need to use this tool because BitLocker setup includes the ability to prepare and repartition drives as required.`, `bdehdcfg [â€“driveinfo <DriveLetter>] [-target {default|unallocated|<DriveLetter> shrink|<DriveLetter> merge}] [â€“newdriveletter] [â€“size <SizeinMB>] [-quiet]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`bitsadmin`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `bitsadmin is a command-line tool that you can use to create download or upload jobs and monitor their progress.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`bootcfg`, [
            new Parameter_js_2.Parameter(`[bootcfg addsw](bootcfg-addsw.md)`, `adds operating system load options for a specified operating system entry.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg copy](bootcfg-copy.md)`, `Makes a copy of an existing boot entry, to which you can add command-line options.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg dbg1394](bootcfg-dbg1394.md)`, `Configures 1394 port debugging for a specified operating system entry.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg debug](bootcfg-debug.md)`, `adds or changes the debug settings for a specified operating system entry.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg default](bootcfg-default.md)`, `Specifies the operating system entry to designate as the default.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg delete](bootcfg-delete.md)`, `deletes an operating system entry in the [operating systems] section of the Boot.ini file.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg ems](bootcfg-ems.md)`, `Enables the user to add or change the settings for redirection of the Emergency Management Services console to a remote computer.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg query](bootcfg-query.md)`, `Queries and displays the [boot loader] and [operating systems] section entries from Boot.ini.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg raw](bootcfg-raw.md)`, `adds operating system load options specified as a string to an operating system entry in the [operating systems] section of the Boot.ini file.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg rmsw](bootcfg-rmsw.md)`, `removes operating system load options for a specified operating system entry.`, ``),
            new Parameter_js_2.Parameter(`[bootcfg timeout](bootcfg-timeout.md)`, `changes the operating system time-out value.`, ``),
        ], `Configures, queries, or changes Boot.ini file settings.  `, `bootcfg <parameter> [arguments...]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`break`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Sets or clears extended CTRL+C checking on MS-DOS systems. If used without parameters, break displays the current setting.`, `break=[on|off]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cacls`, [
            new Parameter_js_2.Parameter(`<filename>`, `Required. Displays Acls of specified files.`, ``),
            new Parameter_js_2.Parameter(`/t`, `changes Acls of specified files in the current directory and all subdirectories.`, ``),
            new Parameter_js_2.Parameter(`/m`, `changes Acls of volumes mounted to a directory.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Work on the Symbolic Link itself versus the target.`, ``),
            new Parameter_js_2.Parameter(`/s:sddl`, `replaces the Acls with those specified in the SDDL string (not valid with /e, /g, /r, /p, or /d).`, ``),
            new Parameter_js_2.Parameter(`/e`, `edit ACL instead of replacing it.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Continue on access denied errors.`, ``),
            new Parameter_js_2.Parameter(`/g user:<perm>`, `Grant specified user access rights.<br /><br />Valid values for permission:<br /><br />-   n - none<br />-   r - read<br />-   w - write<br />-   c - change (write)<br />-   f - full control`, ``),
            new Parameter_js_2.Parameter(`/r user [...]`, `Revoke specified user's access rights (only valid with /e).`, ``),
            new Parameter_js_2.Parameter(`[/p user:<perm> [...]`, `replace specified user's access rights.<br /><br />Valid values for permission:<br /><br />-   n - none<br />-   r - read<br />-   w - write<br />-   c - change (write)<br />-   f - full control`, ``),
            new Parameter_js_2.Parameter(`[/d user [...]`, `Deny specified user access.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or modifies discretionary access control lists (DACL) on specified files.  `, `cacls <filename> [/t] [/m] [/l] [/s[:sddl]] [/e] [/c] [/g user:<perm>] [/r user [...]] [/p user:<perm> [...]] [/d user [...]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`call`, [
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]<FileName>`, `Specifies the location and name of the batch program that you want to call. The *FileName* parameter is required, and it must have a .bat or .cmd extension.`, ``),
            new Parameter_js_2.Parameter(`<BatchParameters>`, `Specifies any command-line information required by the batch program.`, ``),
            new Parameter_js_2.Parameter(`:<Label>`, `Specifies the label that you want a batch program control to jump to.`, ``),
            new Parameter_js_2.Parameter(`<Arguments>`, `Specifies the command-line information to be passed to the new instance of the batch program, beginning at *:Label.*`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Calls one batch program from another without stopping the parent batch program. The call command accepts labels as the target of the call.`, `call [Drive:][Path]<FileName> [<BatchParameters>] [:<Label> [<Arguments>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cd`, [
            new Parameter_js_2.Parameter(`/d`, `Changes the current drive as well as the current directory for a drive.`, ``),
            new Parameter_js_2.Parameter(`<Drive>:`, `Specifies the drive to display or change (if different from the current drive).`, ``),
            new Parameter_js_2.Parameter(`<Path>`, `Specifies the path to the directory that you want to display or change.`, ``),
            new Parameter_js_2.Parameter(`[..]`, `Specifies that you want to change to the parent folder.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the name of or changes the current directory. If used with only a drive letter (for example, "cd C:"), cd displays the names of the current directory in the specified drive. If used without parameters, cd displays the current drive and directory.`, `cd [/d] [<Drive>:][<Path>]

cd [..]

chdir [/d] [<Drive>:][<Path>]

chdir [..]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`certreq`, [
            new Parameter_js_2.Parameter(`-Submit`, `Submits a request to a CA. For more information, see [Certreq -submit](#BKMK_Submit).`, ``),
            new Parameter_js_2.Parameter(`-retrieve *RequestID*`, `Retrieves a response to a previous request from a CA. For more information, see [Certreq -retrieve](#BKMK_Retrieve).`, ``),
            new Parameter_js_2.Parameter(`-New`, `Creates a new request from an .inf file. For more information, see [Certreq -new](#BKMK_New).`, ``),
            new Parameter_js_2.Parameter(`-Accept`, `Accepts and installs a response to a certificate request. For more information, see [Certreq -accept](#BKMK_accept).`, ``),
            new Parameter_js_2.Parameter(`-Policy`, `Sets the policy for a request. For more information, see [Certreq -policy](#BKMK_policy).`, ``),
            new Parameter_js_2.Parameter(`-Sign`, `Signs a cross-certification or qualified subordination request. For more information, see [Certreq -sign](#BKMK_sign).`, ``),
            new Parameter_js_2.Parameter(`-Enroll`, `Enrolls for or renews a certificate. For more information, see [Certreq -enroll](#BKMK_enroll).`, ``),
            new Parameter_js_2.Parameter(`-?`, `Displays a list of certreq syntax, options, and descriptions.`, ``),
            new Parameter_js_2.Parameter(`*<verb>* -?`, `Displays help for the verb specified.`, ``),
            new Parameter_js_2.Parameter(`-v -?`, `Displays a verbose list of the certreq syntax, options, and descriptions.`, ``),
        ], `Certreq can be used to request certificates from a certification authority (CA), to retrieve a response to a previous request from a CA, to create a new request from an .inf file, to accept and install a response to a request, to construct a cross-certification or qualified subordination request from an existing CA certificate or request, and to sign a cross-certification or qualified subordination request.`, `CertReq [-Submit] [Options] [RequestFileIn [CertFileOut [CertChainFileOut [FullResponseFileOut]]]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`certutil`, [
            new Parameter_js_2.Parameter(`[-dump](#BKMK_dump)`, `Dump configuration information or files`, ``),
            new Parameter_js_2.Parameter(`[-asn](#BKMK_asn)`, `Parse ASN.1 file`, ``),
            new Parameter_js_2.Parameter(`[-decodehex](#BKMK_decodehex)`, `Decode hexadecimal-encoded file`, ``),
            new Parameter_js_2.Parameter(`[-decode](#BKMK_decode)`, `Decode a Base64-encoded file`, ``),
            new Parameter_js_2.Parameter(`[-encode](#BKMK_encode)`, `Encode a file to Base64`, ``),
            new Parameter_js_2.Parameter(`[-deny](#BKMK_deny)`, `Deny a pending certificate request`, ``),
            new Parameter_js_2.Parameter(`[-resubmit](#BKMK_resubmit)`, `Resubmit a pending certificate request`, ``),
            new Parameter_js_2.Parameter(`[-setattributes](#BKMK_setattributes)`, `Set attributes for a pending certificate request`, ``),
            new Parameter_js_2.Parameter(`[-setextension](#BKMK_setextension)`, `Set an extension for a pending certificate request`, ``),
            new Parameter_js_2.Parameter(`[-revoke](#BKMK_revoke)`, `Revoke a certificate`, ``),
            new Parameter_js_2.Parameter(`[-isvalid](#BKMK_isvalid)`, `Display the disposition of the current certificate`, ``),
            new Parameter_js_2.Parameter(`[-getconfig](#BKMK_getconfig)`, `Get the default configuration string`, ``),
            new Parameter_js_2.Parameter(`[-ping](#BKMK_ping)`, `Attempt to contact the Active Directory Certificate Services Request interface`, ``),
            new Parameter_js_2.Parameter(`-pingadmin`, `Attempt to contact the Active Directory Certificate Services Admin interface`, ``),
            new Parameter_js_2.Parameter(`[-CAInfo](#BKMK_CAInfo)`, `Display information about the certification authority`, ``),
            new Parameter_js_2.Parameter(`[-ca.cert](#BKMK_ca.cert)`, `Retrieve the certificate for the certification authority`, ``),
            new Parameter_js_2.Parameter(`[-ca.chain](#BKMK_ca.chain)`, `Retrieve the certificate chain for the certification authority`, ``),
            new Parameter_js_2.Parameter(`[-GetCRL](#BKMK_GetCRL)`, `Get a certificate revocation list (CRL)`, ``),
            new Parameter_js_2.Parameter(`[-CRL](#BKMK_CRL)`, `Publish new certificate revocation lists (CRLs) [or only delta CRLs]`, ``),
            new Parameter_js_2.Parameter(`[-shutdown](#BKMK_shutdown)`, `Shutdown Active Directory Certificate Services`, ``),
            new Parameter_js_2.Parameter(`[-installCert](#BKMK_installcert)`, `Install a certification authority certificate`, ``),
            new Parameter_js_2.Parameter(`[-renewCert](#BKMK_renewcert)`, `Renew a certification authority certificate`, ``),
            new Parameter_js_2.Parameter(`[-schema](#BKMK_schema)`, `Dump the schema for the certificate`, ``),
            new Parameter_js_2.Parameter(`[-view](#BKMK_view)`, `Dump the certificate view`, ``),
            new Parameter_js_2.Parameter(`[-db](#BKMK_db)`, `Dump the raw database`, ``),
            new Parameter_js_2.Parameter(`[-deleterow](#BKMK_deleterow)`, `Delete a row from the server database`, ``),
            new Parameter_js_2.Parameter(`[-backup](#BKMK_backup)`, `Backup Active Directory Certificate Services`, ``),
            new Parameter_js_2.Parameter(`[-backupDB](#BKMK_backupDB)`, `Backup the Active Directory Certificate Services database`, ``),
            new Parameter_js_2.Parameter(`[-backupKey](#BKMK_backupKey)`, `Backup the Active Directory Certificate Services certificate and private key`, ``),
            new Parameter_js_2.Parameter(`[-restore](#BKMK_restore)`, `Restore Active Directory Certificate Services`, ``),
            new Parameter_js_2.Parameter(`[-restoreDB](#BKMK_restoreDB)`, `Restore the Active Directory Certificate Services database`, ``),
            new Parameter_js_2.Parameter(`[-restoreKey](#BKMK_restorekey)`, `Restore the Active Directory Certificate Services certificate and private key`, ``),
            new Parameter_js_2.Parameter(`[-importPFX](#BKMK_importPFX)`, `Import certificate and private key`, ``),
            new Parameter_js_2.Parameter(`[-dynamicfilelist](#BKMK_dynamicfilelist)`, `Display a dynamic file list`, ``),
            new Parameter_js_2.Parameter(`[-databaselocations](#BKMK_databaselocations)`, `Display database locations`, ``),
            new Parameter_js_2.Parameter(`[-hashfile](#BKMK_hashfile)`, `Generate and display a cryptographic hash over a file`, ``),
            new Parameter_js_2.Parameter(`[-store](#BKMK_Store)`, `Dump the certificate store`, ``),
            new Parameter_js_2.Parameter(`[-addstore](#BKMK_addstore)`, `Add a certificate to the store`, ``),
            new Parameter_js_2.Parameter(`[-delstore](#BKMK_delstore)`, `Delete a certificate from the store`, ``),
            new Parameter_js_2.Parameter(`[-verifystore](#BKMK_verifystore)`, `Verify a certificate in the store`, ``),
            new Parameter_js_2.Parameter(`[-repairstore](#BKMK_repairstore)`, `Repair a key association or update certificate properties or the key security descriptor`, ``),
            new Parameter_js_2.Parameter(`[-viewstore](#BKMK_viewstore)`, `Dump the certificates store`, ``),
            new Parameter_js_2.Parameter(`[-viewdelstore](#BKMK_viewdelstore)`, `Delete a certificate from the store`, ``),
            new Parameter_js_2.Parameter(`[-dsPublish](#BKMK_dsPublish)`, `Publish a certificate or certificate revocation list (CRL) to Active Directory`, ``),
            new Parameter_js_2.Parameter(`[-ADTemplate](#BKMK_ADTemplate)`, `Display AD templates`, ``),
            new Parameter_js_2.Parameter(`[-Template](#BKMK_template)`, `Display certificate templates`, ``),
            new Parameter_js_2.Parameter(`[-TemplateCAs](#BKMK_TemplateCAs)`, `Display the certification authorities (CAs) for a certificate template`, ``),
            new Parameter_js_2.Parameter(`[-CATemplates](#BKMK_CATemplates)`, `Display templates for CA`, ``),
            new Parameter_js_2.Parameter(`[-SetCASites](#BKMK_SetCASites)`, `Manage Site Names for CAs`, ``),
            new Parameter_js_2.Parameter(`[-enrollmentServerURL](#BKMK_enrollmentServerURL)`, `Display, add or delete enrollment server URLs associated with a CA`, ``),
            new Parameter_js_2.Parameter(`[-ADCA](#BKMK_ADCA)`, `Display AD CAs`, ``),
            new Parameter_js_2.Parameter(`[-CA](#BKMK_CA)`, `Display Enrollment Policy CAs`, ``),
            new Parameter_js_2.Parameter(`[-Policy](#BKMK_Policy)`, `Display Enrollment Policy`, ``),
            new Parameter_js_2.Parameter(`[-PolicyCache](#BKMK_PolicyCache)`, `Display or delete Enrollment Policy Cache entries`, ``),
            new Parameter_js_2.Parameter(`[-CredStore](#BKMK_Credstore)`, `Display, add or delete Credential Store entries`, ``),
            new Parameter_js_2.Parameter(`[-InstallDefaultTemplates](#BKMK_InstallDefaultTemplates)`, `Install default certificate templates`, ``),
            new Parameter_js_2.Parameter(`[-URLCache](#BKMK_URLCache)`, `Display or delete URL cache entries`, ``),
            new Parameter_js_2.Parameter(`[-pulse](#BKMK_pulse)`, `Pulse auto enrollment events`, ``),
            new Parameter_js_2.Parameter(`[-MachineInfo](#BKMK_MachineInfo)`, `Display information about the Active Directory machine object`, ``),
            new Parameter_js_2.Parameter(`[-DCInfo](#BKMK_DCInfo)`, `Display information about the domain controller`, ``),
            new Parameter_js_2.Parameter(`[-EntInfo](#BKMK_EntInfo)`, `Display information about an enterprise CA`, ``),
            new Parameter_js_2.Parameter(`[-TCAInfo](#BKMK_TCAInfo)`, `Display information about the CA`, ``),
            new Parameter_js_2.Parameter(`[-SCInfo](#BKMK_SCInfo)`, `Display information about the smart card`, ``),
            new Parameter_js_2.Parameter(`[-SCRoots](#BKMK_SCRoots)`, `Manage smart card root certificates`, ``),
            new Parameter_js_2.Parameter(`[-verifykeys](#BKMK_verifykeys)`, `Verify a public or private key set`, ``),
            new Parameter_js_2.Parameter(`[-verify](#BKMK_verify)`, `Verify a certificate, certificate revocation list (CRL), or certificate chain`, ``),
            new Parameter_js_2.Parameter(`[-verifyCTL](#BKMK_verifyCTL)`, `Verify AuthRoot or Disallowed Certificates CTL`, ``),
            new Parameter_js_2.Parameter(`[-sign](#BKMK_sign)`, `Re-sign a certificate revocation list (CRL) or certificate`, ``),
            new Parameter_js_2.Parameter(`[-vroot](#BKMK_vroot)`, `Create or delete web virtual roots and file shares`, ``),
            new Parameter_js_2.Parameter(`[-vocsproot](#BKMK_vocsproot)`, `Create or delete web virtual roots for an OCSP web proxy`, ``),
            new Parameter_js_2.Parameter(`[-addEnrollmentServer](#BKMK_addEnrollmentServer)`, `Add an Enrollment Server application`, ``),
            new Parameter_js_2.Parameter(`[-deleteEnrollmentServer](#BKMK_deleteEnrollmentServer)`, `Delete an Enrollment Server application`, ``),
            new Parameter_js_2.Parameter(`[-addPolicyServer](#BKMK_addPolicyServer)`, `Add a Policy Server application`, ``),
            new Parameter_js_2.Parameter(`[-deletePolicyServer](#BKMK_deletePolicyServer)`, `Delete a Policy Server application`, ``),
            new Parameter_js_2.Parameter(`[-oid](#BKMK_oid)`, `Display the object identifier or set a display name`, ``),
            new Parameter_js_2.Parameter(`[-error](#BKMK_error)`, `Display the message text associated with an error code`, ``),
            new Parameter_js_2.Parameter(`[-getreg](#BKMK_getreg)`, `Display a registry value`, ``),
            new Parameter_js_2.Parameter(`[-setreg](#BKMK_setreg)`, `Set a registry value`, ``),
            new Parameter_js_2.Parameter(`[-delreg](#BKMK_delreg)`, `Delete a registry value`, ``),
            new Parameter_js_2.Parameter(`[-ImportKMS](#BKMK_ImportKMS)`, `Import user keys and certificates into the server database for key archival`, ``),
            new Parameter_js_2.Parameter(`[-ImportCert](#BKMK_ImportCert)`, `Import a certificate file into the database`, ``),
            new Parameter_js_2.Parameter(`[-GetKey](#BKMK_GetKey)`, `Retrieve an archived private key recovery blob`, ``),
            new Parameter_js_2.Parameter(`[-RecoverKey](#BKMK_RecoverKey)`, `Recover an archived private key`, ``),
            new Parameter_js_2.Parameter(`[-MergePFX](#BKMK_MergePFX)`, `Merge PFX files`, ``),
            new Parameter_js_2.Parameter(`[-ConvertEPF](#BKMK_ConvertEPF)`, `Convert a PFX file into an EPF file`, ``),
            new Parameter_js_2.Parameter(`-?`, `Displays the list of verbs`, ``),
            new Parameter_js_2.Parameter(`-*<verb>* -?`, `Displays help for the verb specified.`, ``),
            new Parameter_js_2.Parameter(`-? -v`, `Displays a full list of verbs and`, ``),
        ], `Certutil.exe is a command-line program that is installed as part of Certificate Services. You can use Certutil.exe to dump and display certification authority (CA) configuration information, configure Certificate Services, backup and restore CA components, and verify certificates, key pairs, and certificate chains.`, `[Properties]

     19 = Empty ; Add archived property, OR:

     19 =       ; Remove archived property



     11 = "{text}Friendly Name" ; Add friendly name property



     127 = "{hex}" ; Add custom hexadecimal property

         _continue_ = "00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f"

         _continue_ = "10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f"



     2 = "{text}" ; Add Key Provider Information property

       _continue_ = "Container=Container Name&"

       _continue_ = "Provider=Microsoft Strong Cryptographic Provider&"

       _continue_ = "ProviderType=1&"

       _continue_ = "Flags=0&"

       _continue_ = "KeySpec=2"



     9 = "{text}" ; Add Enhanced Key Usage property

       _continue_ = "1.3.6.1.5.5.7.3.2,"

       _continue_ = "1.3.6.1.5.5.7.3.1,"`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`change`, [
            new Parameter_js_2.Parameter(`[change logon](change-logon.md)`, `Enables or disables logons from client sessions on an rd Session Host server, or displays current logon status.`, ``),
            new Parameter_js_2.Parameter(`[change port](change-port.md)`, `lists or changes the COM port mappings to be compatible with MS-DOS applications.`, ``),
            new Parameter_js_2.Parameter(`[change user](change-user.md)`, `changes the install mode for the rd Session Host server.`, ``),
        ], `changes Remote Desktop Session Host (rd Session Host) server settings for logons, COM port mappings, and install mode.`, `change logon

change port

change user`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`chcp`, [
            new Parameter_js_2.Parameter(`<NNN>`, `Specifies the code page.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Changes the active console code page. If used without parameters, chcp displays the number of the active console code page.`, `chcp [<NNN>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`chdir`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `This command is the same as the cd command.  `, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`chglogon`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Enables or disables logons from client sessions on an rd Session Host server, or displays current logon status.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`chgport`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `lists or changes the COM port mappings to be compatible with MS-DOS applications.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`chgusr`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
        ], `changes the install mode for the Remote Desktop Session Host (rd Session Host) server.  `, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`chkdsk`, [
            new Parameter_js_2.Parameter(`<Volume>`, `Specifies the drive letter (followed by a colon), mount point, or volume name.`, ``),
            new Parameter_js_2.Parameter(`[<Path>]<FileName>`, `Use with file allocation table (FAT) and FAT32 only. Specifies the location and name of a file or set of files that you want chkdsk to check for fragmentation. You can use the ? and * wildcard characters to specify multiple files.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Fixes errors on the disk. The disk must be locked. If chkdsk cannot lock the drive, a message appears that asks you if you want to check the drive the next time you restart the computer.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays the name of each file in every directory as the disk is checked.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Locates bad sectors and recovers readable information. The disk must be locked. /r includes the functionality of /f, with the additional analysis of physical disk errors.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Forces the volume to dismount first, if necessary. All open handles to the drive are invalidated. /x also includes the functionality of /f.`, ``),
            new Parameter_js_2.Parameter(`/i`, `Use with NTFS only. Performs a less vigorous check of index entries, which reduces the amount of time required to run chkdsk.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Use with NTFS only. Does not check cycles within the folder structure, which reduces the amount of time required to run chkdsk.`, ``),
            new Parameter_js_2.Parameter(`/l[:<Size>]`, `Use with NTFS only. Changes the log file size to the size you type. If you omit the size parameter, /l displays the current size.`, ``),
            new Parameter_js_2.Parameter(`/b`, `NTFS only: Clears the list of bad clusters on the volume and rescans all allocated and free clusters for errors. /b includes the functionality of /r. Use this parameter after imaging a volume to a new hard disk drive.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Checks the file system and file system metadata of a volume for logical and physical errors. If used without parameters, chkdsk displays only the status of the volume and does not fix any errors. If used with the /f, /r, /x, or /b parameters, it fixes errors on the volume.`, `chkdsk [<Volume>[[<Path>]<FileName>]] [/f] [/v] [/r] [/x] [/i] [/c] [/l[:<Size>]] [/b]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`chkntfs`, [
            new Parameter_js_2.Parameter(`<Volume> [...]`, `Specifies one or more volumes to check when the computer starts. Valid volumes include drive letters (followed by a colon), mount points, or volume names.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Restores all chkntfs default settings, except the countdown time for automatic file checking. By default, all volumes are checked when the computer is started, and chkdsk runs on those that are dirty.`, ``),
            new Parameter_js_2.Parameter(`/t [:<Time>]`, `Changes the Autochk.exe initiation countdown time to the amount of time specified in seconds. If you do not enter a time, /t displays the current countdown time.`, ``),
            new Parameter_js_2.Parameter(`/x <Volume> [...]`, `Specifies one or more volumes to exclude from checking when the computer is started, even if the volume is marked as requiring chkdsk.`, ``),
            new Parameter_js_2.Parameter(`/c <Volume> [...]`, `Schedules one or more volumes to be checked when the computer is started, and runs chkdsk on those that are dirty.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or modifies automatic disk checking when the computer is started. If used without options, chkntfs displays the file system of the specified volume. If automatic file checking is scheduled to run, chkntfs displays whether the specified volume is dirty or is scheduled to be checked the next time the computer is started.`, `chkntfs <Volume> [...]

chkntfs [/d]

chkntfs [/t[:<Time>]]

chkntfs [/x <Volume> [...]]

chkntfs [/c <Volume> [...]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`choice`, [
            new Parameter_js_2.Parameter(`/c <Choice1><Choice2><â€¦>`, `Specifies the list of choices to be created. Valid choices include a-z, A-Z, 0-9, and extended ASCII characters (128-254). The default list is "YN", which is displayed as "[Y,N]?".`, ``),
            new Parameter_js_2.Parameter(`/n`, `Hides the list of choices, although the choices are still enabled and the message text (if specified by /m) is still displayed.`, ``),
            new Parameter_js_2.Parameter(`/cs`, `Specifies that the choices are case-sensitive. By default, the choices are not case-sensitive.`, ``),
            new Parameter_js_2.Parameter(`/t <Timeout>`, `Specifies the number of seconds to pause before using the default choice specified by /d. Acceptable values are from 0 to 9999. If /t is set to 0, choice does not pause before returning the default choice.`, ``),
            new Parameter_js_2.Parameter(`/d <Choice>`, `Specifies the default choice to use after waiting the number of seconds specified by /t. The default choice must be in the list of choices specified by /c.`, ``),
            new Parameter_js_2.Parameter(`/m <"Text">`, `Specifies a message to display before the list of choices. If /m is not specified, only the choice prompt is displayed.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Prompts the user to select one item from a list of single-character choices in a batch program, and then returns the index of the selected choice. If used without parameters, choice displays the default choices Y and N.`, `choice [/c [<Choice1><Choice2><â€¦>]] [/n] [/cs] [/t <Timeout> /d <Choice>] [/m <"Text">]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cipher`, [
            new Parameter_js_2.Parameter(`/b`, `Aborts if an error is encountered. By default, cipher continues to run even if errors are encountered.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Displays information on the encrypted file.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Decrypts the specified files or directories.`, ``),
            new Parameter_js_2.Parameter(`/e`, `Encrypts the specified files or directories. Directories are marked so that files that are added afterward will be encrypted.`, ``),
            new Parameter_js_2.Parameter(`/h`, `Displays files with hidden or system attributes. By default, these files are not encrypted or decrypted.`, ``),
            new Parameter_js_2.Parameter(`/k`, `Creates a new certificate and key for use with Encrypting File System (EFS) files. If the /k parameter is specified, all other parameters are ignored.`, ``),
            new Parameter_js_2.Parameter(`/r:<FileName> [/smartcard]`, `Generates an EFS recovery agent key and certificate, then writes them to a .pfx file (containing certificate and private key) and  a .cer file (containing only the certificate). If /smartcard is specified, it writes the recovery key and certificate to a smart card, and no .pfx file is generated.`, ``),
            new Parameter_js_2.Parameter(`/s:<Directory>`, `Performs the specified operation on all subdirectories in the specified *Directory*.`, ``),
            new Parameter_js_2.Parameter(`/u [/n]`, `Finds all encrypted files on the local drive(s). If used with the /n parameter, no updates are made. If used without /n, /u compares the user's file encryption key or the recovery agent's key to the current ones, and updates them if they have changed. This parameter works only with /n.`, ``),
            new Parameter_js_2.Parameter(`/w:<Directory>`, `Removes data from available unused disk space on the entire volume. If you use the /w parameter, all other parameters are ignored. The directory specified can be located anywhere in a local volume. If it is a mount point or points to a directory in another volume, the data on that volume is removed.`, ``),
            new Parameter_js_2.Parameter(`/x[:efsfile] [<FileName>]`, `Backs up the EFS certificate and keys to the specified file name. If used with :efsfile, /x backs up the user's certificate(s) that were used to encrypt the file. Otherwise, the user's current EFS certificate and keys are backed up.`, ``),
            new Parameter_js_2.Parameter(`/y`, `Displays your current EFS certificate thumbnail on the local computer.`, ``),
            new Parameter_js_2.Parameter(`/adduser [/certhash:<Hash> `, ` /certfile:<FileName>]`, ``),
            new Parameter_js_2.Parameter(`/rekey`, `Updates the specified encrypted file(s) to use the currently configured EFS key.`, ``),
            new Parameter_js_2.Parameter(`/removeuser /certhash:<Hash>`, `Removes a user from the specified file(s). The *Hash* provided for /certhash must be the SHA1 hash of the certificate to remove.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or alters the encryption of directories and files on NTFS volumes. If used without parameters, cipher displays the encryption state of the current directory and any files it contains.`, `cipher [/e | /d | /c] [/s:<Directory>] [/b] [/h] [PathName [...]]

cipher /k

cipher /r:<FileName> [/smartcard]

cipher /u [/n]

cipher /w:<Directory>

cipher /x[:efsfile] [FileName]

cipher /y

cipher /adduser [/certhash:<Hash> | /certfile:<FileName>] [/s:Directory] [/b] [/h] [PathName [...]]

cipher /removeuser /certhash:<Hash> [/s:<Directory>] [/b] [/h] [<PathName> [...]]

cipher /rekey [PathName [...]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`clip`, [
            new Parameter_js_2.Parameter(`<Command>`, `Specifies a command whose output you want to send to the Windows Clipboard.`, ``),
            new Parameter_js_2.Parameter(`<FileName>`, `Specifies a file whose contents you want to send to the Windows Clipboard.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Redirects command output from the command line to the Windows clipboard. You can then paste this text output into other programs.`, `<Command> | clip

clip < <FileName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cls`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Clears the Command Prompt window.`, `cls`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Cmd`, [
            new Parameter_js_2.Parameter(`/c`, `Carries out the command specified by *String* and then stops.`, ``),
            new Parameter_js_2.Parameter(`/k`, `Carries out the command specified by *String* and continues.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Modifies the treatment of *String* after /c or /k.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Turns the echo off.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Disables execution of AutoRun commands.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Formats internal command output to a pipe or a file as American National Standards Institute (ANSI).`, ``),
            new Parameter_js_2.Parameter(`/u`, `Formats internal command output to a pipe or a file as Unicode.`, ``),
            new Parameter_js_2.Parameter(`/t:{<B><F>|<F>}`, `Sets the background (*B*) and foreground (*F*) colors.`, ``),
            new Parameter_js_2.Parameter(`/e:on`, `Enables command extensions.`, ``),
            new Parameter_js_2.Parameter(`/e:off`, `Disables commands extensions.`, ``),
            new Parameter_js_2.Parameter(`/f:on`, `Enables file and directory name completion.`, ``),
            new Parameter_js_2.Parameter(`/f:off`, `Disables file and directory name completion.`, ``),
            new Parameter_js_2.Parameter(`/v:on`, `Enables delayed environment variable expansion.`, ``),
            new Parameter_js_2.Parameter(`/v:off`, `Disables delayed environment variable expansion.`, ``),
            new Parameter_js_2.Parameter(`<String>`, `Specifies the command you want to carry out.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Starts a new instance of the command interpreter, Cmd.exe. If used without parameters, cmd displays the version and copyright information of the operating system.`, `cmd [/c|/k] [/s] [/q] [/d] [/a|/u] [/t:{<B><F>|<F>}] [/e:{on|off}] [/f:{on|off}] [/v:{on|off}] [<String>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cmdkey`, [
            new Parameter_js_2.Parameter(`/add:<TargetName>`, `adds a user name and password to the list.<br /><br />Requires the parameter of <TargetName> which identifies the computer or domain name that this entry will be associated with.`, ``),
            new Parameter_js_2.Parameter(`/generic:<TargetName>`, `adds generic credentials to the list.<br /><br />Requires the parameter of <TargetName> which identifies the computer or domain name that this entry will be associated with.`, ``),
            new Parameter_js_2.Parameter(`/smartcard`, `Retrieves the credential from a smart card.`, ``),
            new Parameter_js_2.Parameter(`/user:<UserName>`, `Specifies the user or account name to store with this entry. If *UserName* is not supplied, it will be requested.`, ``),
            new Parameter_js_2.Parameter(`/pass:<Password>`, `Specifies the password to store with this entry. If *Password* is not supplied, it will be requested.`, ``),
            new Parameter_js_2.Parameter(`/delete{:<TargetName> &#124; /ras}`, `deletes a user name and password from the list. If *TargetName* is specified, that entry will be deleted. If /ras is specified, the stored remote access entry will be deleted.`, ``),
            new Parameter_js_2.Parameter(`/list:<TargetName>`, `Displays the list of stored user names and credentials. If *TargetName* is not specified, all stored user names and credentials will be listed.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `creates, lists, and deletes stored user names and passwords or credentials.`, `cmdkey [{/add:<TargetName>|/generic:<TargetName>}] {/smartcard|/user:<UserName> [/pass:<Password>]} [/delete{:<TargetName>|/ras}] /list:<TargetName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cmstp`, [
            new Parameter_js_2.Parameter(`< ServiceProfileFileName >.exe`, `Specifies, by name, the installation package that contains the profile that you want to install.<br /><br />Required for Syntax 1 but not valid for Syntax 2.`, ``),
            new Parameter_js_2.Parameter(`/q:a`, `Specifies that the profile should be installed without prompting the user. The verification message that the installation has succeeded will still appear.<br /><br />Required for Syntax 1 but not valid for Syntax 2.`, ``),
            new Parameter_js_2.Parameter(`[Drive:][path] <ServiceProfileFileName>.inf`, `Required. Specifies, by name, the configuration file that determines how the profile should be installed.<br /><br />The [Drive:][path] parameter is not valid for Syntax 1.`, ``),
            new Parameter_js_2.Parameter(`/nf`, `Specifies that the support files should not be installed.`, ``),
            new Parameter_js_2.Parameter(`/ni`, `Specifies that a desktop icon should not be created. This parameter is only valid for computers running Windows 95, Windows 98, Windows NT 4.0, or Windows Millennium edition.`, ``),
            new Parameter_js_2.Parameter(`/ns`, `Specifies that a desktop shortcut should not be created. This parameter is only valid for computers running a member of the Windows Server 2003 family, Windows 2000, or Windows XP.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Specifies that the service profile should be installed or uninstalled silently (without prompting for user response or displaying verification message).`, ``),
            new Parameter_js_2.Parameter(`/su`, `Specifies that the service profile should be installed for a single user rather than for all users. This parameter is only valid for computers running a Windows Server 2003, Windows 2000, or Windows XP.`, ``),
            new Parameter_js_2.Parameter(`/au`, `Specifies that the service profile should be installed for all users. This parameter is only valid for computers running Windows Server 2003, Windows 2000, or Windows XP.`, ``),
            new Parameter_js_2.Parameter(`/u`, `Specifies that the service profile should be uninstalled.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Installs or removes a Connection Manager service profile. Used without optional parameters, cmstp installs a service profile with default settings appropriate to the operating system and to the user's permissions. `, `ServiceProfileFileName .exe /q:a /c:"cmstp.exe ServiceProfileFileName .inf [/nf] [/ni] [/ns] [/s] [/su] [/u]"`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`color`, [
            new Parameter_js_2.Parameter(`<B>`, `Specifies the background color.`, ``),
            new Parameter_js_2.Parameter(`<F>`, `Specifies the foreground color.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Changes the foreground and background colors in the Command Prompt window for the current session. If used without parameters, color restores the default Command Prompt window foreground and background colors.`, `color [[<B>]<F>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`comp`, [
            new Parameter_js_2.Parameter(`<Data1>`, `Specifies the location and name of the first file or set of files that you want to compare. You can use wildcard characters (* and ?) to specify multiple files.`, ``),
            new Parameter_js_2.Parameter(`<Data2>`, `Specifies the location and name of the second file or set of files that you want to compare. You can use wildcard characters (* and ?) to specify multiple files.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Displays differences in decimal format. (The default format is hexadecimal.)`, ``),
            new Parameter_js_2.Parameter(`/a`, `Displays differences as characters.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Displays the number of the line where a difference occurs, instead of displaying the byte offset.`, ``),
            new Parameter_js_2.Parameter(`/n=<Number>`, `Compares only the number of lines that are specified for each file, even if the files are different sizes.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Performs a comparison that is not case-sensitive.`, ``),
            new Parameter_js_2.Parameter(`/off[line]`, `Processes files with the offline attribute set.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Compares the contents of two files or sets of files byte-by-byte. If used without parameters, comp prompts you to enter the files to compare.`, `comp [<Data1>] [<Data2>] [/d] [/a] [/l] [/n=<Number>] [/c]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`compact`, [
            new Parameter_js_2.Parameter(`/c`, `Compresses the specified directory or file.`, ``),
            new Parameter_js_2.Parameter(`/u`, `Uncompresses the specified directory or file.`, ``),
            new Parameter_js_2.Parameter(`/s[:<Dir>]`, `Applies the compact command to all subdirectories of the specified directory (or of the current directory if none is specified).`, ``),
            new Parameter_js_2.Parameter(`/a`, `Displays hidden or system files.`, ``),
            new Parameter_js_2.Parameter(`/i`, `Ignores errors.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Forces compression or uncompression of the specified directory or file. /f is used in the case of a file that was partly compressed when the operation was interrupted by a system crash. To force the file to be compressed in its entirety, use the /c and /f parameters and specify the partially compressed file.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Reports only the most essential information.`, ``),
            new Parameter_js_2.Parameter(`<FileName>`, `Specifies the file or directory. You can use multiple file names, and the * and ? wildcard characters.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or alters the compression of files or directories on NTFS partitions. If used without parameters, compact displays the compression state of the current directory and the files it contains.`, `compact [/c | /u] [/s[:<Dir>]] [/a] [/i] [/f] [/q] [<FileName>[...]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`convert`, [
            new Parameter_js_2.Parameter(`<Volume>`, `Specifies the drive letter (followed by a colon), mount point, or volume name to convert to NTFS.`, ``),
            new Parameter_js_2.Parameter(`/fs:ntfs`, `Required. Converts the volume to NTFS.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Runs convert in verbose mode, which displays all messages during the conversion process.`, ``),
            new Parameter_js_2.Parameter(`/cvtarea:<FileName>`, `Specifies that the Master File Table (MFT) and other NTFS metadata files are written to an existing, contiguous placeholder file. This file must be in the root directory of the file system to be converted. Use of the /cvtarea parameter can result in a less fragmented file system after conversion. For best results, the size of this file should be 1 KB multiplied by the number of files and directories in the file system, although the convert utility accepts files of any size.</br>Important: You must create the placeholder file by using the fsutil file createnew command prior to running convert. Convert does not create this file for you. Convert overwrites this file with NTFS metadata. After conversion, any unused space in this file is freed.`, ``),
            new Parameter_js_2.Parameter(`/nosecurity`, `Specifies that the security settings on the converted files and directories allow access by all users.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Dismounts the volume, if necessary, before it is converted. Any open handles to the volume will no longer be valid.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Converts file allocation table (FAT) and FAT32 volumes to the NTFS file system, leaving existing files and directories intact. Volumes converted to the NTFS file system cannot be converted back to FAT or FAT32.`, `convert [<Volume>] /fs:ntfs [/v] [/cvtarea:<FileName>] [/nosecurity] [/x]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`copy`, [
            new Parameter_js_2.Parameter(`/d`, `Allows the encrypted files being copied to be saved as decrypted files at the destination.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Verifies that new files are written correctly.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Uses a short file name, if available, when copying a file with a name longer than eight characters, or with a file name extension longer than three characters.`, ``),
            new Parameter_js_2.Parameter(`/y`, `Suppresses prompting to confirm that you want to overwrite an existing destination file.`, ``),
            new Parameter_js_2.Parameter(`/-y`, `Prompts you to confirm that you want to overwrite an existing destination file.`, ``),
            new Parameter_js_2.Parameter(`/z`, `Copies networked files in restartable mode.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Indicates an ASCII text file.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Indicates a binary file.`, ``),
            new Parameter_js_2.Parameter(`<Source>`, `Required. Specifies the location from which you want to copy a file or set of files. *Source* can consist of a drive letter and colon, a directory name, a file name, or a combination of these.`, ``),
            new Parameter_js_2.Parameter(`<Destination>`, `Required. Specifies the location to which you want to copy a file or set of files. *Destination* can consist of a drive letter and colon, a directory name, a file name, or a combination of these.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Copies one or more files from one location to another.`, `copy [/d] [/v] [/n] [/y | /-y] [/z] [/a | /b] <Source> [/a | /b] [+<Source> [/a | /b] [+ ...]] [<Destination> [/a | /b]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cprofile`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Cprofile - Cprofile is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`cscript`, [
            new Parameter_js_2.Parameter(`Scriptname.extension`, `Specifies the path and file name of the script file with optional file name extension.`, ``),
            new Parameter_js_2.Parameter(`/B`, `Specifies batch mode, which does not display alerts, scripting errors, or input prompts.`, ``),
            new Parameter_js_2.Parameter(`/D`, `Starts the debugger.`, ``),
            new Parameter_js_2.Parameter(`/E:<Engine>`, `Specifies the engine that is used to run the script.`, ``),
            new Parameter_js_2.Parameter(`/H:cscript`, `Registers cscript.exe as the default script host for running scripts.`, ``),
            new Parameter_js_2.Parameter(`/H:wscript`, `Registers wscript.exe as the default script host for running scripts. This is the default.`, ``),
            new Parameter_js_2.Parameter(`/I`, `Specifies interactive mode, which displays alerts, scripting errors, and input prompts. This is the default and the opposite of /B.`, ``),
            new Parameter_js_2.Parameter(`/Job:<Identifier>`, `Runs the job identified by *Identifier* in a .wsf script file.`, ``),
            new Parameter_js_2.Parameter(`/Logo`, `Specifies that the Windows Script Host banner is displayed in the console before the script runs. This is the default and the opposite of /Nologo.`, ``),
            new Parameter_js_2.Parameter(`/Nologo`, `Specifies that the Windows Script Host banner is not displayed before the script runs.`, ``),
            new Parameter_js_2.Parameter(`/S`, `Saves the current command-prompt options for the current user.`, ``),
            new Parameter_js_2.Parameter(`/T:<Seconds>`, `Specifies the maximum time the script can run (in seconds). You can specify up to 32,767 seconds. The default is no time limit.`, ``),
            new Parameter_js_2.Parameter(`/U`, `Specifies Unicode for input and output that is redirected from the console.`, ``),
            new Parameter_js_2.Parameter(`/X`, `starts the script in the debugger.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays available command parameters and provides help for using them. This is the same as typing cscript.exe with no parameters and no script.`, ``),
            new Parameter_js_2.Parameter(`ScriptArguments`, `Specifies the arguments passed to the script. Each script argument must be preceded by a slash (/).`, ``),
        ], `starts a script so that it runs in a command-line environment.`, `cscript <Scriptname.extension> [/B] [/D] [/E:<Engine>] [{/H:cscript|/H:wscript}] [/I] [/Job:<Identifier>] [{/Logo|/NoLogo}] [/S] [/T:<Seconds>] [/X] [/U] [/?] [<ScriptArguments>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`date`, [
            new Parameter_js_2.Parameter(`<Month-Day-Year>`, `Sets the date specified, where *Month* is the month (one or two digits), *Day* is the day (one or two digits), and *Year* is the year (two or four digits).`, ``),
            new Parameter_js_2.Parameter(`/t`, `Displays the current date without prompting you for a new date.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or sets the system date. If used without parameters, date displays the current system date setting and prompts you to enter a new date.`, `date [/t | <Month-Day-Year>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`dcgpofix`, [
            new Parameter_js_2.Parameter(`/ignoreschema`, `Ignores the version of the Active DirectoryÂ® schema mc</br>when you run this command. Otherwise, the command only works on the same schema version as the Windows version in which the command was shipped.`, ``),
            new Parameter_js_2.Parameter(`/target {Domain `, ` DC `, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Recreates the default Group Policy Objects (GPOs) for a domain. For examples of how this command can be used, see [Examples](#BKMK_Examples).`, `DCGPOFix [/ignoreschema] [/target: {Domain | DC | Both}] [/?]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`defrag`, [
            new Parameter_js_2.Parameter(`"<volume>"`, `Specifies the drive letter or mount point path of the volume to be defragmented or analyzed.`, ``),
            new Parameter_js_2.Parameter(`A`, `Perform analysis on the specified volumes.`, ``),
            new Parameter_js_2.Parameter(`C`, `Perform the operation on all volumes.`, ``),
            new Parameter_js_2.Parameter(`D`, `Perform traditional defrag (this is the default). On a tiered volume though, traditional defrag is performed only on the Capacity tier.`, ``),
            new Parameter_js_2.Parameter(`E`, `Perform the operation on all volumes except those specified.`, ``),
            new Parameter_js_2.Parameter(`G`, `Optimize the storage tiers on the specified volumes.`, ``),
            new Parameter_js_2.Parameter(`H`, `Run the operation at normal priority (default is low).`, ``),
            new Parameter_js_2.Parameter(`I n`, `Tier optimization would run for at most n seconds on each volume.`, ``),
            new Parameter_js_2.Parameter(`K`, `Perform slab consolidation on the specified volumes.`, ``),
            new Parameter_js_2.Parameter(`L`, `Perform retrim on the specified volumes.`, ``),
            new Parameter_js_2.Parameter(`M [n]`, `Run the operation on each volume in parallel in the background. At most n threads optimize the storage tiers in parallel.`, ``),
            new Parameter_js_2.Parameter(`O`, `Perform the proper optimization for each media type.`, ``),
            new Parameter_js_2.Parameter(`T`, `Track an operation already in progress on the specified volume.`, ``),
            new Parameter_js_2.Parameter(`U`, `print the progress of the operation on the screen.`, ``),
            new Parameter_js_2.Parameter(`V`, `print verbose output containing the fragmentation statistics.`, ``),
            new Parameter_js_2.Parameter(`X`, `Perform free space consolidation on the specified volumes.`, ``),
            new Parameter_js_2.Parameter(`?`, `Displays this help information.`, ``),
        ], `Locates and consolidates fragmented files on local volumes to improve system performance.`, `defrag <volumes> | /C | /E <volumes>    [/H] [/M [n]| [/U] [/V]]

defrag <volumes> | /C | /E <volumes> /A [/H] [/M [n]| [/U] [/V]]

defrag <volumes> | /C | /E <volumes> /X [/H] [/M [n]| [/U] [/V]]

defrag <volume> [/<Parameter>]*`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`del`, [
            new Parameter_js_2.Parameter(`<Names>`, `Specifies a list of one or more files or directories. Wildcards may be used to delete multiple files. If a directory is specified, all files within the directory will be deleted.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Prompts for confirmation before deleting the specified file.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Forces deletion of read-only files.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Deletes specified files from the current directory and all subdirectories. Displays the names of the files as they are being deleted.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Specifies quiet mode. You are not prompted for delete confirmation.`, ``),
            new Parameter_js_2.Parameter(`/a[:]<Attributes>`, `Deletes files based on the following file attributes:</br>r Read-only files</br>h Hidden files</br>i Not content indexed files</br>s System files</br>a Files ready for archiving</br>l Reparse points</br>-  Prefix meaning 'not'`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Deletes one or more files. This command is the same as the erase command.`, `del [/p] [/f] [/s] [/q] [/a[:]<Attributes>] <Names>

erase [/p] [/f] [/s] [/q] [/a[:]<Attributes>] <Names>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`dfsrmig`, [
            new Parameter_js_2.Parameter(`/SetGlobalState <state>`, `Sets the desired global migration state for the domain to the state that corresponds to the value specified by *state*.<br /><br />To proceed through the migration or the rollback processes, use this command to cycle through the valid states. This option enables you to initiate and control the migration process by setting the global migration state in AD DS on the PDC emulator. If the PDC emulator is not available, this command fails.<br /><br /> You can only set the global migration state to a stable state. The valid values for *state*, therefore, are 0 for the start state, 1 for the Prepared state, 2 for the Redirected state, and 3 for the Eliminated state.<br /><br />Migration to the Eliminated state is irreversible and rollback from that state is not possible, so use a value of 3 for *state* only when you are fully committd to using DFS Replication for SYSvol replication.`, ``),
            new Parameter_js_2.Parameter(`/GetGlobalState`, `Retrieves the current global migration state for the domain from the local copy of the AD DS database, when run on the PDC emulator.<br /><br />Use this option to confirm that you set the correct global migration state. Only stable migration states can be global migration states, so the results that the dfsrmig command reports with the /GetGlobalState option correspond to the states you can set with the /SetGlobalState option.<br /><br />You should run the dfsrmig command with the /GetGlobalState option only on the PDC emulator. active directory replication replicates the global state to the other domain controllers in the domain, but replication latencies can cause inconsistencies if you run the dfsrmig command with the /GetGlobalState option on a domain controller other than the PDC emulator. To check the local migration status of a domain controller other than the PDC emulator, use the /GetMigrationState option instead.`, ``),
            new Parameter_js_2.Parameter(`/GetMigrationState`, `Retrieves the current local migration state for all domain controllers in the domain, and determines whether those local states match the current global migration state.<br /><br />Use this option to determine if all domain controllers have reached the global migration state. The output of the dsfrmig command when you use the /GetMigrationState option indicates whether or not migration to the current global state is complete, and it lists the local migration state for any domain controllers that have not reached the current global migration state. Local migration state for domain controllers can include transition states for domain controllers that have not reached the current global migration state.`, ``),
            new Parameter_js_2.Parameter(`/createGlobalObjects`, `creates the global objects and settings in AD DS that DFS Replication uses.<br /><br />You should not need to use this option during a normal migration process, because the DFS Replication service automatically creates these AD DS objects and settings during the migration from the start state to the Prepared state. Use this option to manually create these objects and settings in the following situations:<br /><br />-   A new read-only domain controller is promoted during migration. The DFS Replication service automatically creates the AD DS objects and settings for DFS Replication during the migration from the start state to the Prepared state. If a new read-only domain controller is promoted in the domain after this transition, but before migration to the Eliminated state, then the objects that correspond to the newly activated read-only domain controller are not created in AD DS causing replication and migration to fail.<br />-   In this case, you can run the dfsrmig command wth the /createGlobalObjects option to manually create the objects on any read-only domain controllers that do not already have them. Running this command does not affect the domain controllers that already have the objects and settings for the DFS Replication service.<br />-   The global settings for the DFS Replication service are missing or were deleted. If these settings are missing for a particular domain controller, migration from the start state to the Prepared state stalls at the Preparing transition state for the domain controller. In this case, you can use the dfsrmig command with the /createGlobalObjects option to manually create the settings. Note: Because the global AD DS settings for the DFS Replication service for a read-only domain controller are created on the PDC emulator, these settings need to replicate to the read-only domain controller from the PDC emulator before the DFS Replication service on the read-only domain controller can use these settings. Because of active irectory replication latencies, this replication can take some time to occur.`, ``),
            new Parameter_js_2.Parameter(`/deleteRoNtfrsMember [<read_only_domain_controller_name>]`, `deletes the global AD DS settings for FRS replication that correspond to the specified read-only domain controller, or deletes the global AD DS settings for FRS replication for all read-only domain controllers if no value is specified for *read_only_domain_controller_name*.<br /><br />You should not need to use this option during a normal migration process, because the DFS Replication service automatically deletes these AD DS settings during the migration from the Redirected state to the Eliminated state. Because read-only domain controllers cannot delete these settings from AD DS, the PDC emulator performs this operation, and the changes eventually replicate to the read-only domain controllers after the applicable latencies for active directory replication.<br /><br />You use this option to manually delete the AD DS settings only when the automatic deletion fails on a read-only domain controller and stalls the read-only domain controller for a long ime during the migration from the Redirected state to the Eliminated state.`, ``),
            new Parameter_js_2.Parameter(`/deleteRoDfsrMember [<read_only_domain_controller_name>]`, `deletes the global AD DS settings for DFS Replication that correspond to the specified read-only domain controller, or deletes the global AD DS settings for DFS Replication for all read-only domain controllers if no value is specified for *read_only_domain_controller_name*.<br /><br />Use this option to manually delete the AD DS settings only when the automatic deletion fails on a read-only domain controller and stalls the read-only domain controller for a long time when rolling back the migration from the Prepared state to the start state.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt. Equivalent to running dfsrmig without any options.`, ``),
        ], `The "dfsrmig" command migrates SYSvol replication from File Replication Service (FRS) to Distributed File System (DFS) Replication, provides information about the progress of the migration, and modifies active directory Domain Services (AD DS) objects to support the migration.`, `dfsrmig [/SetGlobalState <state> | /GetGlobalState | /GetMigrationState | /createGlobalObjects | 

/deleteRoNtfrsMember [<read_only_domain_controller_name>] | /deleteRoDfsrMember [<read_only_domain_controller_name>] | /?]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`diantz`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `This command is the same as the makecab command.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`dir`, [
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]`, `Specifies the drive and directory for which you want to see a listing.`, ``),
            new Parameter_js_2.Parameter(`[<FileName>]`, `Specifies a particular file or group of files for which you want to see a listing.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Displays one screen of the listing at a time. To see the next screen, press any key on the keyboard.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Displays file ownership information.`, ``),
            new Parameter_js_2.Parameter(`/w`, `Displays the listing in wide format, with as many as five file names or directory names on each line.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Displays the listing in the same format as /w, but the files are sorted by column.`, ``),
            new Parameter_js_2.Parameter(`/a[[:]<Attributes>]`, `Displays only the names of those directories and files with the attributes that you specify. If you omit /a, dir displays the names of all files except hidden and system files. If you use /a without specifying *Attributes*, dir displays the names of all files, including hidden and system files.</br>The following list describes each of the values that you can use for *Attributes*. Using a colon (:) is optional. Use any combination of these values, and do not separate the values with spaces.</br>d Directories</br>h Hidden files</br>s System files</br>l Reparse points</br>r Read-only files</br>a Files ready for archiving</br>i Not content indexed files</br>- Prefix meaning "not"`, ``),
            new Parameter_js_2.Parameter(`/o[[:]<SortOrder>]`, `Sorts the output according to *SortOrder*, which can be any combination of the following values:</br>n By name (alphabetical)</br>e By extension (alphabetical)</br>g Group directories first</br>s By size (smallest first)</br>d By date/time (oldest first)</br>- Prefix to reverse order</br>Note: Using a colon is optional. Multiple values are processed in the order in which you list them. Do not separate multiple values with spaces.</br>If *SortOrder* is not specified, dir /o lists the directories in alphabetic order, followed by the files, which are also sorted in alphabetic order.`, ``),
            new Parameter_js_2.Parameter(`/t[[:]<TimeField>]`, `Specifies which time field to display or use for sorting. The following list describes each of the values you can use for *TimeField*:</br>c Creation</br>a Last access</br>w Last written`, ``),
            new Parameter_js_2.Parameter(`/s`, `Lists every occurrence of the specified file name within the specified directory and all subdirectories.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Displays a bare list of directories and files, with no additional information. /b overrides /w.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Displays unsorted directory names and file names in lowercase.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Displays a long list format with file names on the far right of the screen.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Displays the short names generated for non-8dot3 file names. The display is the same as the display for /n, but the short name is inserted before the long name.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Displays the thousand separator in file sizes. This is the default behavior. Use /-c to hide separators.`, ``),
            new Parameter_js_2.Parameter(`/4`, `Displays years in four-digit format.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays a list of a directory's files and subdirectories. If used without parameters, dir displays the disk's volume label and serial number, followed by a list of directories and files on the disk (including their names and the date and time each was last modified). For files, dir displays the name extension and the size in bytes. Dir also displays the total number of files and directories listed, their cumulative size, and the free space (in bytes) remaining on the disk.`, `dir [<Drive>:][<Path>][<FileName>] [...] [/p] [/q] [/w] [/d] [/a[[:]<Attributes>]][/o[[:]<SortOrder>]] [/t[[:]<TimeField>]] [/s] [/b] [/l] [/n] [/x] [/c] [/4]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`diskcomp`, [
            new Parameter_js_2.Parameter(`<Drive1>`, `Specifies the drive containing one of the floppy disks.`, ``),
            new Parameter_js_2.Parameter(`<Drive2>`, `Specifies the drive containing the other floppy disk.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Compares the contents of two floppy disks. If used without parameters, diskcomp uses the current drive to compare both disks.For examples of how to use this command, see [Examples](#BKMK_examples).`, `diskcomp [<Drive1>: [<Drive2>:]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`diskcopy`, [
            new Parameter_js_2.Parameter(`<Drive1>`, `Specifies the drive that contains the source disk.`, ``),
            new Parameter_js_2.Parameter(`<Drive2>`, `Specifies the drive that contains the destination disk.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Verifies that the information is copied correctly. This option slows down the copying process.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Copies the contents of the floppy disk in the source drive to a formatted or unformatted floppy disk in the destination drive. If used without parameters, diskcopy uses the current drive for the source disk and the destination disk.`, `diskcopy [<Drive1>: [<Drive2>:]] [/v]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`diskperf`, [
            new Parameter_js_2.Parameter(`-?`, `Displays context sensitive help.`, ``),
            new Parameter_js_2.Parameter(`-Y`, `Start all disk performance counters when the computer restarts.`, ``),
            new Parameter_js_2.Parameter(`-YD`, `Enable disk performance counters for physical drives when the computer restarts.`, ``),
            new Parameter_js_2.Parameter(`-YV`, `Enable disk performance counters for logical drives or storage volumes when the computer restarts.`, ``),
            new Parameter_js_2.Parameter(`-N`, `Disable all disk performance counters when the computer restarts.`, ``),
            new Parameter_js_2.Parameter(`-ND`, `Disable disk performance counters for physical drives when the computer restarts.`, ``),
            new Parameter_js_2.Parameter(`-NV`, `Disable disk performance counters for logical drives or storage volumes when the computer restarts.`, ``),
            new Parameter_js_2.Parameter(`\\\*<computername>*`, `Specify the name of the computer where you want to enable or disable disk performance counters.`, ``),
        ], `In Windows 2000, physical and logical disk performance counters are not enabled by default.`, `diskperf [-Y[D|V] | -N[D|V]] [\\computername]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`diskraid`, [
            new Parameter_js_2.Parameter(`FCR`, `Fast Crash Recovery Required`, ``),
            new Parameter_js_2.Parameter(`FTL`, `Fault Tolerant`, ``),
            new Parameter_js_2.Parameter(`MSR`, `Mostly Reads`, ``),
            new Parameter_js_2.Parameter(`MXD`, `Maximum Drives`, ``),
            new Parameter_js_2.Parameter(`MXS`, `Maximum Size Expected`, ``),
            new Parameter_js_2.Parameter(`ORA`, `Optimal Read Alignment`, ``),
            new Parameter_js_2.Parameter(`ORS`, `Optimal Read Size`, ``),
            new Parameter_js_2.Parameter(`OSR`, `Optimize For Sequential Reads`, ``),
            new Parameter_js_2.Parameter(`OSW`, `Optimize For Sequential Writes`, ``),
            new Parameter_js_2.Parameter(`OWA`, `Optimal Write Alignment`, ``),
            new Parameter_js_2.Parameter(`OWS`, `Optimal Write Size`, ``),
            new Parameter_js_2.Parameter(`RBP`, `Rebuild Priority`, ``),
            new Parameter_js_2.Parameter(`RBV`, `Read Back Verify Enabled`, ``),
            new Parameter_js_2.Parameter(`RMP`, `Remap Enabled`, ``),
            new Parameter_js_2.Parameter(`STS`, `Stripe Size`, ``),
            new Parameter_js_2.Parameter(`WTC`, `Write-Through Caching Enabled`, ``),
            new Parameter_js_2.Parameter(`YNK`, `Removable`, ``),
        ], `DiskRAID is a command-line tool that enables you to configure and manage redundant array of independent (or inexpensive) disks (RAID) storage subsystems.`, `add plex lun=n [noerr]

add tpgroup tportal=n [noerr]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`diskshadow`, [
            new Parameter_js_2.Parameter(`[set_2](set_2.md)`, `Sets the context, options, verbose mode, and metadata file for creating shadow copies.`, ``),
            new Parameter_js_2.Parameter(`[Simulate restore](simulate-restore.md)`, `Tests writer involvement in restore sessions on the computer without issuing PreRestore or PostRestore events to writers.`, ``),
            new Parameter_js_2.Parameter(`[Load metadata](load-metadata.md)`, `Loads a metadata .cab file prior to importing a transportable shadow copy or loads the writer metadata in the case of a restore.`, ``),
            new Parameter_js_2.Parameter(`[writer](writer.md)`, `verifies that a writer or component is included or excludes a writer or component from the backup or restore procedure.`, ``),
            new Parameter_js_2.Parameter(`[add_1](add_1.md)`, `adds volumes to the set of volumes that are to be shadow copied, or adds aliases to the alias environment.`, ``),
            new Parameter_js_2.Parameter(`[create_1](create_1.md)`, `starts the shadow copy creation process, using the current context and option settings.`, ``),
            new Parameter_js_2.Parameter(`[exec](exec.md)`, `executes a file on the local computer.`, ``),
            new Parameter_js_2.Parameter(`[Begin backup](begin-backup.md)`, `starts a full backup session.`, ``),
            new Parameter_js_2.Parameter(`[End backup](end-backup.md)`, `Ends a full backup session and issues a Backupcomplete event with the appropriate writer state, if needed.`, ``),
            new Parameter_js_2.Parameter(`[Begin restore](begin-restore.md)`, `starts a restore session and issues a PreRestore event to involved writers.`, ``),
            new Parameter_js_2.Parameter(`[End restore](end-restore.md)`, `Ends a restore session and issues a PostRestore event to involved writers.`, ``),
            new Parameter_js_2.Parameter(`[reset](reset.md)`, `resets diskshadow to the default state.`, ``),
            new Parameter_js_2.Parameter(`[list](list.md)`, `lists writers, shadow copies, or currently registered shadow copy providers that are on the system.`, ``),
            new Parameter_js_2.Parameter(`[delete shadows](delete-shadows.md)`, `deletes shadow copies.`, ``),
            new Parameter_js_2.Parameter(`[import](import.md)`, `imports a transportable shadow copy from a loaded metadata file into the system.`, ``),
            new Parameter_js_2.Parameter(`[mask](mask.md)`, `removes hardware shadow copies that were imported by using the import command.`, ``),
            new Parameter_js_2.Parameter(`[expose](expose.md)`, `exposes a persistent shadow copy as a drive letter, share, or mount point.`, ``),
            new Parameter_js_2.Parameter(`[unexpose](unexpose.md)`, `unexposes a shadow copy that was exposed by using the expose command.`, ``),
            new Parameter_js_2.Parameter(`[break_2](break_2.md)`, `Disassociates a shadow copy volume from VSS.`, ``),
            new Parameter_js_2.Parameter(`[revert](revert.md)`, `reverts a volume back to a specified shadow copy.`, ``),
            new Parameter_js_2.Parameter(`[exit_1](exit_1.md)`, `exits diskshadow.`, ``),
        ], `diskshadow.exe is a tool that exposes the functionality offered by the volume shadow copy Service \(VSS\). By default, diskshadow uses an interactive command interpreter similar to that of diskraid or DiskPart. diskshadow also includes a scriptable mode.  `, `diskshadow`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`dispdiag`, [
            new Parameter_js_2.Parameter(`- testacpi`, `Runs hotkey diagnostics test. Displays the key name, code and scan code for any key pressed during the test.`, ``),
            new Parameter_js_2.Parameter(`-d`, `Generates a dump file with test results.`, ``),
            new Parameter_js_2.Parameter(`-delay <Seconds>`, `Delays the collection of data by specified time in *seconds*.`, ``),
            new Parameter_js_2.Parameter(`-out <FilePath>`, `Specifies path and filename to save collected data. This must be the last parameter.`, ``),
            new Parameter_js_2.Parameter(`-?`, `Displays available command parameters and provides help for using them.`, ``),
        ], `Logs display information to a file.`, `dispdiag [-testacpi] [-d] [-delay <Seconds>] [-out <FilePath>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Dnscmd`, [
            new Parameter_js_2.Parameter(`<ServerName>`, `The IP address or host name of a remote or local DNS server.`, ``),
        ], `A command-line interface for managing DNS servers. This utility is useful in scripting batch files to help automate routine DNS management tasks, or to perform simple unattended setup and configuration of new DNS servers on your network.  `, `dnscmd <ServerName> <command> [<command parameters>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`doskey`, [
            new Parameter_js_2.Parameter(`/reinstall`, `Installs a new copy of Doskey.exe and clears the command history buffer.`, ``),
            new Parameter_js_2.Parameter(`/listsize=<Size>`, `Specifies the maximum number of commands in the history buffer.`, ``),
            new Parameter_js_2.Parameter(`/macros`, `Displays a list of all doskey macros. You can use the redirection symbol (>) with /macros to redirect the list to a file. You can abbreviate /macros to /m.`, ``),
            new Parameter_js_2.Parameter(`/macros:all`, `Displays doskey macros for all executables.`, ``),
            new Parameter_js_2.Parameter(`/macros:<ExeName>`, `Displays doskey macros for the executable specified by *ExeName*.`, ``),
            new Parameter_js_2.Parameter(`/history`, `Displays all commands that are stored in memory. You can use the redirection symbol (>) with /history to redirect the list to a file. You can abbreviate /history as /h.`, ``),
            new Parameter_js_2.Parameter(`[/insert `, ` /overstrike]`, ``),
            new Parameter_js_2.Parameter(`/exename=<ExeName>`, `Specifies the program (that is, executable) in which the doskey macro runs.`, ``),
            new Parameter_js_2.Parameter(`/macrofile=<FileName>`, `Specifies a file that contains the macros that you want to install.`, ``),
            new Parameter_js_2.Parameter(`<MacroName>=[<Text>]`, `Creates a macro that carries out the commands specified by *Text*. *MacroName* specifies the name you want to assign to the macro. *Text* specifies the commands you want to record. If *Text* is left blank, *MacroName* is cleared of any assigned commands.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Calls Doskey.exe (which recalls previously entered command-line commands), edits command lines, and creates macros.`, `doskey [/reinstall] [/listsize=<Size>] [/macros:[all | <ExeName>] [/history] [/insert | /overstrike] [/exename=<ExeName>] [/macrofile=<FileName>] [<MacroName>=[<Text>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`driverquery`, [
            new Parameter_js_2.Parameter(`/s <System>`, `Specifies the name or IP address of a remote computer. Do not use backslashes. The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u [<Domain>]<Username>`, `Runs the command with the credentials of the user account as specified by *User* or *DomainUser*. By default, /s uses the credentials of the user who is currently logged on to the computer that is issuing the command. /u cannot be used unless /s is specified.`, ``),
            new Parameter_js_2.Parameter(`/p <Password>`, `Specifies the password of the user account that is specified in the /u parameter. /p cannot be used unless /u is specified.`, ``),
            new Parameter_js_2.Parameter(`/fo {table `, ` list `, ``),
            new Parameter_js_2.Parameter(`/nh`, `Omits the header row from the displayed driver information. Not valid if the /fo parameter is set to list.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays verbose output. /v is not valid for signed drivers.`, ``),
            new Parameter_js_2.Parameter(`/si`, `Provides information about signed drivers.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables an administrator to display a list of installed device drivers and their properties. If used without parameters, driverquery runs on the local computer.`, `driverquery [/s <System> [/u [<Domain>\]<Username> [/p <Password>]]] [/fo {table | list | csv}] [/nh] [/v | /si]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`echo`, [
            new Parameter_js_2.Parameter(`[on | off]`, `Turns on or off the command echoing feature. Command echoing is on by default.`, ``),
            new Parameter_js_2.Parameter(`<Message>`, `Specifies the text to display on the screen.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays messages or turns on or off the command echoing feature. If used without parameters, echo displays the current echo setting.`, `echo [<Message>]

echo [on | off]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`edit`, [
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]<FileName> [<FileName2> [...]]`, `Specifies the location and name of one or more ASCII text files. If the file does not exist, MS-DOS Editor creates it. If the file exists, MS-DOS Editor opens it and displays its contents on the screen. *FileName* can contain wildcard characters (* and ?). Separate multiple file names with spaces.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Forces monochrome mode, so that MS-DOS Editor displays in black and white.`, ``),
            new Parameter_js_2.Parameter(`/h`, `Displays the maximum number of lines possible for the current monitor.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Loads file(s) in read-only mode.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Forces the use of short filenames.`, ``),
            new Parameter_js_2.Parameter(`<NNN>`, `Loads binary file(s), wrapping lines to *NNN* characters wide.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Starts MS-DOS Editor, which creates and changes ASCII text files.`, `edit [/b] [/h] [/r] [/s] [/<NNN>] [[<Drive>:][<Path>]<FileName> [<FileName2> [...]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`endlocal`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Ends localization of environment changes in a batch file, and restores environment variables to their values before the corresponding setlocal command was run.`, `endlocal`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`erase`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `This command is the same as the del command. See [Del](del.md) for syntax and parameters.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`eventcreate`, [
            new Parameter_js_2.Parameter(`/s <Computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u <DomainUser>`, `Runs the command with the account permissions of the user specified by <User> or <DomainUser>. The default is the permissions of the current logged on user on the computer issuing the command.`, ``),
            new Parameter_js_2.Parameter(`/p <Password>`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`/l {APPLICATION`, `SYSTEM}`, ``),
            new Parameter_js_2.Parameter(`/so <SrcName>`, `Specifies the source to use for the event. A valid source can be any string and should represent the application or component that is generating the event.`, ``),
            new Parameter_js_2.Parameter(`/t {ERROR`, `WARNING`, ``),
            new Parameter_js_2.Parameter(`/id <EventID>`, `Specifies the event ID for the event. A valid ID is any number from 1 to 1000.`, ``),
            new Parameter_js_2.Parameter(`/d <Description>`, `Specifies the description to use for the newly created event.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables an administrator to create a custom event in a specified event log. For examples of how to use this command, see [Examples](#BKMK_examples).`, `eventcreate [/s <Computer> [/u <Domain\User> [/p <Password>]] {[/l {APPLICATION|SYSTEM}]|[/so <SrcName>]} /t {ERROR|WARNING|INFORMATION|SUCCESSAUDIT|FAILUREAUDIT} /id <EventID> /d <Description>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`eventquery`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `eventquery is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`eventtriggers`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Eventtriggers is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Evntcmd`, [
            new Parameter_js_2.Parameter(`/s <computerName>`, `Specifies, by name, the computer on which you want to configure the translation of events to traps, trap destinations, or both. If you do not specify a computer, the configuration occurs on the local computer.`, ``),
            new Parameter_js_2.Parameter(`/v <verbosityLevel>`, `Specifies which types of status messages appear as traps and trap destinations are configured. This parameter must be an integer between 0 and 10. If you specify 10, all types of messages appear, including tracing messages and warnings about whether trap configuration was successful. If you specify 0, no messages appear.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Specifies that the SNMP service should not be restarted if this computer receives trap configuration changes.`, ``),
            new Parameter_js_2.Parameter(`<FileName>`, `Specifies, by name, the configuration file that contains information about the translation of events to traps and trap destinations you want to configure.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Configures the translation of events to traps, trap destinations, or both based on information in a configuration file.   `, `evntcmd [/s <computerName>] [/v <verbosityLevel>] [/n] <FileName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`exit`, [
            new Parameter_js_2.Parameter(`/b`, `exits the current batch script instead of exiting Cmd.exe. If executed from outside a batch script, exits Cmd.exe.`, ``),
            new Parameter_js_2.Parameter(`<exitCode>`, `Specifies a numeric number. If /b is specified, the ERRORLEVEL environment variable is set to that number. If you are quitting Cmd.exe, the process exit code is set to that number.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `exits the Cmd.exe program (the command interpreter) or the current batch script.  `, `exit [/b] [<exitCode>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`expand`, [
            new Parameter_js_2.Parameter(`/r`, `renames expanded files.`, ``),
            new Parameter_js_2.Parameter(`source`, `Specifies the files to expand. *Source* can consist of a drive letter and colon, a directory name, a file name, or a combination of these. You can use wildcards (* or ?).`, ``),
            new Parameter_js_2.Parameter(`destination`, `Specifies where files are to be expanded.<br /><br />if *source* consists of multiple files and you do not specify /r, *destination* must be a directory.<br /><br />*Destination* can consist of a drive letter and colon, a directory name, a file name, or a combination of these.<br /><br />Destination file &#124; path specification.`, ``),
            new Parameter_js_2.Parameter(`/i`, `renames expanded files but ignores the directory structure.<br /><br />This parameter applies to:  Windows Server 2008 R2  and  Windows 7 .`, ``),
            new Parameter_js_2.Parameter(`/d`, `Displays a list of files in the source location. Does not expand or extract the files.`, ``),
            new Parameter_js_2.Parameter(`/f:`, `Specifies the files in a cabinet (.cab) file that you want to expand. You can use wildcards (* or ?).`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `expands one or more compressed files. You can use this command to retrieve compressed files from distribution disks.  `, `expand [/r] <source> <destination>  

expand /r <source> [<destination>]  

expand /i <source> [<destination>]  

expand /d <source>.cab [/f:<files>]  

expand <source>.cab /f:<files> <destination>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`extract`, [
            new Parameter_js_2.Parameter(`cabinet`, `File contains two or more files.`, ``),
            new Parameter_js_2.Parameter(`filename`, `Name of the file to extract from the cabinet. Wild cards and multiple filenames (separated by blanks) may be used.`, ``),
            new Parameter_js_2.Parameter(`source`, `Compressed file (a cabinet with only one file).`, ``),
            new Parameter_js_2.Parameter(`newname`, `New filename to give the extracted file. If not supplied, the original name is used.`, ``),
            new Parameter_js_2.Parameter(`/A`, `Process ALL cabinets. Follows cabinet chain starting in first cabinet mentioned.`, ``),
            new Parameter_js_2.Parameter(`/C`, `Copy source file to destination (to copy from DMF disks).`, ``),
            new Parameter_js_2.Parameter(`/D`, `Display cabinet directory (use with filename to avoid extract).`, ``),
            new Parameter_js_2.Parameter(`/E`, `Extract (use instead of *.* to extract all files).`, ``),
            new Parameter_js_2.Parameter(`/L dir`, `Location to place extracted files (default is current directory).`, ``),
            new Parameter_js_2.Parameter(`/Y`, `Do not prompt before overwriting an existing file.`, ``),
        ], ``, `EXTRACT [/Y] [/A] [/D | /E] [/L dir] cabinet [filename ...]

EXTRACT [/Y] source [newname]

EXTRACT [/Y] /C source destination`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`fc`, [
            new Parameter_js_2.Parameter(`/a`, `Abbreviates the output of an ASCII comparison. Instead of displaying all of the lines that are different, fc displays only the first and last line for each set of differences.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Compares the two files in binary mode, byte by byte, and does not attempt to resynchronize the files after finding a mismatch. This is the default mode for comparing files that have the following file extensions: .exe, .com, .sys, .obj, .lib, or .bin.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Ignores the letter case.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Compares the files in ASCII mode, line-by-line, and attempts to resynchronize the files after finding a mismatch. This is the default mode for comparing files, except files with the following file extensions: .exe, .com, .sys, .obj, .lib, or .bin.`, ``),
            new Parameter_js_2.Parameter(`/lb<N>`, `Sets the number of lines for the internal line buffer to *N*. The default length of the line buffer is 100 lines. If the files that you are comparing have more than 100 consecutive differing lines, fc cancels the comparison.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Displays the line numbers during an ASCII comparison.`, ``),
            new Parameter_js_2.Parameter(`/off[line]`, `Does not skip files that have the offline attribute set.`, ``),
            new Parameter_js_2.Parameter(`/t`, `Prevents fc from converting tabs to spaces. The default behavior is to treat tabs as spaces, with stops at each eighth character position.`, ``),
            new Parameter_js_2.Parameter(`/u`, `Compares files as Unicode text files.`, ``),
            new Parameter_js_2.Parameter(`/w`, `Compresses white space (that is, tabs and spaces) during the comparison. If a line contains many consecutive spaces or tabs, /w treats these characters as a single space. When used with /w, fc ignores white space at the beginning and end of a line.`, ``),
            new Parameter_js_2.Parameter(`/<NNNN>`, `Specifies the number of consecutive lines that must match following a mismatch, before fc considers the files to be resynchronized. If the number of matching lines in the files is less than *NNNN*, fc displays the matching lines as differences. The default value is 2.`, ``),
            new Parameter_js_2.Parameter(`[<Drive1>:][<Path1>]<FileName1>`, `Specifies the location and name of the first file or set of files to compare. *FileName1* is required.`, ``),
            new Parameter_js_2.Parameter(`[<Drive2>:][<Path2>]<FileName2>`, `Specifies the location and name of the second file or set of files to compare. *FileName2* is required.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Compares two files or sets of files and displays the differences between them.`, `fc /a [/c] [/l] [/lb<N>] [/n] [/off[line]] [/t] [/u] [/w] [/<NNNN>] [<Drive1>:][<Path1>]<FileName1> [<Drive2>:][<Path2>]<FileName2>

fc /b [<Drive1:>][<Path1>]<FileName1> [<Drive2:>][<Path2>]<FileName2>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`find`, [
            new Parameter_js_2.Parameter(`/v`, `Displays all lines that do not contain the specified <String>.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Counts the lines that contain the specified <String>and displays the total.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Precedes each line with the file's line number.`, ``),
            new Parameter_js_2.Parameter(`/i`, `Specifies that the search is not case-sensitive.`, ``),
            new Parameter_js_2.Parameter(`[/off[line]]`, `Does not skip files that have the offline attribute set.`, ``),
            new Parameter_js_2.Parameter(`"<String>"`, `Required. Specifies the group of characters (enclosed in quotation marks) that you want to search for.`, ``),
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]<FileName>`, `Specifies the location and name of the file in which to search for the specified string.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Searches for a string of text in a file or files, and displays lines of text that contain the specified string.`, `find [/v] [/c] [/n] [/i] [/off[line]] "<String>" [[<Drive>:][<Path>]<FileName>[...]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`findstr`, [
            new Parameter_js_2.Parameter(`/b`, `Matches the text pattern if it is at the beginning of a line.`, ``),
            new Parameter_js_2.Parameter(`/e`, `Matches the text pattern if it is at the end of a line.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Processes search strings literally.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Processes search strings as regular expressions. This is the default setting.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Searches the current directory and all subdirectories.`, ``),
            new Parameter_js_2.Parameter(`/i`, `Ignores the case of the characters when searching for the string.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Prints lines that match exactly.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Prints only lines that do not contain a match.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Prints the line number of each line that matches.`, ``),
            new Parameter_js_2.Parameter(`/m`, `Prints only the file name if a file contains a match.`, ``),
            new Parameter_js_2.Parameter(`/o`, `Prints character offset before each matching line.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Skips files with non-printable characters.`, ``),
            new Parameter_js_2.Parameter(`/off[line]`, `Does not skip files that have the offline attribute set.`, ``),
            new Parameter_js_2.Parameter(`/f:<File>`, `Gets a file list from the specified file.`, ``),
            new Parameter_js_2.Parameter(`/c:<String>`, `Uses the specified text as a literal search string.`, ``),
            new Parameter_js_2.Parameter(`/g:<File>`, `Gets search strings from the specified file.`, ``),
            new Parameter_js_2.Parameter(`/d:<DirList>`, `Searches the specified list of directories. Each directory must be separated with a semicolon (;), for example "dir1;dir2;dir3".`, ``),
            new Parameter_js_2.Parameter(`/a:<ColorAttribute>`, `Specifies color attributes with two hexadecimal digits. Type "color /?" for additional information.`, ``),
            new Parameter_js_2.Parameter(`<Strings>`, `Specifies the text to search for in *FileName*. Required.`, ``),
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]<FileName>[ ...]`, `Specifies the location and file or files to search. At least one file name is required.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Searches for patterns of text in files.`, `findstr [/b] [/e] [/l | /r] [/s] [/i] [/x] [/v] [/n] [/m] [/o] [/p] [/f:<File>] [/c:<String>] [/g:<File>] [/d:<DirList>] [/a:<ColorAttribute>] [/off[line]] <Strings> [<Drive>:][<Path>]<FileName>[ ...]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`finger`, [
            new Parameter_js_2.Parameter(`-l`, `Displays user information in long list format.`, ``),
            new Parameter_js_2.Parameter(`<User>`, `Specifies the user about which you want information. If you omit the *User* parameter, finger displays information about all users on the specified computer.`, ``),
            new Parameter_js_2.Parameter(`@<Host>`, `Specifies the remote computer running the finger service where you are looking for user information. You can specify a computer name or IP address.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays information about a user or users on a specified remote computer (typically a computer running UNIX) that is running the finger service or daemon. The remote computer specifies the format and output of the user information display. Used without parameters, finger displays help. `, `finger [-l] [<User>] [@<Host>] [...]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`flattemp`, [
            new Parameter_js_2.Parameter(`/query`, `Queries the current setting.`, ``),
            new Parameter_js_2.Parameter(`/enable`, `Enables flat temporary folders. Users will share the temporary folder unless the temporary folder resides in the user s home folder.`, ``),
            new Parameter_js_2.Parameter(`/disable`, `Disables flat temporary folders. Each user s temporary folder will reside in a separate folder (determined by the user s Session ID).`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables or disables flat temporary folders.`, `flattemp {/query | /enable | /disable}`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`fondue`, [
            new Parameter_js_2.Parameter(`/enable-feature:<*feature_name*>`, `Specifies the name of the Windows optional feature you want to enable. You can only enable one feature per command line. To enable multiple features, use fondue.exe for each feature.`, ``),
            new Parameter_js_2.Parameter(`/caller-name:<*program_name*>`, `Specifies the program or process name when you call fondue.exe from a script or batch file. You can use this option to add the program name to the SQM report if there is an error.`, ``),
            new Parameter_js_2.Parameter(`/hide-ux:{all &#124; rebootRequest}`, `Use all to hide all messages to the user including progress and permission requests to access Windows Update. If permission is required, the operation will fail.<br /><br />Use rebootRequest to only hide user messages asking for permission to reboot the computer. Use this option if you have a script that controls reboot requests.`, ``),
        ], `Enables Windows optional features by downloading required files from Windows Update or another source specified by Group Policy. The manifest file for the feature must already be installed in your Windows image. `, `fondue.exe /enable-feature:<feature_name> [/caller-name:<program_name>] [/hide-ux:{all | rebootRequest}]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`for`, [
            new Parameter_js_2.Parameter(`{%%|%}<Variable>`, `Required. Represents a replaceable parameter. Use a single percent sign (%) to carry out the for command at the command prompt. Use double percent signs (%%) to carry out the for command within a batch file. Variables are case sensitive, and they must be represented with an alphabetical value such as %A, %B, or %C.`, ``),
            new Parameter_js_2.Parameter(`(<Set>)`, `Required. Specifies one or more files, directories, or text strings, or a range of values on which to run the command. The parentheses are required.`, ``),
            new Parameter_js_2.Parameter(`<Command>`, `Required. Specifies the command that you want to carry out on each file, directory, or text string, or on the range of values included in *Set*.`, ``),
            new Parameter_js_2.Parameter(`<CommandLineOptions>`, `Specifies any command-line options that you want to use with the specified command.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Runs a specified command for each file in a set of files.`, `for {%%|%}<Variable> in (<Set>) do <Command> [<CommandLineOptions>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`forfiles`, [
            new Parameter_js_2.Parameter(`/p <Path>`, `Specifies the path from which to start the search. By default, searching starts in the current working directory.`, ``),
            new Parameter_js_2.Parameter(`/m <SearchMask>`, `Searches files according to the specified search mask. The default search mask is *.*.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Instructs the forfiles command to search into subdirectories recursively.`, ``),
            new Parameter_js_2.Parameter(`/c "<Command>"`, `Runs the specified command on each file. Command strings should be enclosed in quotation marks. The default command is "cmd /c echo @file".`, ``),
            new Parameter_js_2.Parameter(`/d&nbsp;[{+|-}]&#8288;[{<Date>|&#8288;<Days>}]`, `Selects files with a last modified date within the specified time frame.</br>-   Selects files with a last modified date later than or equal to (+) or earlier than or equal to (-) the specified date, where *Date* is in the format MM/DD/YYYY.</br>-   Selects files with a last modified date later than or equal to (+) the current date plus the number of days specified, or earlier than or equal to (-) the current date minus the number of days specified.</br>-   Valid values for *Days* include any number in the range 0â€“32,768. If no sign is specified, + is used by default.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Selects and executes a command on a file or set of files. This command is useful for batch processing.`, `forfiles [/p <Path>] [/m <SearchMask>] [/s] [/c "<Command>"] [/d [{+|-}][{<Date>|<Days>}]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Format`, [
            new Parameter_js_2.Parameter(`<Volume>`, `Specifies the mount point, volume name, or drive letter (followed by a colon) of the drive that you want to format. If you do not specify any of the following command-line options, format uses the volume type to determine the default format for the disk.`, ``),
            new Parameter_js_2.Parameter(`/fs:{FAT`, `FAT32`, ``),
            new Parameter_js_2.Parameter(`/v:<Label>`, `Specifies the volume label. If you omit the /v command-line option or use it without specifying a volume label, format prompts you for the volume label after the formatting is complete. Use the syntax /v: to prevent the prompt for a volume label. If you use a single format command to format more than one disk, all of the disks will be given the same volume label.`, ``),
            new Parameter_js_2.Parameter(`/a:<UnitSize>`, `Specifies the allocation unit size to use on FAT, FAT32, or NTFS volumes. If you do not specify *UnitSize*, it is chosen based on volume size. Default settings are strongly recommended for general use. The following list presents valid values for NTFS, FAT, and FAT32 *UnitSize*:</br>512</br>1024</br>2048</br>4096</br>8192</br>16K</br>32K</br>64K</br>FAT and FAT32 also support 128K and 256K for a sector size greater than 512 bytes.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Performs a quick format. Deletes the file table and the root directory of a previously formatted volume, but does not perform a sector-by-sector scan for bad areas. You should use the /q command-line option to format only previously formatted volumes that you know are in good condition. Note that /q overrides /p.`, ``),
            new Parameter_js_2.Parameter(`/f:<Size>`, `Specifies the size of the floppy disk to format. When possible, use this command-line option instead of the /t and /n command-line options. Windows accepts the following values for size:</br>-   1440 or 1440k or 1440kb</br>-   1.44 or 1.44m or 1.44mb</br>-   1.44-MB, double-sided, quadruple-density, 3.5-inch disk`, ``),
            new Parameter_js_2.Parameter(`/t:<Tracks>`, `Specifies the number of tracks on the disk. When possible, use the /f command-line option instead. If you use the /t option, you must also use the /n option. These options together provide an alternative method of specifying the size of the disk that is being formatted. This option is not valid with the /f option.`, ``),
            new Parameter_js_2.Parameter(`/n:<Sectors>`, `Specifies the number of sectors per track. When possible, use the /f command-line option instead of /n. If you use /n, you must also use /t. These two options together provide an alternative method of specifying the size of the disk that is being formatted. This option is not valid with the /f option.`, ``),
            new Parameter_js_2.Parameter(`/p:<Passes>`, `Zeros every sector on the volume for the number of passes specified. This option is not valid with the /q option.`, ``),
            new Parameter_js_2.Parameter(`/c`, `NTFS only. Files created on the new volume will be compressed by default.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Causes the volume to dismount, if necessary, before it is formatted. Any open handles to the volume will no longer be valid.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Formats a disk to accept Windows files.`, `format <Volume> [/fs:{FAT|FAT32|NTFS}] [/v:<Label>] [/q] [/a:<UnitSize>] [/c] [/x] [/p:<Passes>]

format <Volume> [/v:<Label>] [/q] [/f:<Size>] [/p:<Passes>]

format <Volume> [/v:<Label>] [/q] [/t:<Tracks> /n:<Sectors>] [/p:<Passes>]

format <Volume> [/v:<Label>] [/q] [/p:<Passes>]

format <Volume> [/q]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`freedisk`, [
            new Parameter_js_2.Parameter(`/s <computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer. This parameter applies to all files and folders specified in the command.`, ``),
            new Parameter_js_2.Parameter(`/u [<Domain>\]<User>`, `Runs the script with the permissions of the specified user account. The default is system permissions.`, ``),
            new Parameter_js_2.Parameter(`/p [<Password>]`, `Specifies the password of the user account that is specified in /u.`, ``),
            new Parameter_js_2.Parameter(`/d <Drive>`, `Specifies the drive for which you want to find out the availability of free space. You must specify <Drive>for a remote computer.`, ``),
            new Parameter_js_2.Parameter(`<Value>`, `Checks for a specific amount of free disk space. You can specify <Value>in bytes, KB, MB, GB, TB, PB, EB, ZB or YB.`, ``),
        ], `Checks to see if the specified amount of disk space is available before continuing with an installation process.`, `freedisk [/s <computer> [/u [<Domain>\]<User> [/p [<Password>]]]] [/d <Drive>] [<Value>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Fsutil`, [
            new Parameter_js_2.Parameter(`[Fsutil 8dot3name](fsutil-8dot3name.md) `, ` Queries or changes the settings for short name behavior on the system, for example, generates 8.3 character-length file names. Removes short names for all files within a directory. Scans a directory and identifies registry keys that might be impacted if short names were stripped from the files in the directory.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil behavior](fsutil-behavior.md) `, `Queries or sets volume behavior.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil dirty](fsutil-dirty.md)`, ` Queries whether the volume's dirty bit is set or sets a volume's dirty bit. When a volume's dirty bit is set, autochk automatically checks the volume for errors the next time the computer is restarted.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil file](fsutil-file.md)`, `Finds a file by user name (if Disk Quotas are enabled), queries allocated ranges for a file, sets a file's short name, sets a file's valid data length, sets zero data for a file, creates a new file of a specified size, finds a file ID if given the name, or finds a file link name for a specified file ID.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil fsinfo](fsutil-fsinfo.md)`, `Lists all drives and queries the drive type, volume information, NTFS-specific volume information, or file system statistics.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil hardlink](fsutil-hardlink.md)`, `Lists hard links for a file, or creates a hard link (a directory entry for a file). Every file can be considered to have at least one hard link. On NTFS volumes, each file can have multiple hard links, so a single file can appear in many directories (or even in the same directory, with different names). Because all of the links reference the same file, programs can open any of the links and modify the file. A file is deleted from the file system only after all links to it are deleted. After you create a hard link, programs can use it like any other file name.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil objectid](fsutil-objectid.md)`, `Manages object identifiers, which are used by the Windows operating system to track objects such as files and directories.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil quota](fsutil-quota.md)`, `Manages disk quotas on NTFS volumes to provide more precise control of network-based storage. Disk quotas are implemented on a per-volume basis and enable both hard- and soft-storage limits to be implemented on a per-user basis.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil repair](fsutil-repair.md)`, `Queries or sets the self-healing state of the volume. Self-healing NTFS attempts to correct corruptions of the NTFS file system online without requiring Chkdsk.exe to be run. Includes initiating on-disk verification and waiting for repair completion.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil reparsepoint](fsutil-reparsepoint.md)`, `Queries or deletes reparse points (NTFS file system objects that have a definable attribute containing user-controlled data). Reparse points are used to extend functionality in the input/output (I/O) subsystem. They are used for directory junction points and volume mount points. They are also used by file system filter drivers to mark certain files as special to that driver.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil resource](fsutil-resource.md)`, `Creates a Secondary Transactional Resource Manager, starts or stops a Transactional Resource Manager, displays information about a Transactional Resource Manager  or modifies its behavior.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil sparse](fsutil-sparse.md)`, `Manages sparse files. A sparse file is a file with one or more regions of unallocated data in it. A program will see these unallocated regions as containing bytes with the value zero, but no disk space is used to represent these zeros. All meaningful or nonzero data is allocated, whereas all non-meaningful data (large strings of data composed of zeros) is not allocated. When a sparse file is read, allocated data is returned as stored and unallocated data is returned as zeros (by default in accordance with the C2 security requirement specification). Sparse file support allows data to be deallocated from anywhere in the file.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil tiering](fsutil-tiering.md)`, `Enables management of storage tier functions, such as setting and disabling flags and listing of tiers.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil transaction](fsutil-transaction.md)`, `Commits a specified transaction, rolls back a specified transaction, or displays info about the transaction.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil usn](fsutil-usn.md)`, `Manages the update sequence number (USN) change journal, which provides a persistent log of all changes made to files on the volume.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil volume](fsutil-volume.md)`, `Manages a volume. Dismounts a volume, queries to see how much free space is available on a disk, or finds a file that is using a specified cluster.`, ``),
            new Parameter_js_2.Parameter(`[Fsutil wim](fsutil-wim.md)`, `Provides functions to discover and manage WIM-backed files.`, ``),
        ], `Performs tasks that are related to file allocation table (FAT) and NTFS file systems, such as managing reparse points, managing sparse files, or dismounting a volume. If it is used without parameters, Fsutil displays a list of supported subcommands. `, `> Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ftype`, [
            new Parameter_js_2.Parameter(`<FileType>`, `Specifies the file type to display or change.`, ``),
            new Parameter_js_2.Parameter(`<OpenCommandString>`, `Specifies the open command string to use when opening files of the specified file type.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or modifies file types that are used in file name extension associations. If used without an assignment operator (=), ftype displays the current open command string for the specified file type. If used without parameters, ftype displays the file types that have open command strings defined.`, `ftype [<FileType>[=[<OpenCommandString>]]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`fveupdate`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `FveUpdate is an internally used tool that is run by setup when a computer is upgraded from Windows Vista or Windows Server 2008 to Windows 7 or Windows Server 2008 R2. It updates the metadata associated with BitLocker to the latest version. This tool cannot be run independently.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`getmac`, [
            new Parameter_js_2.Parameter(`/s <computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u <Domain>\<User>`, `Runs the command with the account permissions of the user specified by User or DomainUser. The default is the permissions of the current logged on user on the computer issuing the command.`, ``),
            new Parameter_js_2.Parameter(`/p <Password>`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`/fo { TABLE &#124; list&#124; CSV}`, `Specifies the format to use for the query output. Valid values are TABLE, list, and CSV. The default format for output is TABLE.`, ``),
            new Parameter_js_2.Parameter(`/nh`, `Suppresses column header in output. Valid when the /fo parameter is set to TABLE or CSV.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Specifies that the output display verbose information.`, ``),
            new Parameter_js_2.Parameter(`/`, `?`, ``),
        ], `Returns the media access control (MAC) address and list of network protocols associated with each address for all network cards in each computer, either locally or across a network. `, `getmac[.exe][/s <computer> [/u <Domain\<User> [/p <Password>]]][/fo {TABLE | list | CSV}][/nh][/v]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`gettype`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Gettype is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`goto`, [
            new Parameter_js_2.Parameter(`<Label>`, `Specifies a text string that is used as a label in the batch program.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Directs cmd.exe to a labeled line in a batch program. Within a batch program, goto directs command processing to a line that is identified by a label. When the label is found, processing continues starting with the commands that begin on the next line.`, `goto <Label>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`gpfixup`, [
            new Parameter_js_2.Parameter(`/v`, `Displays detailed status messages.</br>If this parameter is not used, only error messages or a summary status message of SUCCESS or FAILURE appears.`, ``),
            new Parameter_js_2.Parameter(`/olddns:<OLDDNSNAME>`, `Specifies the old DNS name of the renamed domain as *<OLDDNSNAME>* when the domain rename operation changes the DNS name of a domain. You can use this parameter only if you also use the /newdns parameter to specify a new domain DNS name.`, ``),
            new Parameter_js_2.Parameter(`/newdns:<NEWDNSNAME>`, `Specifies the new DNS name of the renamed domain as *<NEWDNSNAME>* when the domain rename operation changes the DNS name of a domain. You can use this parameter only if you also use the /olddns parameter to specify the old domain DNS name.`, ``),
            new Parameter_js_2.Parameter(`/oldnb:<OLDFLATNAME>`, `Specifies the old NetBIOS name of the renamed domain as *<OLDFLATNAME>* when the domain rename operation changes the NetBIOS name of a domain. You can use this parameter only if you use the /newnb parameter to specify a new domain NetBIOS name.`, ``),
            new Parameter_js_2.Parameter(`/newnb:<NEWFLATNAME>`, `Specifies the new NetBIOS name of the renamed domain as *<NEWFLATNAME>* when the domain rename operation changes the NetBIOS name of a domain. You can use this parameter only if you use the /oldnb parameter to specify the old domain NetBIOS name.`, ``),
            new Parameter_js_2.Parameter(`/dc:<DCNAME>`, `Connect to the domain controller named *<DCNAME>* (a DNS name or a NetBIOS name). *<DCNAME>* must host a writable replica of the domain directory partition as indicated by one of the following:</br>-   The DNS name *<NEWDNSNAME>* by using /newdns</br>-   The NetBIOS name *<NEWFLATNAME>* by using /newnb</br>If this parameter is not used, connect to any domain controller in the renamed domain indicated by *<NEWDNSNAME>* or *<NEWFLATNAME>*.`, ``),
            new Parameter_js_2.Parameter(`/sionly`, `Performs only the Group Policy fix that relates to managed software installation (the Software Installation extension for Group Policy). Skip the actions that fix Group Policy links and the SYSVOL paths in GPOs.`, ``),
            new Parameter_js_2.Parameter(`/user:<USERNAME>`, `Runs this command in the security context of the user *<USERNAME>*, where *<USERNAME>* is in the format domainuser.</br>If this parameter is not used, runs this command as the logged in user.`, ``),
            new Parameter_js_2.Parameter(`/pwd:{<PASSWORD>`, `*}`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Fix domain name dependencies in Group Policy Objects and Group Policy links after a domain rename operation. For examples of how this command can be used, see [Examples](#BKMK_Examples).`, `Gpfixup [/v] 

[/olddns:<OLDDNSNAME> /newdns:<NEWDNSNAME>] 

[/oldnb:<OLDFLATNAME> /newnb:<NEWFLATNAME>] 

[/dc:<DCNAME>] [/sionly] 

[/user:<USERNAME> [/pwd:{<PASSWORD>|*}]] [/?]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`gpresult`, [
            new Parameter_js_2.Parameter(`/s <system>`, `Specifies the name or IP address of a remote computer. Do not use backslashes. The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u <USERNAME>`, `Uses the credentials of the specified user to run the command. The default user is the user who is logged on to the computer that issues the command.`, ``),
            new Parameter_js_2.Parameter(`/p [<PASSWOrd>]`, `Specifies the password of the user account that is provided in the /u parameter. If /p is omitted, gpresult prompts for the password. /p cannot be used with /x or /h.`, ``),
            new Parameter_js_2.Parameter(`/user [<TARGETDOMAIN>\]<TARGETUSER>`, `Specifies the remote user whose RSoP data is to be displayed.`, ``),
            new Parameter_js_2.Parameter(`/scope {user &#124; computer}`, `Displays RSoP data for either the user or the computer. If /scope is omitted, gpresult displays RSoP data for both the user and the computer.`, ``),
            new Parameter_js_2.Parameter(`[/x &#124; /h] <FILENAME>`, `Saves the report in either XML (/x) or HTML (/h) format at the location and with the file name that is specified by the *FILENAME* parameter. Cannot be used with /u, /p, /r, /v, or /z.`, ``),
            new Parameter_js_2.Parameter(`/f`, `forces gpresult to overwrite the file name that is specified in the /x or /h option.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Displays RSoP summary data.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays verbose policy information. This includes detailed settings that were applied with a precedence of 1.`, ``),
            new Parameter_js_2.Parameter(`/z`, `Displays all available information about Group Policy. This includes detailed settings that were applied with a precedence of 1 and higher.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the Resultant Set of Policy (RSoP) information for a remote user and computer.`, `gpresult [/s <system> [/u <USERNAME> [/p [<PASSWOrd>]]]] [/user [<TARGETDOMAIN>\]<TARGETUSER>] [/scope {user | computer}] {/r | /v | /z | [/x | /h] <FILENAME> [/f] | /?}`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`gpupdate`, [
            new Parameter_js_2.Parameter(`/target:{Computer `, ` User}`, ``),
            new Parameter_js_2.Parameter(`/force`, `Reapplies all policy settings. By default, only policy settings that have changed are applied.`, ``),
            new Parameter_js_2.Parameter(`/wait:<VALUE>`, `Sets the number of seconds to wait for policy processing to finish before returning to the command prompt. When the time limit is exceeded, the command prompt appears, but policy processing continues. The default value is 600 seconds. The value 0 means not to wait. The value -1 means to wait indefinitely.</br>In a script, by using this command with a time limit specified, you can run gpupdate and continue with commands that do not depend upon the completion of gpupdate. Alternatively, you can use this command with no time limit specified to let gpupdate finish running before other commands that depend on it are run.`, ``),
            new Parameter_js_2.Parameter(`/logoff`, `Causes a logoff after the Group Policy settings are updated. This is required for those Group Policy client-side extensions that do not process policy on a background update cycle but do process policy when a user logs on. Examples include user-targeted Software Installation and Folder Redirection. This option has no effect if there are no extensions called that require a logoff.`, ``),
            new Parameter_js_2.Parameter(`/boot`, `Causes a computer restart after the Group Policy settings are applied. This is required for those Group Policy client-side extensions that do not process policy on a background update cycle but do process policy at computer startup. Examples include computer-targeted Software Installation. This option has no effect if there are no extensions called that require a restart.`, ``),
            new Parameter_js_2.Parameter(`/sync`, `Causes the next foreground policy application to be done synchronously. Foreground policy is applied at computer boot and user logon. You can specify this for the user, computer, or both, by using the /target parameter. The /force and /wait parameters are ignored if you specify them.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Updates Group Policy settings. For examples of how this command can be used, see [Examples](#BKMK_Examples).`, `gpupdate [/target:{Computer | User}] [/force] [/wait:<VALUE>] [/logoff] [/boot] [/sync] [/?]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`graftabl`, [
            new Parameter_js_2.Parameter(`<CodePage>`, `Specifies a code page to define the appearance of extended characters in graphics mode.</br>Valid code page identification numbers are:</br>437: United States</br>850: Multilingual (Latin I)</br>852: Slavic (Latin II)</br>855: Cyrillic (Russian)</br>857: Turkish</br>860: Portuguese</br>861: Icelandic</br>863: Canadian-French</br>865: Nordic</br>866: Russian</br>869: Modern Greek`, ``),
            new Parameter_js_2.Parameter(`/status`, `Displays the current code page that graftabl is using.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables Windows operating systems to display an extended character set in graphics mode. If used without parameters, graftabl displays the previous and the current code page.`, `graftabl <CodePage>

graftabl /status`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`help`, [
            new Parameter_js_2.Parameter(`<Command>`, `Specifies the name of the command that you want information about.`, ``),
        ], `Provides online information about system commands (that is, non-network commands). If used without parameters, help lists and briefly describes every system command.`, `help [<Command>] 

[<Command>] /?`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`helpctr`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Helpctr is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`hostname`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the host name portion of the full computer name of the computer. `, `hostname`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`icacls`, [
            new Parameter_js_2.Parameter(`<FileName>`, `Specifies the file for which to display DACLs.`, ``),
            new Parameter_js_2.Parameter(`<Directory>`, `Specifies the directory for which to display DACLs.`, ``),
            new Parameter_js_2.Parameter(`/t`, `Performs the operation on all specified files in the current directory and its subdirectories.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Continues the operation despite any file errors. Error messages will still be displayed.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Performs the operation on a symbolic link versus its destination.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Suppresses success messages.`, ``),
            new Parameter_js_2.Parameter(`[/save <ACLfile> [/t] [/c] [/l] [/q]]`, `Stores DACLs for all matching files into *ACLfile* for later use with /restore.`, ``),
            new Parameter_js_2.Parameter(`[/setowner <Username> [/t] [/c] [/l] [/q]]`, `Changes the owner of all matching files to the specified user.`, ``),
            new Parameter_js_2.Parameter(`[/findSID <Sid> [/t] [/c] [/l] [/q]]`, `Finds all matching files that contain a DACL explicitly mentioning the specified security identifier (SID).`, ``),
            new Parameter_js_2.Parameter(`[/verify [/t] [/c] [/l] [/q]]`, `Finds all files with ACLs that are not canonical or have lengths inconsistent with ACE (access control entry) counts.`, ``),
            new Parameter_js_2.Parameter(`[/reset [/t] [/c] [/l] [/q]]`, `Replaces ACLs with default inherited ACLs for all matching files.`, ``),
            new Parameter_js_2.Parameter(`[/grant[:r] <Sid>:<Perm>[...]]`, `Grants specified user access rights. Permissions replace previously granted explicit permissions.</br>Without :r, permissions are added to any previously granted explicit permissions.`, ``),
            new Parameter_js_2.Parameter(`[/deny <Sid>:<Perm>[...]]`, `Explicitly denies specified user access rights. An explicit deny ACE is added for the stated permissions and the same permissions in any explicit grant are removed.`, ``),
            new Parameter_js_2.Parameter(`[/remove[:g|:d]] <Sid>[...]] [/t] [/c] [/l] [/q]`, `Removes all occurrences of the specified SID from the DACL.</br>:g removes all occurrences of granted rights to the specified SID.</br>:d removes all occurrences of denied rights to the specified SID.`, ``),
            new Parameter_js_2.Parameter(`[/setintegritylevel [(CI)(OI)]<Level>:<Policy>[...]]`, `Explicitly adds an integrity ACE to all matching files. *Level* is specified as:</br>-   L[ow]</br>-   M[edium]</br>-   H[igh]</br>Inheritance options for the integrity ACE may precede the level and are applied only to directories.`, ``),
            new Parameter_js_2.Parameter(`[/substitute <SidOld> <SidNew> [...]]`, `Replaces an existing SID (*SidOld*) with a new SID (*SidNew*). Requires the *Directory* parameter.`, ``),
            new Parameter_js_2.Parameter(`/restore <ACLfile> [/c] [/l] [/q]`, `Applies stored DACLs from *ACLfile* to files in the specified directory. Requires the *Directory* parameter.`, ``),
            new Parameter_js_2.Parameter(`/inheritancelevel:[e|d|r]`, `Sets the inheritance level: <br>  e - Enables enheritance <br>d - Disables inheritance and copies the ACEs <br>r - Removes all inherited ACEs`, ``),
        ], `Displays or modifies discretionary access control lists (DACLs) on specified files, and applies stored DACLs to files in specified directories.`, `icacls <FileName> [/grant[:r] <Sid>:<Perm>[...]] [/deny <Sid>:<Perm>[...]] [/remove[:g|:d]] <Sid>[...]] [/t] [/c] [/l] [/q] [/setintegritylevel <Level>:<Policy>[...]]

icacls <Directory> [/substitute <SidOld> <SidNew> [...]] [/restore <ACLfile> [/c] [/l] [/q]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`if`, [
            new Parameter_js_2.Parameter(`not`, `Specifies that the command should be carried out only if the condition is false.`, ``),
            new Parameter_js_2.Parameter(`errorlevel <Number>`, `Specifies a true condition only if the previous program run by Cmd.exe returned an exit code equal to or greater than *Number*.`, ``),
            new Parameter_js_2.Parameter(`<Command>`, `Specifies the command that should be carried out if the preceding condition is met.`, ``),
            new Parameter_js_2.Parameter(`<String1>==<String2>`, `Specifies a true condition only if *String1* and *String2* are the same. These values can be literal strings or batch variables (for example, %1). You do not need to enclose literal strings in quotation marks.`, ``),
            new Parameter_js_2.Parameter(`exist <FileName>`, `Specifies a true condition if the specified file name exists.`, ``),
            new Parameter_js_2.Parameter(`<CompareOp>`, `Specifies a three-letter comparison operator. The following list represents valid values for *CompareOp*:</br>EQU Equal to</br>NEQ Not equal to</br>LSS Less than</br>LEQ Less than or equal to</br>GTR Greater than</br>GEQ Greater than or equal to`, ``),
            new Parameter_js_2.Parameter(`/i`, `Forces string comparisons to ignore case.  You can use /i on the *String1*==*String2* form of if. These comparisons are generic, in that if both *String1* and *String2* are comprised of numeric digits only, the strings are converted to numbers and a numeric comparison is performed.`, ``),
            new Parameter_js_2.Parameter(`cmdextversion <Number>`, `Specifies a true condition only if the internal version number associated with the command extensions feature of Cmd.exe is equal to or greater than the number specified. The first version is 1. It increases by increments of one when significant enhancements are added to the command extensions. The cmdextversion conditional is never true when command extensions are disabled (by default, command extensions are enabled).`, ``),
            new Parameter_js_2.Parameter(`defined <Variable>`, `Specifies a true condition if *Variable* is defined.`, ``),
            new Parameter_js_2.Parameter(`<Expression>`, `Specifies a command-line command and any parameters to be passed to the command in an else clause.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Performs conditional processing in batch programs.`, `if [not] ERRORLEVEL <Number> <Command> [else <Expression>]

if [not] <String1>==<String2> <Command> [else <Expression>]

if [not] exist <FileName> <Command> [else <Expression>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`inuse`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
        ], `Inuse is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ipconfig`, [
            new Parameter_js_2.Parameter(`/all`, `Displays the full TCP/IP configuration for all adapters. Adapters can represent physical interfaces, such as installed network adapters, or logical interfaces, such as dial-up connections.`, ``),
            new Parameter_js_2.Parameter(`/allcompartments`, `Displays the full TCP/IP configuration for all compartments.`, ``),
            new Parameter_js_2.Parameter(`/displaydns`, `Displays the contents of the DNS client resolver cache, which includes both entries preloaded from the local Hosts file and any recently obtained resource records for name queries resolved by the computer. The DNS Client service uses this information to resolve frequently queried names quickly, before querying its configured DNS servers.`, ``),
            new Parameter_js_2.Parameter(`/flushdns`, `Flushes and resets the contents of the DNS client resolver cache. During DNS troubleshooting, you can use this procedure to discard negative cache entries from the cache, as well as any other entries that have been added dynamically.`, ``),
            new Parameter_js_2.Parameter(`/registerdns`, `Initiates manual dynamic registration for the DNS names and IP addresses that are configured at a computer. You can use this parameter to troubleshoot a failed DNS name registration or resolve a dynamic update problem between a client and the DNS server without rebooting the client computer. The DNS settings in the advanced properties of the TCP/IP protocol determine which names are registered in DNS.`, ``),
            new Parameter_js_2.Parameter(`/release [<Adapter>]`, `Sends a DHCPRELEASE message to the DHCP server to release the current DHCP configuration and discard the IP address configuration for either all adapters (if an adapter is not specified) or for a specific adapter if the *Adapter* parameter is included. This parameter disables TCP/IP for adapters configured to obtain an IP address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.`, ``),
            new Parameter_js_2.Parameter(`/release6[<Adapter>]`, `Sends a DHCPRELEASE message to the DHCPv6 server to release the current DHCP configuration and discard the IPv6 address configuration for either all adapters (if an adapter is not specified) or for a specific adapter if the *Adapter* parameter is included. This parameter disables TCP/IP for adapters configured to obtain an IP address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.`, ``),
            new Parameter_js_2.Parameter(`/renew [<Adapter>]`, `Renews DHCP configuration for all adapters (if an adapter is not specified) or for a specific adapter if the *Adapter* parameter is included. This parameter is available only on computers with adapters that are configured to obtain an IP address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.`, ``),
            new Parameter_js_2.Parameter(`/renew6 [<Adapter>]`, `Renews DHCPv6 configuration for all adapters (if an adapter is not specified) or for a specific adapter if the *Adapter* parameter is included. This parameter is available only on computers with adapters that are configured to obtain an IPv6 address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.`, ``),
            new Parameter_js_2.Parameter(`/setclassid <Adapter>[ <ClassID>]`, `Configures the DHCP class ID for a specified adapter. To set the DHCP class ID for all adapters, use the asterisk (*) wildcard character in place of *Adapter*. This parameter is available only on computers with adapters that are configured to obtain an IP address automatically. If a DHCP class ID is not specified, the current class ID is removed.`, ``),
            new Parameter_js_2.Parameter(`/showclassid <Adapter>`, `Displays the DHCP class ID for a specified adapter. To see the DHCP class ID for all adapters, use the asterisk (*) wildcard character in place of *Adapter*. This parameter is available only on computers with adapters that are configured to obtain an IP address automatically.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Displays all current TCP/IP network configuration values and refreshes Dynamic Host Configuration Protocol (DHCP) and Domain Name System (DNS) settings. Used without parameters, ipconfig displays Internet Protocol version 4 (IPv4) and IPv6 addresses, subnet mask, and default gateway for all adapters.`, `ipconfig [/allcompartments] [/all] [/renew [<Adapter>]] [/release [<Adapter>]] [/renew6[<Adapter>]] [/release6 [<Adapter>]] [/flushdns] [/displaydns] [/registerdns] [/showclassid <Adapter>] [/setclassid <Adapter> [<ClassID>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ipxroute`, [
            new Parameter_js_2.Parameter(`servers[ /type=X]`, `Displays the Service Access Point (SAP) table for the specified server type.  X must be an integer. For example, /type=4 displays all file servers. If you do not specify /type, ipxroute servers displays all types of servers, listing them by server name.`, ``),
            new Parameter_js_2.Parameter(`ripout Network`, `Discovers if *Network* is reachable by consulting the IPX stack's route table and sending out a rip request if necessary.  *Network* is the IPX network segment number.`, ``),
            new Parameter_js_2.Parameter(`resolve{ GUID&#124; name} { GUID&#124; AdapterName}`, `Resolves the name of the GUID to its friendly name, or the friendly name to its GUID.`, ``),
            new Parameter_js_2.Parameter(`board= *N*`, `Specifies the network adapter for which to query or set parameters.`, ``),
            new Parameter_js_2.Parameter(`def`, `Sends packets to the ALL ROUTES broadcast. If a packet is transmitted to a unique Media Access Card (MAC) address that is not in the source routing table, ipxroute sends the packet to the SINGLE ROUTES broadcast by default.`, ``),
            new Parameter_js_2.Parameter(`gbr`, `Sends packets to the ALL ROUTES broadcast. If a packet is transmitted to the broadcast address (FFFFFFFFFFFF), ipxroute sends the packet to the SINGLE ROUTES broadcast by default.`, ``),
            new Parameter_js_2.Parameter(`mbr`, `Sends packets to the ALL ROUTES broadcast. If a packet is transmitted to a multicast address (C000xxxxxxxx), ipxroute sends the packet to the SINGLE ROUTES broadcast by default.`, ``),
            new Parameter_js_2.Parameter(`remove= *xxxxxxxxxxxx*`, `removes the given node address from the source routing table.`, ``),
            new Parameter_js_2.Parameter(`config`, `Displays information about all of the bindings for which IPX is configured.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays and modifies information about the routing tables used by the IPX protocol. Used without parameters,  ipxroute displays the default settings for packets that are sent to unknown, broadcast, and multicast addresses.   `, `ipxroute servers [/type=X]  

ipxroute ripout <Network>  

ipxroute resolve {guid | name} {GUID | <AdapterName>}  

ipxroute board= N [def] [gbr] [mbr] [remove=xxxxxxxxxxxx]  

ipxroute config`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`irftp`, [
            new Parameter_js_2.Parameter(`D`, `r`, ``),
            new Parameter_js_2.Parameter(`[path]FileName`, `Specifies the location and name of the file or set of files that you want to send over an infrared link. If you specify a set of files, you must specify the full path for each file.`, ``),
            new Parameter_js_2.Parameter(`/h`, `Specifies hidden mode. When hidden mode is used, the files are sent without displaying the Wireless Link dialog box.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Opens the Wireless Link dialog box, so that you can select the file or set of files that you want to send without using the command line to specify the drive, path, and file names.`, ``),
        ], `Sends files over an infrared link.    `, `irftp [<Drive>:\] [[<path>] <FileName>] [/h][/s]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`jetpack`, [
            new Parameter_js_2.Parameter(`<database name>`, `Specifies the original database file.`, ``),
            new Parameter_js_2.Parameter(`<temp database name>`, `Specifies the temporary database file.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `compacts a Windows Internet Name Service (WINS) or Dynamic Host Configuration Protocol (DHCP) database. Microsoft recommends that you compact the WINS database whenever it approaches 30 MB. `, `jetpack.EXE <database name> <temp database name>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`klist`, [
            new Parameter_js_2.Parameter(`-lh`, `Denotes the high part of the userâ€™s locally unique identifier (LUID), expressed in hexadecimal. If neither â€“lh or â€“li are present, the command defaults to the LUID of the user who is currently signed in.`, ``),
            new Parameter_js_2.Parameter(`-li`, `Denotes the low part of the userâ€™s locally unique identifier (LUID), expressed in hexadecimal. If neither â€“lh or â€“li are present, the command defaults to the LUID of the user who is currently signed in.`, ``),
            new Parameter_js_2.Parameter(`tickets`, `Lists the currently cached ticket-granting-tickets (TGTs), and service tickets of the specified logon session. This is the default option.`, ``),
            new Parameter_js_2.Parameter(`tgt`, `Displays the initial Kerberos TGT.`, ``),
            new Parameter_js_2.Parameter(`purge`, `Allows you to delete all the tickets of the specified logon session.`, ``),
            new Parameter_js_2.Parameter(`sessions`, `Displays a list of logon sessions on this computer.`, ``),
            new Parameter_js_2.Parameter(`kcd_cache`, `Displays the Kerberos constrained delegation cache information.`, ``),
            new Parameter_js_2.Parameter(`get`, `Allows you to request a ticket to the target computer specified by the service principal name (SPN).`, ``),
            new Parameter_js_2.Parameter(`add_bind`, `Allows you to specify a preferred domain controller for Kerberos authentication.`, ``),
            new Parameter_js_2.Parameter(`query_bind`, `Displays a list of cached preferred domain controllers for each domain that Kerberos has contacted.`, ``),
            new Parameter_js_2.Parameter(`purge_bind`, `Removes the cached preferred domain controllers for the domains specified.`, ``),
            new Parameter_js_2.Parameter(`kdcoptions`, `Displays the Key Distribution Center (KDC) options specified in RFC 4120.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help for this command.`, ``),
        ], `Displays a list of currently cached Kerberos tickets. This information applies to Windows Server 2012. For examples of how this command can be used, see [Examples](#BKMK_Examples).`, `klist [-lh <LogonId.HighPart>] [-li <LogonId.LowPart>] tickets | tgt | purge | sessions | kcd_cache | get | add_bind | query_bind | purge_bind`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ksetup`, [
            new Parameter_js_2.Parameter(`[Ksetup:setrealm](ksetup-setrealm.md)`, `Makes this computer a member of a Kerberos realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:mapuser](ksetup-mapuser.md)`, `Maps a Kerberos principal to an account.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:addkdc](ksetup-addkdc.md)`, `Defines a KDC entry for the given realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:delkdc](ksetup-delkdc.md)`, `Deletes a KDC entry for the realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:addkpasswd](ksetup-addkpasswd.md)`, `Adds a Kpasswd server address for a realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:delkpasswd](ksetup-delkpasswd.md)`, `Deletes a Kpasswd server address for a realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:server](ksetup-server.md)`, `Allows you to specify the name of a Windows computer on which to apply the changes.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:setcomputerpassword](ksetup-setcomputerpassword.md)`, `Sets the password for the computer's domain account (or host principal).`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:removerealm](ksetup-removerealm.md)`, `Deletes all information for the specified realm from the registry.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:domain](ksetup-domain.md)`, `Allows you to specify a domain (if <DomainName> has not been set by using /domain).`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:changepassword](ksetup-changepassword.md)`, `Allows you to use the Kpasswd to change the logged on user's password.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:listrealmflags](ksetup-listrealmflags.md)`, `Lists the available realm flags that ksetup can detect.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:setrealmflags](ksetup-setrealmflags.md)`, `Sets realm flags for a specific realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:addrealmflags](ksetup-addrealmflags.md)`, `Adds additional realm flags to a realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:delrealmflags](ksetup-delrealmflags.md)`, `Deletes realm flags from a realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:dumpstate](ksetup-dumpstate.md)`, `Analyzes the Kerberos configuration on the given computer. Adds a host to realm mapping to the registry.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:addhosttorealmmap](ksetup-addhosttorealmmap.md)`, `Adds a registry value to map the host to the Kerberos realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:delhosttorealmmap](ksetup-delhosttorealmmap.md)`, `Deletes the registry value that mapped the host computer to the Kerberos realm.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:setenctypeattr](ksetup-setenctypeattr.md)`, `Sets one or more encryption types trust attributes for the domain.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:getenctypeattr](ksetup-getenctypeattr.md)`, `Gets the encryption types trust attribute for the domain.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:addenctypeattr](ksetup-addenctypeattr.md)`, `Adds encryption types to the encryption types trust attribute for the domain.`, ``),
            new Parameter_js_2.Parameter(`[Ksetup:delenctypeattr](ksetup-delenctypeattr.md)`, `Deletes the encryption types trust attribute for the domain.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Performs tasks that are related to setting up and maintaining Kerberos protocol and the Key Distribution Center (KDC) to support Kerberos realms, which are not also Windows domains. For examples of how this command can be used, see the Examples section in each of the related subtopics.`, `ksetup 

[/setrealm <DNSDomainName>] 

[/mapuser <Principal> <Account>] 

[/addkdc <RealmName> <KDCName>] 

[/delkdc <RealmName> <KDCName>]

[/addkpasswd <RealmName> <KDCPasswordName>] 

[/delkpasswd <RealmName> <KDCPasswordName>]

[/server <ServerName>] 

[/setcomputerpassword <Password>]

[/removerealm <RealmName>]  

[/domain <DomainName>] 

[/changepassword <OldPassword> <NewPassword>] 

[/listrealmflags] 

[/setrealmflags <RealmName> [sendaddress] [tcpsupported] [delegate] [ncsupported] [rc4]] 

[/addrealmflags <RealmName> [sendaddress] [tcpsupported] [delegate] [ncsupported] [rc4]] 

[/delrealmflags [sendaddress] [tcpsupported] [delegate] [ncsupported] [rc4]] 

[/dumpstate]

[/addhosttorealmmap] <HostName> <RealmName>]  

[/delhosttorealmmap] <HostName> <RealmName>]  

[/setenctypeattr] <DomainName> {DES-CBC-CRC | DES-CBC-MD5 | RC4-HMAC-MD5 | AES128-CTS-HMAC-SHA1-96 | AES256-CTS-HMAC-SHA1-96}

[/getenctypeattr] <DomainName>

[/addenctypeattr] <DomainName> {DES-CBC-CRC | DES-CBC-MD5 | RC4-HMAC-MD5 | AES128-CTS-HMAC-SHA1-96 | AES256-CTS-HMAC-SHA1-96}

[/delenctypeattr] <DomainName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ktmutil`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
        ], `Starts the Kernel Transaction Manager utility. If used without parameters, ktmutil displays available subcommands.`, `ktmutil list tms 

ktmutil list transactions [{TmGuid}]

ktmutil resolve complete {TmGuid} {RmGuid} {EnGuid}

ktmutil resolve commit {TxGuid}

ktmutil resolve rollback {TxGuid}

ktmutil force commit {??Guid}

ktmutil force rollback {??Guid}

ktmutil forget`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ktpass`, [
            new Parameter_js_2.Parameter(`/out <FileName>`, `Specifies the name of the Kerberos version 5 .keytab file to generate. Note: This is the .keytab file that you transfer to a computer that is not running the Windows operating system, and then replace or merge with your existing .keytab file, /Etc/Krb5.keytab.`, ``),
            new Parameter_js_2.Parameter(`/princ <PrincipalName>`, `Specifies the principal name in the form host/computer.contoso.com@CONTOSO.COM. Warning: This parameter is case sensitive. See [remarks](#BKMK_remarks) for more information.`, ``),
            new Parameter_js_2.Parameter(`/mapuser <UserAccount>`, `Maps the name of the Kerberos principal, which is specified by the princ parameter, to the specified domain account.`, ``),
            new Parameter_js_2.Parameter(`/mapop {add&#124;set}`, `Specifies how the mapping attribute is set.<br /><br />-   add adds the value of the specified local user name. This is the default.<br />-   Set sets the value for Data Encryption Standard (DES)-only encryption for the specified local user name.`, ``),
            new Parameter_js_2.Parameter(`{-&#124;+}desonly`, `DES-only encryption is set by default.<br /><br />-   + Sets an account for DES-only encryption.<br />-   - Releases restriction on an account for DES-only encryption. IMPORTANT: Beginning with  Windows 7  and  Windows Server 2008 R2 , Windows does not support DES by default.`, ``),
            new Parameter_js_2.Parameter(`/in <FileName>`, `Specifies the .keytab file to read from a host computer that is not running the Windows operating system.`, ``),
            new Parameter_js_2.Parameter(`/pass {Password&#124;*&#124;{-&#124;+}rndpass}`, `Specifies a password for the principal user name that is specified by the princ parameter. Use "*" to prompt for a password.`, ``),
            new Parameter_js_2.Parameter(`/minpass`, `Sets the minimum length of the random password to 15 characters.`, ``),
            new Parameter_js_2.Parameter(`/maxpass`, `Sets the maximum length of the random password to 256 characters.`, ``),
            new Parameter_js_2.Parameter(`/crypto {DES-CBC-CRC&#124;DES-CBC-MD5&#124;RC4-HMAC-NT&#124;AES256-SHA1&#124;AES128-SHA1&#124;All}`, `Specifies the keys that are generated in the keytab file:<br /><br />-   DES-CBC-CRC is used for compatibility.<br />-   DES-CBC-MD5 adheres more closely to the MIT implementation and is used for compatibility.<br />-   RC4-HMAC-NT employs 128-bit encryption.<br />-   AES256-SHA1 employs AES256-CTS-HMAC-SHA1-96 encryption.<br />-   AES128-SHA1 employs AES128-CTS-HMAC-SHA1-96 encryption.<br />-   All states that all supported cryptographic types can be used. Note: The default settings are based on older MIT versions. Therefore, "/crypto" should always be specified.`, ``),
            new Parameter_js_2.Parameter(`/itercount`, `Specifies the iteration count that is used for AES encryption. The default is that itercount is ignored for non-AES encryption and set at 4,096 for AES encryption.`, ``),
            new Parameter_js_2.Parameter(`/ptype {KRB5_NT_PRINCIPAL&#124;KRB5_NT_SRV_INST&#124;KRB5_NT_SRV_HST}`, `Specifies the principal type.<br /><br />-   KRB5_NT_PRINCIPAL is the general principal type (recommended).<br />-   KRB5_NT_SRV_INST is the user service instance.<br />-   KRB5_NT_SRV_HST is the host service instance.`, ``),
            new Parameter_js_2.Parameter(`/kvno <KeyversionNum>`, `Specifies the key version number. The default value is 1.`, ``),
            new Parameter_js_2.Parameter(`/answer {-&#124;+}`, `Sets the background answer mode:<br /><br />- Answers reset password prompts automatically with NO.<br /><br />+ Answers reset password prompts automatically with YES.`, ``),
            new Parameter_js_2.Parameter(`/target`, `Sets which domain controller to use. The default is for the domain controller to be detected, based on the principal name. If the domain controller name does not resolve, a dialog box will prompt for a valid domain controller.`, ``),
            new Parameter_js_2.Parameter(`/rawsalt`, `forces ktpass to use the rawsalt algorithm when generating the key. This parameter is not needed.`, ``),
            new Parameter_js_2.Parameter(`{-&#124;+}dumpsalt`, `The output of this parameter shows the MIT salt algorithm that is being used to generate the key.`, ``),
            new Parameter_js_2.Parameter(`{-&#124;+}setupn`, `Sets the user principal name (UPN) in addition to the service principal name (SPN). The default is to set both in the .keytab file.`, ``),
            new Parameter_js_2.Parameter(`{-&#124;+}setpass <Password>`, `Sets the user's password when supplied. If rndpass is used, a random password is generated instead.`, ``),
            new Parameter_js_2.Parameter(`/?&#124;/h&#124;/help`, `Displays command-line help for ktpass.`, ``),
        ], `Configures the server principal name for the host or service in active directory Domain Services (AD DS) and generates a .keytab file that contains the shared secret key of the service. The .keytab file is based on the Massachusetts Institute of Technology (MIT) implementation of the Kerberos authentication protocol. The ktpass command-line tool allows non-Windows services that support Kerberos authentication to use the interoperability features provided by the Kerberos Key Distribution Center (KDC) service. This topic applies to the operating system versions designated in the Applies To list at the beginning of the topic.  `, `ktpass  

[/out <FileName>]   

[/princ <PrincipalName>]   

[/mapuser <UserAccount>]   

[/mapop {add|set}] [{-|+}desonly] [/in <FileName>]  

[/pass {Password|*|{-|+}rndpass}]  

[/minpass]  

[/maxpass]  

[/crypto {DES-CBC-CRC|DES-CBC-MD5|RC4-HMAC-NT|AES256-SHA1|AES128-SHA1|All}]  

[/itercount]  

[/ptype {KRB5_NT_PRINCIPAL|KRB5_NT_SRV_INST|KRB5_NT_SRV_HST}]  

[/kvno <KeyversionNum>]  

[/answer {-|+}]  

[/target]  

[/rawsalt] [{-|+}dumpsalt] [{-|+}setupn] [{-|+}setpass <Password>]  [/?|/h|/help]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`label`, [
            new Parameter_js_2.Parameter(`/mp`, `Specifies that the volume should be treated as a mount point or volume name.`, ``),
            new Parameter_js_2.Parameter(`<Volume>`, `Specifies a drive letter (followed by a colon), mount point, or volume name. If a volume name is specified, the /mp parameter is unnecessary.`, ``),
            new Parameter_js_2.Parameter(`<Label>`, `Specifies the label for the volume.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates, changes, or deletes the volume label (that is, the name) of a disk. If used without parameters, the label command changes the current volume label or deletes the existing label.`, `label [/mp] [<Volume>] [<Label>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`lodctr`, [
            new Parameter_js_2.Parameter(`<filename>`, `Registers the Performance counter name settings and Explain text provided in initialization file FileName.`, ``),
            new Parameter_js_2.Parameter(`/s:<filename>`, `Saves Performance counter registry settings and Explain text to file <filename>.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Restores counter registry settings and Explain text from current registry settings and cached performance files related to the registry.<br /><br />This option is available only in the Windows Server 2003 operating system.`, ``),
            new Parameter_js_2.Parameter(`/r:<filename>`, `Restores Performance counter registry settings and Explain text from file <filename>. Warning: if you use the lodctr /r command, you will overwrite all Performance counter registry settings and Explain text, replacing them with the configuration defined in the file specified.`, ``),
            new Parameter_js_2.Parameter(`/t:<servicename>`, `Indicates that service <servicename> is trusted.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Allows you to register or save performance counter name and registry settings in a file and designate trusted services.`, `lodctr <filename> [/s:<filename>] [/r:<filename>] [/t:<servicename>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`logman`, [
            new Parameter_js_2.Parameter(`[logman create](logman-create.md)`, `create a counter, trace, configuration data collector, or API.`, ``),
            new Parameter_js_2.Parameter(`[logman query](logman-query.md)`, `query data collector properties.`, ``),
            new Parameter_js_2.Parameter(`[logman start &#124; stop](logman-start-stop.md)`, `start or stop data collection.`, ``),
            new Parameter_js_2.Parameter(`[logman delete](logman-delete.md)`, `delete an existing data collector.`, ``),
            new Parameter_js_2.Parameter(`[logman update](logman-update.md)`, `Update the properties of an existing data collector.`, ``),
            new Parameter_js_2.Parameter(`[logman import &#124; export](logman-import-export.md)`, `import a data collector set from an XML file or export a data collector set to an XML file.`, ``),
        ], `logman creates and manages Event Trace Session and Performance logs and supports many functions of Performance Monitor from the command line.`, `logman [create | query | start | stop | delete| update | import | export | /?] [options]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`logoff`, [
            new Parameter_js_2.Parameter(`<SessionName>`, `Specifies the name of the session.`, ``),
            new Parameter_js_2.Parameter(`<SessionID>`, `Specifies the numeric ID which identifies the session to the server.`, ``),
            new Parameter_js_2.Parameter(`/server:<ServerName>`, `Specifies the rd Session Host server that contains the session whose user you want to log off. If unspecified, the server on which you are currently active is used.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays information about the actions being performed.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Logs off a user from a session on a Remote Desktop Session Host (rd Session Host) server and deletes the session from the server.`, `logoff [<SessionName> | <SessionID>] [/server:<ServerName>] [/v]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`lpq`, [
            new Parameter_js_2.Parameter(`-S <ServerName>`, `Specifies (by name or IP address) the computer or printer sharing device that hosts the LPD print queue with a status that you want to display. Required.`, ``),
            new Parameter_js_2.Parameter(`-P <printerName>`, `Specifies (by name) the printer for the print queue with a status that you want to display. Required.`, ``),
            new Parameter_js_2.Parameter(`-l`, `Specifies that you want to display details about the status of the print queue.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the status of a print queue on a computer running Line printer Daemon (LPD).  `, `lpq -S <ServerName> -P <printerName> [-l]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`lpr`, [
            new Parameter_js_2.Parameter(`-S <ServerName>`, `Specifies (by name or IP address) the computer or printer sharing device that hosts the LPD print queue with a status that you want to display. Required.`, ``),
            new Parameter_js_2.Parameter(`-P <printerName>`, `Specifies (by name) the printer for the print queue with a status that you want to display. Required.`, ``),
            new Parameter_js_2.Parameter(`-C <BannerContent>`, `Specifies the content to print on the banner page of the print job. If you do not include this parameter, the name of the computer from which the print job was sent appears on the banner page.`, ``),
            new Parameter_js_2.Parameter(`-J <JobName>`, `Specifies the print job name that will be printed on the banner page. If you do not include this parameter, the name of the file being printed appears on the banner page.`, ``),
            new Parameter_js_2.Parameter(`[-o&#124; "-o l"]`, `Specifies the type of file that you want to print. The parameter -o specifies that you want to print a text file. The parameter "-o l" specifies that you want to print a binary file (for example, a PostScript file).`, ``),
            new Parameter_js_2.Parameter(`-d`, `Specifies that the data file must be sent before the control file. Use this parameter if your printer requires the data file to be sent first. For more information, see your printer documentation.`, ``),
            new Parameter_js_2.Parameter(`-x`, `Specifies that the lpr command must be compatible with the Sun Microsystems operating system (referred to as SunOS) for releases up to and including 4.1.4_u1.`, ``),
            new Parameter_js_2.Parameter(`<FileName>`, `Specifies (by name) the file to be printed. Required.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Sends a file to a computer or printer sharing device running the Line printer Daemon (LPD) service in preparation for printing.  `, `lpr [-S <ServerName>] -P <printerName> [-C <BannerContent>] [-J <JobName>] [-o | "-o l"] [-x] [-d] <filename>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`macfile`, [
            new Parameter_js_2.Parameter(`First`, `OwnerSeeFiles`, ``),
            new Parameter_js_2.Parameter(`Second`, `OwnerSeeFolders`, ``),
            new Parameter_js_2.Parameter(`Third`, `OwnerMakechanges`, ``),
            new Parameter_js_2.Parameter(`Fourth`, `GroupSeeFiles`, ``),
            new Parameter_js_2.Parameter(`Fifth`, `GroupSeeFolders`, ``),
            new Parameter_js_2.Parameter(`Sixth`, `GroupMakechanges`, ``),
            new Parameter_js_2.Parameter(`Seventh`, `WorldSeeFiles`, ``),
            new Parameter_js_2.Parameter(`Eighth`, `WorldSeeFolders`, ``),
            new Parameter_js_2.Parameter(`Ninth`, `WorldMakechanges`, ``),
            new Parameter_js_2.Parameter(`Tenth`, `The directory cannot be renamed, moved, or deleted.`, ``),
            new Parameter_js_2.Parameter(`Eleventh`, `The changes apply to the current directory and all subdirectories.`, ``),
        ], `Manages File Server for Macintosh servers, volumes, directories, and files. You can automate administrative tasks by including a series of commands in batch files and starting them manually or at predetermined times. `, `macfile directory[/server:\\<computerName>] /path:<directory> [/owner:<OwnerName>] [/group:<GroupName>] [/permissions:<Permissions>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`makecab`, [
            new Parameter_js_2.Parameter(`<source>`, `File to compress.`, ``),
            new Parameter_js_2.Parameter(`<destination>`, `File name to give compressed file. If omitted, the last character of the source file name is replaced with an underscore (_) and used as the destination.`, ``),
            new Parameter_js_2.Parameter(`/f <directives_file>`, `A file with makecab directives (may be repeated).`, ``),
            new Parameter_js_2.Parameter(`/d var=<value>`, `Defines variable with specified value.`, ``),
            new Parameter_js_2.Parameter(`/l <dir>`, `Location to place destination (default is current directory).`, ``),
            new Parameter_js_2.Parameter(`/v[<n>]`, `Set debugging verbosity level (0=none,...,3=full).`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Package existing files into a cabinet (.cab) file.`, `makecab [/v[n]] [/d var=<value> ...] [/l <dir>] <source> [<destination>]

makecab [/v[<n>]] [/d var=<value> ...] /f <directives_file> [...]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`manage-bde`, [
            new Parameter_js_2.Parameter(`[Manage-bde: status](manage-bde-status.md)`, `Provides information about all drives on the computer, whether or not they are BitLocker-protected.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: on](manage-bde-on.md)`, `Encrypts the drive and turns on BitLocker.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: off](manage-bde-off.md)`, `Decrypts the drive and turns off BitLocker. All key protectors are removed when decryption is complete.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: pause](manage-bde-pause.md)`, `Pauses encryption or decryption.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: resume](manage-bde-resume.md)`, `Resumes encryption or decryption.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: lock](manage-bde-lock.md)`, `Prevents access to BitLocker-protected data.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: unlock](manage-bde-unlock.md)`, `Allows access to BitLocker-protected data with a recovery password or a recovery key.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: autounlock](manage-bde-autounlock.md)`, `Manages automatic unlocking of data drives.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: protectors](manage-bde-protectors.md)`, `Manages protection methods for the encryption key.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: tpm](manage-bde-tpm.md)`, `Configures the computer's Trusted Platform Module (TPM). This command is not supported on computers running Windows 8 or win8_server_2. To manage the TPM on these computers, use either the TPM Management MMC snap-in or the TPM Management cmdlets for Windows PowerShell.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: setidentifier](manage-bde-setidentifier.md)`, `Sets the drive identifier field on the drive to the value specified in the Provide the unique identifiers for your organization Group Policy setting.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: ForceRecovery](manage-bde-forcerecovery.md)`, `Forces a BitLocker-protected drive into recovery mode on restart. This command deletes all TPM-related key protectors from the drive. When the computer restarts, only a recovery password or recovery key can be used to unlock the drive.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: changepassword](manage-bde-changepassword.md)`, `Modifies the password for a data drive.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: changepin](manage-bde-changepin.md)`, `Modifies the PIN for an operating system drive.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: changekey](manage-bde-changekey.md)`, `Modifies the startup key for an operating system drive.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: KeyPackage](manage-bde-keypackage.md)`, `Generates a key package for a drive.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: upgrade](manage-bde-upgrade.md)`, `Upgrades the BitLocker version.`, ``),
            new Parameter_js_2.Parameter(`[Manage-bde: WipeFreeSpace](manage-bde-wipefreespace.md)`, `Wipes the free space on a drive.`, ``),
            new Parameter_js_2.Parameter(`-? or /?`, `Displays brief Help at the command prompt.`, ``),
            new Parameter_js_2.Parameter(`-help or -h`, `Displays complete Help at the command prompt.`, ``),
        ], `Used to turn on or turn off BitLocker, specify unlock mechanisms, update recovery methods, and unlock BitLocker-protected data drives. This command-line tool can be used in place of the BitLocker Drive Encryption Control Panel item. For examples of how this command can be used, see [Examples](#BKMK_Examples).`, `manage-bde [-status] [â€“on] [â€“off] [â€“pause] [â€“resume] [â€“lock] [â€“unlock] [â€“autounlock] [â€“protectors] [â€“tpm] 

[â€“SetIdentifier] [-ForceRecovery] [â€“changepassword] [â€“changepin] [â€“changekey] [-KeyPackage] [â€“upgrade] [-WipeFreeSpace] [{-?|/?}] [{-help|-h}]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mapadmin`, [
            new Parameter_js_2.Parameter(`-wu &lt;name&gt;`, `Specifies the name of the Windows user for which a new mapping is being created.`, ``),
            new Parameter_js_2.Parameter(`-uu &lt;name&gt;`, `Specifies the name of the UNIX user for which a new mapping is being created.`, ``),
            new Parameter_js_2.Parameter(`-wg &lt;group&gt;`, `Specifies the name of the Windows group for which a new mapping is being created.`, ``),
            new Parameter_js_2.Parameter(`-ug &lt;group&gt;`, `Specifies the name of the UNIX group for which a new mapping is being created.`, ``),
            new Parameter_js_2.Parameter(`-setprimary`, `Specifies that the new mapping is the primary mapping.`, ``),
        ], `You can use Mapadmin to manage User Name Mapping for Microsoft Services for Network File System.`, `mapadmin [<computer>] [-u <user> [-p <password>]]

mapadmin [<computer>] [-u <user> [-p <password>]] {start | stop}

mapadmin [<computer>] [-u <user> [-p <password>]] config <option[...]>

mapadmin [<computer>] [-u <user> [-p <password>]] add -wu <WindowsUser> -uu <UNIXUser> [-setprimary]

mapadmin [<computer>] [-u <user> [-p <password>]] add -wg <WindowsGroup> -ug <UNIXGroup> [-setprimary]

mapadmin [<computer>] [-u <user> [-p <password>]] setprimary -wu <WindowsUser> [-uu <UNIXUser>]

mapadmin [<computer>] [-u <user> [-p <password>]] setprimary -wg <WindowsGroup> [-ug <UNIXGroup>]

mapadmin [<computer>] [-u <user> [-p <password>]] delete <option[...]>

mapadmin [<computer>] [-u <user> [-p <password>]] list <option[...]>

mapadmin [<computer>] [-u <user> [-p <password>]] backup <filename> 

mapadmin [<computer>] [-u <user> [-p <password>]] restore <filename>

mapadmin [<computer>] [-u <user> [-p <password>]] adddomainmap -d <WindowsDomain> {-y <<NISdomain>> | -f <path>}

mapadmin [<computer>] [-u <user> [-p <password>]] removedomainmap -d <WindowsDomain> -y <<NISdomain>>

mapadmin [<computer>] [-u <user> [-p <password>]] removedomainmap -all

mapadmin [<computer>] [-u <user> [-p <password>]] listdomainmaps`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Md`, [
            new Parameter_js_2.Parameter(`<Drive>:`, `Specifies the drive on which you want to create the new directory.`, ``),
            new Parameter_js_2.Parameter(`<Path>`, `Required. Specifies the name and location of the new directory. The maximum length of any single path is determined by the file system.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates a directory or subdirectory.`, `md [<Drive>:]<Path>

mkdir [<Drive>:]<Path>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mkdir`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `This command is the same as the md command. See [Md](md.md) for syntax and parameters.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mklink`, [
            new Parameter_js_2.Parameter(`/d`, `Creates a directory symbolic link. By default, mklink creates a file symbolic link.`, ``),
            new Parameter_js_2.Parameter(`/h`, `Creates a hard link instead of a symbolic link.`, ``),
            new Parameter_js_2.Parameter(`/j`, `Creates a Directory Junction.`, ``),
            new Parameter_js_2.Parameter(`<Link>`, `Specifies the name of the symbolic link that is being created.`, ``),
            new Parameter_js_2.Parameter(`<Target>`, `Specifies the path (relative or absolute) that the new symbolic link refers to.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates a symbolic link.`, `mklink [[/d] | [/h] | [/j]] <Link> <Target>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mmc`, [
            new Parameter_js_2.Parameter(`<path>\<filename>.msc`, `starts mmc and opens a saved console. You need to specify the complete path and file name for the saved console file. If you do not specify a console file, mmc opens a new console.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Opens a saved console in author mode.  Used to make changes to saved consoles.`, ``),
            new Parameter_js_2.Parameter(`/64`, `Opens the 64-bit version of mmc (mmc64). Use this option only if you are running a Microsoft 64-bit operating system and want to use a 64-bit snap-in.`, ``),
            new Parameter_js_2.Parameter(`/32`, `Opens the 32-bit version of mmc (mmc32). When running a Microsoft 64-bit operating system, you can run 32-bit snap-ins by opening mmc with this command-line option when you have 32-bit only snap-ins.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Using mmc command-line options, you can open a specific mmc console, open mmc in author mode, or specify that the 32-bit or 64-bit version of mmc is opened.`, `mmc <path>\<filename>.msc [/a] [/64] [/32]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mode`, [
            new Parameter_js_2.Parameter(`Com<M>[:]`, `Specifies the number of the async Prncnfg.vbshronous communications port.`, ``),
            new Parameter_js_2.Parameter(`baud=<B>`, `Specifies the transmission rate in bits per second. The following table lists valid abbreviations for *B* and their related rates.</br>-   11 = 110 baud</br>-   15 = 150 baud</br>-   30 = 300 baud</br>-   60 = 600 baud</br>-   12 = 1200 baud</br>-   24 = 2400 baud</br>-   48 = 4800 baud</br>-   96 = 9600 baud</br>-   19 = 19,200 baud`, ``),
            new Parameter_js_2.Parameter(`parity=<P>`, `Specifies how the system uses the parity bit to check for transmission errors. The following table lists valid values for *P*. The default value is e. Not all computers support the values m and s.</br>-   n = none</br>-   e = even</br>-   o = odd</br>-   m = mark</br>-   s = space`, ``),
            new Parameter_js_2.Parameter(`data=<D>`, `Specifies the number of data bits in a character. Valid values for d are in the range 5 through 8. The default value is 7. Not all computers support the values 5 and 6.`, ``),
            new Parameter_js_2.Parameter(`stop=<S>`, `Specifies the number of stop bits that define the end of a character: 1, 1.5, or 2. If the baud rate is 110, the default value is 2. Otherwise, the default value is 1. Not all computers support the value 1.5.`, ``),
            new Parameter_js_2.Parameter(`to={on `, ` off}`, ``),
            new Parameter_js_2.Parameter(`xon={on `, ` off}`, ``),
            new Parameter_js_2.Parameter(`odsr={on `, ` off}`, ``),
            new Parameter_js_2.Parameter(`octs={on `, ` off}`, ``),
            new Parameter_js_2.Parameter(`dtr={on `, ` off `, ``),
            new Parameter_js_2.Parameter(`rts={on `, ` off `, ``),
            new Parameter_js_2.Parameter(`idsr={on `, ` off}`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays system status, changes system settings, or reconfigures ports or devices. If used without parameters, mode displays all the controllable attributes of the console and the available COM devices.`, `mode com<M>[:] [baud=<B>] [parity=<P>] [data=<D>] [stop=<S>] [to={on|off}] [xon={on|off}] [odsr={on|off}] [octs={on|off}] [dtr={on|off|hs}] [rts={on|off|hs|tg}] [idsr={on|off}]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`more`, [
            new Parameter_js_2.Parameter(`<Command>`, `Specifies a command for which you want to display the output.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Clears the screen before displaying a page.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Expands form-feed characters.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Displays multiple blank lines as a single blank line.`, ``),
            new Parameter_js_2.Parameter(`/t<N>`, `Displays tabs as the number of spaces specified by *N*.`, ``),
            new Parameter_js_2.Parameter(`+<N>`, `Displays the first file beginning at the line specified by *N*.`, ``),
            new Parameter_js_2.Parameter(`[<Drive>:] [<Path>]<FileName>`, `Specifies the location and name of a file to display.`, ``),
            new Parameter_js_2.Parameter(`<Files>`, `Specifies a list of files to display. Separate file names with a space.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays one screen of output at a time.`, `<Command> | more [/c] [/p] [/s] [/t<N>] [+<N>]

more [[/c] [/p] [/s] [/t<N>] [+<N>]] < [<Drive>:][<Path>]<FileName>

more [/c] [/p] [/s] [/t<N>] [+<N>] [<Files>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mount`, [
            new Parameter_js_2.Parameter(`-o rsize=<buffersize>`, `Sets the size in kilobytes of the read buffer. Acceptable values are 1, 2, 4, 8, 16, and 32; the default is 32 KB.`, ``),
            new Parameter_js_2.Parameter(`-o wsize=<buffersize>`, `Sets the size in kilobytes of the write buffer. Acceptable values are 1, 2, 4, 8, 16, and 32; the default is 32 KB.`, ``),
            new Parameter_js_2.Parameter(`-o timeout=<seconds>`, `Sets the time-out value in seconds for a remote procedure call (RPC). Acceptable values are 0.8, 0.9, and any integer in the range 1-60; the default is 0.8.`, ``),
            new Parameter_js_2.Parameter(`-o retry=<number>`, `Sets the number of retries for a soft mount. Acceptable values are integers in the range 1-10; the default is 1.`, ``),
            new Parameter_js_2.Parameter(`-o mtype={soft `, ` hard}`, ``),
            new Parameter_js_2.Parameter(`-o anon`, `Mounts as an anonymous user.`, ``),
            new Parameter_js_2.Parameter(`-o nolock`, `Disables locking (default is enabled).`, ``),
            new Parameter_js_2.Parameter(`-o casesensitive`, `Forces file lookups on the server to be case sensitive.`, ``),
            new Parameter_js_2.Parameter(`-o fileaccess=<mode>`, `Specifies the default permission mode of new files created on the NFS share. Specify *mode* as a three-digit number in the form *ogw*, where *o*, *g*, and *w* are each a digit representing the access granted the file's owner, group, and the world, respectively. The digits must be in the range 0-7 with the following meaning:</br>-   0: No access</br>-   1: x (execute access)</br>-   2: w (write access)</br>-   3: wx</br>-   4: r (read access)</br>-   5: rx</br>-   6: rw</br>-   7: rwx`, ``),
            new Parameter_js_2.Parameter(`-o lang={euc-jp`, `euc-tw`, ``),
            new Parameter_js_2.Parameter(`-u:<UserName>`, `Specifies the user name to use for mounting the share. If *username* is not preceded by a backslash (), it is treated as a UNIX user name.`, ``),
            new Parameter_js_2.Parameter(`-p:<Password>`, `The password to use for mounting the share. If you use an asterisk (*), you will be prompted for the password.`, ``),
        ], `You can use mount to mount Network File System (NFS) network shares.`, `mount [-o <Option>[...]] [-u:<UserName>] [-p:{<Password> | *}] {\\<ComputerName>\<ShareName> | <ComputerName>:/<ShareName>} {<DeviceName> | *}`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mountvol`, [
            new Parameter_js_2.Parameter(`[<Drive>:]<Path>`, `Specifies the existing NTFS directory where the mount point will reside.`, ``),
            new Parameter_js_2.Parameter(`<VolumeName>`, `Specifies the volume name that is the target of the mount point. The volume name uses the following syntax, where *GUID* is a globally unique identifier:</br>"\\\?Volume{GUID}"</br>The brackets { } are required.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Removes the volume mount point from the specified folder.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Lists the mounted volume name for the specified folder.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Removes the volume mount point from the specified directory, dismounts the basic volume, and takes the basic volume offline, making it unmountable. If other processes are using the volume, mountvol closes any open handles before dismounting the volume.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Removes volume mount point directories and registry settings for volumes that are no longer in the system, preventing them from being automatically mounted and given their former volume mount point(s) when added back to the system.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Disables automatic mounting of new basic volumes. New volumes are not mounted automatically when added to the system.`, ``),
            new Parameter_js_2.Parameter(`/e`, `Re-enables automatic mounting of new basic volumes.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Mounts the EFI system partition on the specified drive. Available on Itanium-based computers only.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates, deletes, or lists a volume mount point.`, `mountvol [<Drive>:]<Path VolumeName>

mountvol [<Drive>:]<Path> /d

mountvol [<Drive>:]<Path> /l

mountvol [<Drive>:]<Path> /p

mountvol /r

mountvol [/n | /e]

mountvol <Drive>: /s`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`move`, [
            new Parameter_js_2.Parameter(`/y`, `Suppresses prompting to confirm that you want to overwrite an existing destination file.`, ``),
            new Parameter_js_2.Parameter(`/-y`, `Causes prompting to confirm that you want to overwrite an existing destination file.`, ``),
            new Parameter_js_2.Parameter(`<Source>`, `Specifies the path and name of the file or files to move. If you want to move or rename a directory, *Source* should be the current directory path and name.`, ``),
            new Parameter_js_2.Parameter(`<Target>`, `Specifies the path and name to move files to. If you want to move or rename a directory, *Target* should be the desired directory path and name.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Moves one or more files from one directory to another directory.`, `move [{/y | /-y}] [<Source>] [<Target>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mqbkup`, [
            new Parameter_js_2.Parameter(`/b`, `Specifies backup operation`, ``),
            new Parameter_js_2.Parameter(`/r`, `Specifies restore operation`, ``),
            new Parameter_js_2.Parameter(`<folder path_to_storage_device>`, `Specifies the path where the MSMQ message files and registry settings are stored`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Backs up MSMQ message files and registry settings to a storage device and restores previously-stored messages and settings.   `, `mqbkup {/b | /r} <folder path_to_storage_device>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mqsvc`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
        ], `Message Queuing technology enables applications running at different times to communicate across heterogeneous networks and systems that may be temporarily offline. Message Queuing provides guaranteed message delivery, efficient routing, security, and priority-based messaging. It can be used to implement solutions for both asynchronous and synchronous messaging scenarios. For more information about this command, see [Message Queuing (MSMQ)](https://go.microsoft.com/fwlink/?LinkId=248723) on MSDN.`, `Mqsvc.exe`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mqtgsvc`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Monitors a queue for incoming messages and performs an action, in the form of an executable file or COM component, when the rules of a trigger are evaluated as true. For examples of how the Message Queuing Triggers service can be used, see [Message Queuing Triggers](https://go.microsoft.com/fwlink/?LinkId=248725)on MSDN.`, `Mqtgsvc.exe`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`msdt`, [
            new Parameter_js_2.Parameter(`/id <package name>`, `Specifies which diagnostic package to run. For a list of available packages, see the Troubleshooting Pack ID in the â€œAvailable troubleshooting packsâ€? section later in this topic.`, ``),
            new Parameter_js_2.Parameter(`/path <directory `, ` .diagpkg file `, ``),
            new Parameter_js_2.Parameter(`/dci <passkey>`, `Prepopulates the passkey field in msdt. This parameter is only used when a support provider has supplied a passkey.`, ``),
            new Parameter_js_2.Parameter(`/dt <directory>`, `Displays the troubleshooting history in the specified directory. Diagnostic results are stored in the userâ€™s %LOCALAPPDATA%Diagnostics or %LOCALAPPDATA%ElevatedDiagnostics directories.`, ``),
            new Parameter_js_2.Parameter(`/af <answer file>`, `Specifies an answer file in XML format that contains responses to one or more diagnostic interactions.`, ``),
        ], `Invokes a troubleshooting pack at the command line or as part of an automated script, and enables additional options without user input.`, `msdt </id <name> | /path <name> | /cab < name>> <</parameter> [options] â€¦ <parameter> [options]>>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`msg`, [
            new Parameter_js_2.Parameter(`<UserName>`, `Specifies the name of the user that you want to receive the message.`, ``),
            new Parameter_js_2.Parameter(`<SessionName>`, `Specifies the name of the session that you want to receive the message.`, ``),
            new Parameter_js_2.Parameter(`<SessionID>`, `Specifies the numeric ID of the session whose user you want to receive a message.`, ``),
            new Parameter_js_2.Parameter(`@<FileName>`, `Identifies a file containing a list of user names, session names, and session IDs that you want to receive the message.`, ``),
            new Parameter_js_2.Parameter(`*`, `Sends the message to all user names on the system.`, ``),
            new Parameter_js_2.Parameter(`/server:<ServerName>`, `Specifies the rd Session Host server whose session or user you want to receive the message. If unspecified, /server uses the server to which you are currently logged on.`, ``),
            new Parameter_js_2.Parameter(`/time:<Seconds>`, `Specifies the amount of time that the message you sent is displayed on the user's screen. After the time limit is reached, the message disappears. If no time limit is set, the message remains on the user's screen until the user sees the message and clicks OK.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays information about the actions being performed.`, ``),
            new Parameter_js_2.Parameter(`/w`, `Waits for an acknowledgment from the user that the message has been received. Use this parameter with /time:<*Seconds*> to avoid a possible long delay if the user does not immediately respond. Using this parameter with /v is also helpful.`, ``),
            new Parameter_js_2.Parameter(`<Message>`, `Specifies the text of the message that you want to send. If no message is specified, you will be prompted to enter a message. To send a message that is contained in a file, type the less than (<) symbol followed by the file name.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Sends a message to a user on a Remote Desktop Session Host (rd Session Host) server.`, `msg {<UserName> | <SessionName> | <SessionID>| @<FileName> | *} [/server:<ServerName>] [/time:<Seconds>] [/v] [/w] [<Message>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`msiexec`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
        ], `## Msiexec`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`msinfo32`, [
            new Parameter_js_2.Parameter(`<path>`, `Specifies the file to be opened in the format *C:Folder1File1.XXX*, where *C* is the drive letter, *Folder1* is the folder, *File1* is the file name, and *XXX* is the file name extension.<br /><br />This file can be an .nfo, .xml, .txt, or .cab file.`, ``),
            new Parameter_js_2.Parameter(`<computerName>`, `Specifies the name of the target or local computer. This can be a UNC name, an IP address, or a full computer name.`, ``),
            new Parameter_js_2.Parameter(`<CategoryID>`, `Specifies the ID of the category item. You can obtain the category ID by using /showcategories.`, ``),
            new Parameter_js_2.Parameter(`/pch`, `Displays the System History view in the System Information tool.`, ``),
            new Parameter_js_2.Parameter(`/nfo`, `Saves the exported file as an .nfo file. If the file name that is specified in *path* does not end in an .nfo extension, the .nfo extension is automatically appended to the file name.`, ``),
            new Parameter_js_2.Parameter(`/report`, `Saves the file in *path* as a text file. The file name is saved exactly as it appears in *path*. The .txt extension is not appended to the file unless it is specified in path.`, ``),
            new Parameter_js_2.Parameter(`/computer`, `starts the System Information tool for the specified remote computer. You must have the appropriate permissions to access the remote computer.`, ``),
            new Parameter_js_2.Parameter(`/showcategories`, `starts the System Information tool with all available category IDs displayed, rather than displaying the friendly or localized names. For example, the Software Environment category is displayed as the SWEnv category.`, ``),
            new Parameter_js_2.Parameter(`/category`, `starts System Information with the specified category selected. Use /showcategories to display a list of available category IDs.`, ``),
            new Parameter_js_2.Parameter(`/categories`, `starts System Information with only the specified category or categories displayed. It also limits the output to the selected category or categories. Use /showcategories to display a list of available category IDs.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Opens the System Information tool to display a comprehensive view of the hardware, system components, and software environment on the local computer. `, `msinfo32 [/pch] [/nfo <path>] [/report <path>] [/computer <computerName>] [/showcategories] [/category <CategoryID>] [/categories {+<CategoryID>(+<CategoryID>)|+all(-<CategoryID>)}]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`mstsc`, [
            new Parameter_js_2.Parameter(`<Connection File>`, `Specifies the name of an .rdp file for the connection.`, ``),
            new Parameter_js_2.Parameter(`/v:<Server[:<Port>]`, `Specifies the remote computer and, optionally, the port number to which you want to connect.`, ``),
            new Parameter_js_2.Parameter(`/admin`, `Connects you to a session for administering the server.`, ``),
            new Parameter_js_2.Parameter(`/f`, `starts Remote Desktop Connection in full-screen mode.`, ``),
            new Parameter_js_2.Parameter(`/w:<Width>`, `Specifies the width of the Remote Desktop window.`, ``),
            new Parameter_js_2.Parameter(`/h:<Height>`, `Specifies the height of the Remote Desktop window.`, ``),
            new Parameter_js_2.Parameter(`/public`, `Runs Remote Desktop in public mode. In public mode, passwords and bitmaps are not cached.`, ``),
            new Parameter_js_2.Parameter(`/span`, `Matches the Remote Desktop width and height with the local virtual desktop, spanning across multiple monitors if necessary.`, ``),
            new Parameter_js_2.Parameter(`/edit <Connection File>`, `Opens the specified .rdp file for editing.`, ``),
            new Parameter_js_2.Parameter(`/migrate`, `Migrates legacy connection files that were created with Client Connection Manager to new .rdp connection files.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `creates connections to Remote Desktop Session Host (rd Session Host) servers or other remote computers, edits an existing Remote Desktop Connection (.rdp) configuration file, and migrates legacy connection files that were created with Client Connection Manager to new .rdp connection files.`, `mstsc.exe [<Connection File>] [/v:<Server>[:<Port>]] [/admin] [/f] [/w:<Width> /h:<Height>] [/public] [/span]

mstsc.exe /edit <Connection File>

mstsc.exe /migrate`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`nbtstat`, [
            new Parameter_js_2.Parameter(`/a <remoteName>`, `Displays the NetBIOS name table of a remote computer, where *remoteName* is the NetBIOS computer name of the remote computer. The NetBIOS name table is the list of NetBIOS names that corresponds to NetBIOS applications running on that computer.`, ``),
            new Parameter_js_2.Parameter(`/A <IPaddress>`, `Displays the NetBIOS name table of a remote computer, specified by the IP address (in dotted decimal notation) of the remote computer.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Displays the NetBIOS name table of the local computer. The status of registered indicates that the name is registered either by broadcast or with a WINS server.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Displays NetBIOS name resolution statistics. On a computer running Windows XP or Windows Server 2003 that is configured to use WINS, this parameter returns the number of names that have been resolved and registered using broadcast and WINS.`, ``),
            new Parameter_js_2.Parameter(`/R`, `Purges the contents of the NetBIOS name cache and then reloads the #PRE-tagged entries from the Lmhosts file.`, ``),
            new Parameter_js_2.Parameter(`/RR`, `Releases and then refreshes NetBIOS names for the local computer that is registered with WINS servers.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Displays NetBIOS client and server sessions, attempting to convert the destination IP address to a name.`, ``),
            new Parameter_js_2.Parameter(`/S`, `Displays NetBIOS client and server sessions, listing the remote computers by destination IP address only.`, ``),
            new Parameter_js_2.Parameter(`<Interval>`, `Redisplays selected statistics, pausing the number of seconds specified in *Interval* between each display. Press CTRL+C to stop redisplaying statistics. If this parameter is omitted, nbtstat prints the current configuration information only once.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays NetBIOS over TCP/IP (NetBT) protocol statistics, NetBIOS name tables for both the local computer and remote computers, and the NetBIOS name cache. nbtstat allows a refresh of the NetBIOS name cache and the names registered with Windows Internet Name Service (WINS). Used without parameters, nbtstat displays help. `, `nbtstat [/a <remoteName>] [/A <IPaddress>] [/c] [/n] [/r] [/R] [/RR] [/s] [/S] [<Interval>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`netcfg`, [
            new Parameter_js_2.Parameter(`/v`, `Run in verbose (detailed) mode`, ``),
            new Parameter_js_2.Parameter(`/e`, `Use servicing environment variables during install and uninstall`, ``),
            new Parameter_js_2.Parameter(`/winpe`, `Installs TCP/IP, NetBIOS and Microsoft Client for Windows preinstallation envrionment`, ``),
            new Parameter_js_2.Parameter(`/l`, `Provides the location of INF`, ``),
            new Parameter_js_2.Parameter(`/c`, `Provides the class of the component to be installed; protocol, Service, or client`, ``),
            new Parameter_js_2.Parameter(`/i`, `Provides the component ID`, ``),
            new Parameter_js_2.Parameter(`/s`, `Provides the type of components to show<br /><br />ta = adapters, n = net components`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Installs the Windows Preinstallation Environment (WinPE), a lightweight version of Windows used to deploy workstations.   `, `netcfg [/v] [/e] [/winpe] [/l ] /c /i`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`netsh`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a currently running computer.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`netstat`, [
            new Parameter_js_2.Parameter(`-a`, `Displays all active TCP connections and the TCP and UDP ports on which the computer is listening.`, ``),
            new Parameter_js_2.Parameter(`-e`, `Displays Ethernet statistics, such as the number of bytes and packets sent and received. This parameter can be combined with -s.`, ``),
            new Parameter_js_2.Parameter(`-n`, `Displays active TCP connections, however, addresses and port numbers are expressed numerically and no attempt is made to determine names.`, ``),
            new Parameter_js_2.Parameter(`-o`, `Displays active TCP connections and includes the process ID (PID) for each connection. You can find the application based on the PID on the Processes tab in Windows Task Manager. This parameter can be combined with -a, -n, and -p.`, ``),
            new Parameter_js_2.Parameter(`-p <Protocol>`, `Shows connections for the protocol specified by *Protocol*. In this case, the *Protocol* can be tcp, udp, tcpv6, or udpv6. If this parameter is used with -s to display statistics by protocol, *Protocol* can be tcp, udp, icmp, ip, tcpv6, udpv6, icmpv6, or ipv6.`, ``),
            new Parameter_js_2.Parameter(`-s`, `Displays statistics by protocol. By default, statistics are shown for the TCP, UDP, ICMP, and IP protocols. If the IPv6 protocol is installed, statistics are shown for the TCP over IPv6, UDP over IPv6, ICMPv6, and IPv6 protocols. The -p parameter can be used to specify a set of protocols.`, ``),
            new Parameter_js_2.Parameter(`-r`, `Displays the contents of the IP routing table. This is equivalent to the route print command.`, ``),
            new Parameter_js_2.Parameter(`<Interval>`, `Redisplays the selected information every *Interval* seconds. Press CTRL+C to stop the redisplay. If this parameter is omitted, netstat prints the selected information only once.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays active TCP connections, ports on which the computer is listening, Ethernet statistics, the IP routing table, IPv4 statistics (for the IP, ICMP, TCP, and UDP protocols), and IPv6 statistics (for the IPv6, ICMPv6, TCP over IPv6, and UDP over IPv6 protocols). Used without parameters, netstat displays active TCP connections. `, `netstat [-a] [-e] [-n] [-o] [-p <Protocol>] [-r] [-s] [<Interval>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`nfsadmin`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `You can use nfsadmin to manage Server for NFS and Client for NFS.  `, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`nfsshare`, [
            new Parameter_js_2.Parameter(`-o anon={yes `, ` no}`, ``),
            new Parameter_js_2.Parameter(`-o rw[=<Host>[:<Host>]...]`, `Provides read-write access to the shared directory by the hosts or client groups specified by *Host*. Separate host and group names with a colon (:). If *Host* is not specified, all hosts and client groups (except those specified with the ro option) have read-write access. If neither the ro nor the rw option is set, all clients have read-write access to the shared directory.`, ``),
            new Parameter_js_2.Parameter(`-o ro[=<Host>[:<Host>]...]`, `Provides read-only access to the shared directory by the hosts or client groups specified by *Host*. Separate host and group names with a colon (:). If *Host* is not specified, all clients (except those specified with the rw option) have read-only access. If the ro option is set for one or more clients, but the rw option is not set, only the clients specified with the ro option have access to the shared directory.`, ``),
            new Parameter_js_2.Parameter(`-o encoding={big5`, `euc-jp`, ``),
            new Parameter_js_2.Parameter(`-o anongid=<gid>`, `Specifies that anonymous (unmapped) users will access the share directory using *gid* as their group identifier (GID). The default is -2. The anonymous GID will be used when reporting the owner of a file owned by an unmapped user, even if anonymous access is disabled.`, ``),
            new Parameter_js_2.Parameter(`-o  anonuid=<uid>`, `Specifies that anonymous (unmapped) users will access the share directory using *uid* as their user identifier (UID). The default is -2. The anonymous UID will be used when reporting the owner of a file owned by an unmapped user, even if anonymous access is disabled.`, ``),
            new Parameter_js_2.Parameter(`-o root[=<Host>[:<Host>]...]`, `Provides root access to the shared directory by the hosts or client groups specified by *Host*. Separate host and group names with a colon (:). If *Host* is not specified, all clients have root access. If the root option is not set, no clients have root access to the shared directory.`, ``),
            new Parameter_js_2.Parameter(`/delete`, `If *ShareName* or *Drive*:*Path* is specified, deletes the specified share. If * is specified, deletes all NFS shares.`, ``),
        ], `You can use nfsshare to control Network File System (NFS) shares.`, `nfsshare <ShareName>=<Drive:Path> [-o <Option=value>...]

nfsshare {<ShareName> | <Drive>:<Path> | * } /delete`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`nfsstat`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `You can use nfsstat to display or reset counts of calls made to Server for NFS.`, `nfsstat [-z]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`nlbmgr`, [
            new Parameter_js_2.Parameter(`/help`, `Displays help at the command prompt.`, ``),
            new Parameter_js_2.Parameter(`/noping`, `Prevents Network Load Balancing Manager from pinging the hosts prior to trying to contact them through Windows Management Instrumentation (WMI). Use this option if you have disabled Internet Control Message Protocol (ICMP) on all available network adapters. If Network Load Balancing Manager attempts to contact a host that is not available, you will experience a delay when using this option.`, ``),
            new Parameter_js_2.Parameter(`/hostlist <filename>`, `Loads the hosts specified in filename into Network Load Balancing Manager.`, ``),
            new Parameter_js_2.Parameter(`/autorefresh <interval>`, `Causes Network Load Balancing Manager to refresh its host and cluster information every <interval> seconds. If no interval is specified, the information is refreshed every 60 seconds.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Using Network Load Balancing Manager, you can configure and manage your Network Load Balancing clusters and all cluster hosts from a single computer, and you can also replicate the cluster configuration to other hosts. You can start Network Load Balancing Manager from the command-line using the command nlbmgr.exe, which is installed in the systemroot\System32 folder.`, `nlbmgr [/help] [/noping] [/hostlist <filename>] [/autorefresh <interval>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`nslookup`, [
            new Parameter_js_2.Parameter(`[nslookup exit Command](nslookup-exit-command.md)`, `exits nslookup.`, ``),
            new Parameter_js_2.Parameter(`[nslookup finger Command](nslookup-finger-command.md)`, `Connects with the finger server on the current computer.`, ``),
            new Parameter_js_2.Parameter(`[nslookup help](nslookup-help.md)`, `Displays a short summary of nslookup subcommands.`, ``),
            new Parameter_js_2.Parameter(`[nslookup ls](nslookup-ls.md)`, `lists information for a DNS domain.`, ``),
            new Parameter_js_2.Parameter(`[nslookup lserver](nslookup-lserver.md)`, `changes the default server to the specified DNS domain.`, ``),
            new Parameter_js_2.Parameter(`[nslookup root](nslookup-root.md)`, `changes the default server to the server for the root of the DNS domain name space.`, ``),
            new Parameter_js_2.Parameter(`[nslookup server](nslookup-server.md)`, `changes the default server to the specified DNS domain.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set](nslookup-set.md)`, `changes configuration settings that affect how lookups function.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set all](nslookup-set-all.md)`, `prints the current values of the configuration settings.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set class](nslookup-set-class.md)`, `changes the query class. The class specifies the protocol group of the information.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set d2](nslookup-set-d2.md)`, `Turns exhaustive Debugging mode on or off. All fields of every packet are printed.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set debug](nslookup-set-debug.md)`, `Turns Debugging mode on or off.`, ``),
            new Parameter_js_2.Parameter(`nslookup /set defname`, `appends the default DNS domain name to a single component lookup request. A single component is a component that contains no periods.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set domain](nslookup-set-domain.md)`, `changes the default DNS domain name to the name specified.`, ``),
            new Parameter_js_2.Parameter(`nslookup /set ignore`, `Ignores packet truncation errors.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set port](nslookup-set-port.md)`, `changes the default TCP/UDP DNS name server port to the value specified.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set querytype](nslookup-set-querytype.md)`, `changes the resource record type for the query.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set recurse](nslookup-set-recurse.md)`, `Tells the DNS name server to query other servers if it does not have the information.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set retry](nslookup-set-retry.md)`, `Sets the number of retries.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set root](nslookup-set-root.md)`, `changes the name of the root server used for queries.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set search](nslookup-set-search.md)`, `appends the DNS domain names in the DNS domain search list to the request until an answer is received. This applies when the set and the lookup request contain at least one period, but do not end with a trailing period.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set srchlist](nslookup-set-srchlist.md)`, `changes the default DNS domain name and search list.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set timeout](nslookup-set-timeout.md)`, `changes the initial number of seconds to wait for a reply to a request.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set type](nslookup-set-type.md)`, `changes the resource record type for the query.`, ``),
            new Parameter_js_2.Parameter(`[nslookup set vc](nslookup-set-vc.md)`, `Specifies to use or not use a virtual circuit when sending requests to the server.`, ``),
            new Parameter_js_2.Parameter(`[nslookup view](nslookup-view.md)`, `sorts and lists the output of the previous ls subcommand or commands.`, ``),
        ], `Displays information that you can use to diagnose Domain Name System (DNS) infrastructure. Before using this tool, you should be familiar with how DNS works. The nslookup command-line tool is available only if you have installed the TCP/IP protocol.`, `nslookup [<-SubCommand ...>] [{<computerTofind> | -<Server>}]

nslookup /exit

nslookup /finger [<UserName>] [{[>] <FileName>|[>>] <FileName>}]

nslookup /{help | ?}

nslookup /ls [<Option>] <DNSDomain> [{[>] <FileName>|[>>] <FileName>}]

nslookup /lserver <DNSDomain> 

nslookup /root 

nslookup /server <DNSDomain>

nslookup /set <KeyWord>[=<Value>]

nslookup /set all 

nslookup /set class=<Class>

nslookup /set [no]d2

nslookup /set [no]debug

nslookup /set [no]defname

nslookup /set domain=<DomainName>

nslookup /set [no]ignore

nslookup /set port=<Port>

nslookup /set querytype=<ResourceRecordtype>

nslookup /set [no]recurse

nslookup /set retry=<Number>

nslookup /set root=<RootServer>

nslookup /set [no]search

nslookup /set srchlist=<DomainName>[/...]

nslookup /set timeout=<Number>

nslookup /set type=<ResourceRecordtype>

nslookup /set [no]vc

nslookup /view <FileName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ntbackup`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `The ntbackup command is not available in Windows Vista or Windows Server 2008. Instead, you should use the wbadmin command and subcommands to back up and restore your computer and files from a command prompt.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ntcmdprompt`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Runs the command interpreter Cmd.exe, rather than Command.com, after running a Terminate and Stay Resident (TSR) or after starting the command prompt from within an MS-DOS application.`, `ntcmdprompt`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ntfrsutl`, [
            new Parameter_js_2.Parameter(`idtable`, `ID table`, ``),
            new Parameter_js_2.Parameter(`configtable`, `FRS configuration table`, ``),
            new Parameter_js_2.Parameter(`inlog`, `Inbound log`, ``),
            new Parameter_js_2.Parameter(`outlog`, `Outbound log`, ``),
            new Parameter_js_2.Parameter(`<computer>`, `Specifies the computer.`, ``),
            new Parameter_js_2.Parameter(`memory`, `Memory usage`, ``),
            new Parameter_js_2.Parameter(`t`, `h`, ``),
            new Parameter_js_2.Parameter(`s`, `t`, ``),
            new Parameter_js_2.Parameter(`ds`, `lists the NTFRS service's view of the DS.`, ``),
            new Parameter_js_2.Parameter(`sets`, `Specifies the active replica sets`, ``),
            new Parameter_js_2.Parameter(`version`, `Specifies the API and NTFRS service versions.`, ``),
            new Parameter_js_2.Parameter(`poll`, `Specifies the current polling intervals.<br /><br />Parameters:<br /><br /><ul><li>/quickly[=[ <N>]]  (Polls quickly)<br /><br /><ul><li>quickly - Polls quickly until stable configuration is rectrieved</li><li>quickly= - Polls quickly every default minutes.</li><li>quickly=<N> - Polls quickly every *N* minutes</li></ul></li><li>/slowly[=[ <N>]] (Polls slowly)<br /><br /><ul><li>slowly - Polls slowly until stable configuration is retrieved</li><li>slowly= - Polls slowly every default minutes</li><li>slowly=<N> - Polls quickly every *N* minutes</li></ul></li><li>/now (Polls now)</li></ul>`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Dumps the internal tables, thread, and memory information for the NT File Replication Service \(NTFRS\). It runs against local and remote servers. The recovery setting for NTFRS in Service Control Manager \(SCM\) can be critical to locating and keeping IMPORTANT log events on the computer. This tool provides a convenient method of reviewing those settings.   `, `ntfrsutl[idtable|configtable|inlog|outlog][<computer>]  

ntfrsutl[memory|threads|stage][<computer>]  

ntfrsutl ds[<computer>]  

ntfrsutl [sets][<computer>]  

ntfrsutl [version][<computer>]  

ntfrsutl poll[/quickly[=[<N>]]][/slowly[=[<N>]]][/now][<computer>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`openfiles`, [
            new Parameter_js_2.Parameter(`/s <System>`, `Specifies the remote system to connect to (by name or IP address). Do not use backslashes. If you do not use the /s option, the command is executed on the local computer by default. This parameter applies to all files and folders that are specified in the command.`, ``),
            new Parameter_js_2.Parameter(`/u [<Domain>]<UserName>`, `Executes the command by using the permissions of the specified user account. If you do not use the /u option, system permissions are used by default.`, ``),
            new Parameter_js_2.Parameter(`/p [<Password>]`, `Specifies the password of the user account that is specified in the /u option. If you do not use the /p option, a password prompt appears when the command is executed.`, ``),
            new Parameter_js_2.Parameter(`/id <OpenFileID>`, `Disconnects open files by the specified file ID. The wildcard character (*) can be used with this parameter.</br>Note: You can use the openfiles /query command to find the file ID.`, ``),
            new Parameter_js_2.Parameter(`/a <AccessedBy>`, `Disconnects all open files associated with the user name that is specified in the *AccessedBy* parameter. The wildcard character (*) can be used with this parameter.`, ``),
            new Parameter_js_2.Parameter(`/o {read | write | read/write}`, `Disconnects all open files with the specified open mode value. Valid values are Read, Write, or Read/Write. The wildcard character (*) can be used with this parameter.`, ``),
            new Parameter_js_2.Parameter(`/op <OpenFile>`, `Disconnects all open file connections that are created by a specific open file name. The wildcard character (*) can be used with this parameter.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables an administrator to query, display, or disconnect files and directories that have been opened on a system. Also enables or disables the system Maintain Objects List global flag.`, `openfiles /disconnect [/s <System> [/u [<Domain>\]<UserName> [/p [<Password>]]]] {[/id <OpenFileID>] | [/a <AccessedBy>] | [/o {read | write | read/write}]} [/op <OpenFile>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pagefileconfig`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
        ], `pagefileconfig is deprecated, and is not guaranteed to be supported in future releases of Windows.  `, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`path`, [
            new Parameter_js_2.Parameter(`[<Drive>:]<Path>`, `Specifies the drive and directory to set in the command path.`, ``),
            new Parameter_js_2.Parameter(`;`, `Separates directories in the command path. If used without other parameters, ; clears the existing command paths from the PATH environment variable and directs Cmd.exe to search only in the current directory.`, ``),
            new Parameter_js_2.Parameter(`%PATH%`, `Appends the command path to the existing set of directories listed in the PATH environment variable.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Sets the command path in the PATH environment variable (the set of directories used to search for executable files). If used without parameters, path displays the current command path.`, `path [[<Drive>:]<Path>[;...][;%PATH%]]

path ;`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pathping`, [
            new Parameter_js_2.Parameter(`/n`, `Prevents pathping from attempting to resolve the IP addresses of intermediate routers to their names. This might expedite the display of pathping results.`, ``),
            new Parameter_js_2.Parameter(`/h <MaximumHops>`, `Specifies the maximum number of hops in the path to search for the target (destination). The default is 30 hops.`, ``),
            new Parameter_js_2.Parameter(`/g <Hostlist>`, `Specifies that the echo Request messages use the Loose Source Route option in the IP header with the set of intermediate destinations specified in *Hostlist*. With loose source routing, successive intermediate destinations can be separated by one or multiple routers. The maximum number of addresses or names in the host list is 9. The *Hostlist* is a series of IP addresses (in dotted decimal notation) separated by spaces.`, ``),
            new Parameter_js_2.Parameter(`/p <Period>`, `Specifies the number of milliseconds to wait between consecutive pings. The default is 250 milliseconds (1/4 second).`, ``),
            new Parameter_js_2.Parameter(`/q <NumQueries>`, `Specifies the number of echo Request messages sent to each router in the path. The default is 100 queries.`, ``),
            new Parameter_js_2.Parameter(`/w <timeout>`, `Specifies the number of milliseconds to wait for each reply. The default is 3000 milliseconds (3 seconds).`, ``),
            new Parameter_js_2.Parameter(`/i <IPaddress>`, `Specifies the source address.`, ``),
            new Parameter_js_2.Parameter(`/4 <IPv4>`, `Specifies that pathping uses IPv4 only.`, ``),
            new Parameter_js_2.Parameter(`/6 <IPv6>`, `Specifies that pathping uses IPv6 only.`, ``),
            new Parameter_js_2.Parameter(`<TargetName>`, `Specifies the destination, which is identified either by IP address or host name.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Provides information about network latency and network loss at intermediate hops between a source and destination. pathping sends multiple echo Request messages to each router between a source and destination over a period of time and then computes results based on the packets returned from each router. Because pathping displays the degree of packet loss at any given router or link, you can determine which routers or subnets might be having network problems. `, `pathping [/n] [/h] [/g <Hostlist>] [/p <Period>] [/q <NumQueries> [/w <timeout>] [/i <IPaddress>] [/4 <IPv4>] [/6 <IPv6>][<TargetName>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pause`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Suspends the processing of a batch program and displays the following prompt:`, `Press any key to continue . . .`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pbadmin`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Pbadmin is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pentnt`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Pentnt is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`perfmon`, [
            new Parameter_js_2.Parameter(`/res`, `Start Resource View.`, ``),
            new Parameter_js_2.Parameter(`/report`, `Start the System Diagnostics Data Collector Set and display a report of the results.`, ``),
            new Parameter_js_2.Parameter(`/rel`, `Start Reliability Monitor.`, ``),
            new Parameter_js_2.Parameter(`/sys`, `Start Performance Monitor.`, ``),
        ], `Start Windows Reliability and Performance Monitor in a specific standalone mode.`, `perfmon </res|report|rel|sys>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ping`, [
            new Parameter_js_2.Parameter(`/t`, `Specifies that ping continue sending echo Request messages to the destination until interrupted. To interrupt and display statistics, press CTRL+break. To interrupt and quit ping, press CTRL+C.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Specifies that reverse name resolution is performed on the destination IP address. If this is successful, ping displays the corresponding host name.`, ``),
            new Parameter_js_2.Parameter(`/n <Count>`, `Specifies the number of echo Request messages sent. The default is 4.`, ``),
            new Parameter_js_2.Parameter(`/l <Size>`, `Specifies the length, in bytes, of the Data field in the echo Request messages sent. The default is 32. The maximum Size is 65,527.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Specifies that echo Request messages are sent with the Do not Fragment flag in the IP header set to 1 (available on IPv4 only). The echo Request message cannot be fragmented by routers in the path to the destination. This parameter is useful for troubleshooting path Maximum Transmission Unit (PMTU) problems.`, ``),
            new Parameter_js_2.Parameter(`/I <TTL>`, `Specifies the value of the TTL field in the IP header for echo Request messages sent. The default is the default TTL value for the host. The maximum *TTL* is 255.`, ``),
            new Parameter_js_2.Parameter(`/v <TOS>`, `Specifies the value of the type of Service (TOS) field in the IP header for echo Request messages sent (available on IPv4 only). The default is 0. *TOS* is specified as a decimal value from 0 through 255.`, ``),
            new Parameter_js_2.Parameter(`/r <Count>`, `Specifies that the Record Route option in the IP header is used to record the path taken by the echo Request message and corresponding echo Reply message (available on IPv4 only). Each hop in the path uses an entry in the Record Route option. If possible, specify a *Count* that is equal to or greater than the number of hops between the source and destination. The *Count* must be a minimum of 1 and a maximum of 9.`, ``),
            new Parameter_js_2.Parameter(`/s <Count>`, `Specifies that the Internet timestamp option in the IP header is used to record the time of arrival for the echo Request message and corresponding echo Reply message for each hop. The *Count* must be a minimum of 1 and a maximum of 4. This is required for link-local destination addresses.`, ``),
            new Parameter_js_2.Parameter(`/j <Hostlist>`, `Specifies that the echo Request messages use the Loose Source Route option in the IP header with the set of intermediate destinations specified in *Hostlist* (available on IPv4 only). With loose source routing, successive intermediate destinations can be separated by one or multiple routers. The maximum number of addresses or names in the host list is 9. The host list is a series of IP addresses (in dotted decimal notation) separated by spaces.`, ``),
            new Parameter_js_2.Parameter(`/k <Hostlist>`, `Specifies that the echo Request messages use the Strict Source Route option in the IP header with the set of intermediate destinations specified in *Hostlist* (available on IPv4 only). With strict source routing, the next intermediate destination must be directly reachable (it must be a neighbor on an interface of the router). The maximum number of addresses or names in the host list is 9. The host list is a series of IP addresses (in dotted decimal notation) separated by spaces.`, ``),
            new Parameter_js_2.Parameter(`/w <timeout>`, `Specifies the amount of time, in milliseconds, to wait for the echo Reply message that corresponds to a given echo Request message to be received. If the echo Reply message is not received within the time-out, the "Request timed out" error message is displayed. The default time-out is 4000 (4 seconds).`, ``),
            new Parameter_js_2.Parameter(`/R`, `Specifies that the round-trip path is traced (available on IPv6 only).`, ``),
            new Parameter_js_2.Parameter(`/S <Srcaddr>`, `Specifies the source address to use (available on IPv6 only).`, ``),
            new Parameter_js_2.Parameter(`/4`, `Specifies that IPv4 is used to ping. This parameter is not required to identify the target host with an IPv4 address. It is only required to identify the target host by name.`, ``),
            new Parameter_js_2.Parameter(`/6`, `Specifies that IPv6 is used to ping. This parameter is not required to identify the target host with an IPv6 address. It is only required to identify the target host by name.`, ``),
            new Parameter_js_2.Parameter(`<TargetName>`, `Specifies the host name or IP address of the destination.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `The ping command verifies IP-level connectivity to another TCP/IP computer by sending Internet Control Message Protocol (ICMP) echo Request messages. The receipt of corresponding echo Reply messages are displayed, along with round-trip times. ping is the primary TCP/IP command used to troubleshoot connectivity, reachability, and name resolution. Used without parameters,  ping displays help.`, `ping [/t] [/a] [/n <Count>] [/l <Size>] [/f] [/I <TTL>] [/v <TOS>] [/r <Count>] [/s <Count>] [{/j <Hostlist> | /k <Hostlist>}] [/w <timeout>] [/R] [/S <Srcaddr>] [/4] [/6] <TargetName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pnpunattend`, [
            new Parameter_js_2.Parameter(`auditSystem`, `Specifies online driver install.</br>Required, except when pnpunattend is run with either the /Help or /? parameters.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Optional. Specifies to search for drivers without installing.`, ``),
            new Parameter_js_2.Parameter(`/L`, `Optional. Specifies to display the log information for this command in the command prompt.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Optional. Displays help for this command at the command prompt.`, ``),
        ], `Audits a computer for device drivers, and perform unattended driver installations, or search for drivers without installing and, optionally, report the results to the command line. Use this command to specify the installation of specific drivers for specific hardware devices. See Remarks.`, `PnPUnattend.exe auditSystem [/help] [/?] [/h] [/s] [/L]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pnputil`, [
            new Parameter_js_2.Parameter(`-a`, `Specifies to add the identified INF file.`, ``),
            new Parameter_js_2.Parameter(`-d`, `Specifies to delete the identified INF file.`, ``),
            new Parameter_js_2.Parameter(`-e`, `Specifies to enumerate all third-party INF files.`, ``),
            new Parameter_js_2.Parameter(`-f`, `Specifies to force the deletion of the identified INF file. Cannot be used in conjunction with the â€“i parameter.`, ``),
            new Parameter_js_2.Parameter(`-i`, `Specifies to install the identified INF file. Cannot be used in conjunction with  the -f parameter.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Pnputil.exe is a command line utility that you can use to manage the driver store. You can use Pnputil to add driver packages, remove driver packages, and list driver packages that are in the store.`, `pnputil.exe [-f | -i] [ -? | -a | -d | -e ] <INF name>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`popd`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Changes the current directory to the directory that was most recently stored by the pushd command.`, `popd`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`PowerShell`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Windows PowerShell is a task-based command-line shell and scripting language designed especially for system administration. Built on the .NET Framework, Windows PowerShell helps IT professionals and power users control and automate the administration of the Windows operating system and applications that run on Windows.`, `PowerShell.exe -ExecutionPolicy Restricted`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`PowerShell_ise`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Windows PowerShell Integrated Scripting Environment (ISE) is a graphical host application that enables you to read, write, run, debug, and test scripts and modules in a graphic-assisted environment. Key features such as IntelliSense, Show-Command, snippets, tab completion, syntax-coloring, visual debugging, and context-sensitive Help provide a rich scripting experience.`, `PowerShell_Ise`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`print`, [
            new Parameter_js_2.Parameter(`/d:<PrinterName>`, `Specifies the printer that you want to print the job. To print to a locally connected printer, specify the port on your computer where the printer is connected.</br>-   Valid values for parallel ports are LPT1, LPT2, and LPT3.</br>-   Valid values for serial ports are COM1, COM2, COM3, and COM4.</br>You can also specify a network printer by using its queue name (\\\*ServerNamePrinterName*). If you do not specify a printer, the print job is sent to LPT1 by default.`, ``),
            new Parameter_js_2.Parameter(`<Drive>:`, `Specifies the logical or physical drive where the file you want to print is located. This parameter is not required if the file you want to print is located on the current drive.`, ``),
            new Parameter_js_2.Parameter(`<Path>`, `Specifies the location of the file you want to print. This parameter is not required if the file you want to print is located in the current directory.`, ``),
            new Parameter_js_2.Parameter(`<FileName>[ ...]`, `Required. Specifies the file you want to print. You can include multiple files in one command.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Sends a text file to a printer.`, `Print [/d:<PrinterName>] [<Drive>:][<Path>]<FileName>[ ...]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`prncnfg`, [
            new Parameter_js_2.Parameter(`-g`, `Displays configuration information about a printer.`, ``),
            new Parameter_js_2.Parameter(`-t`, `Configures a printer.`, ``),
            new Parameter_js_2.Parameter(`-x`, `renames a printer.`, ``),
            new Parameter_js_2.Parameter(`-S <ServerName>`, `Specifies the name of the remote computer that hosts the printer that you want to manage. If you do not specify a computer, the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`-P <printerName>`, `Specifies the name of the printer that you want to manage. Required.`, ``),
            new Parameter_js_2.Parameter(`-z <NewprinterName>`, `Specifies the new printer name. Requires the -x and -P parameters.`, ``),
            new Parameter_js_2.Parameter(`-u <UserName> -w <Password>`, `Specifies an account with permissions to connect to the computer that hosts the printer that you want to manage. All members of the target computer's local Administrators group have these permissions, but the permissions can also be granted to other users. If you do not specify an account, you must be logged on under an account with these permissions for the command to work.`, ``),
            new Parameter_js_2.Parameter(`-r <PortName>`, `Specifies the port where the printer is connected. If this is a parallel or a serial port, then use the ID of the port (for example, LPT1 or COM1). If this is a TCP/IP port, use the port name that was specified when the port was added.`, ``),
            new Parameter_js_2.Parameter(`-l <Location>`, `Specifies the printer location, such as "copy Room."`, ``),
            new Parameter_js_2.Parameter(`-h <Sharename>`, `Specifies the printer's share name.`, ``),
            new Parameter_js_2.Parameter(`-m <Comment>`, `Specifies the printer's comment string.`, ``),
            new Parameter_js_2.Parameter(`-f <SeparatorFileName>`, `Specifies a file that contains the text that appears on the separator page.`, ``),
            new Parameter_js_2.Parameter(`-y <Datatype>`, `Specifies the data types that the printer can accept.`, ``),
            new Parameter_js_2.Parameter(`-st <starttime>`, `Configures the printer for limited availability. Specifies the time of day the printer is available. If you send a document to a printer when it is unavailable, the document is held (spooled) until the printer becomes available. You must specify time as a 24-hour clock. For example, to specify 11:00 P.M., type 2300.`, ``),
            new Parameter_js_2.Parameter(`-ut <Endtime>`, `Configures the printer for limited availability. Specifies the time of day the printer is no longer available. If you send a document to a printer when it is unavailable, the document is held (spooled) until the printer becomes available. You must specify time as a 24-hour clock. For example, to specify 11:00 P.M., type 2300.`, ``),
            new Parameter_js_2.Parameter(`-o <Priority>`, `Specifies a priority that the spooler uses to route print jobs into the print queue. A print queue with a higher priority receives all its jobs before any queue with a lower priority.`, ``),
            new Parameter_js_2.Parameter(`-i <DefaultPriority>`, `Specifies the default priority assigned to each print job.`, ``),
            new Parameter_js_2.Parameter(`{+&#124;-}shared`, `Specifies whether this printer is shared on the network.`, ``),
            new Parameter_js_2.Parameter(`{+&#124;-}direct`, `Specifies whether the document should be sent directly to the printer without being spooled.`, ``),
            new Parameter_js_2.Parameter(`{+&#124;-}published`, `Specifies whether this printer should be published in active directory. If you publish the printer, other users can search for it based on its location and capabilities (such as color printing and stapling).`, ``),
            new Parameter_js_2.Parameter(`{+&#124;-}hidden`, `Reserved function.`, ``),
            new Parameter_js_2.Parameter(`{+&#124;-}rawonly`, `Specifies whether only raw data print jobs can be spooled in this queue.`, ``),
            new Parameter_js_2.Parameter(`{+ &#124; -}queued`, `Specifies that the printer should not begin to print until after the last page of the document is spooled. The printing program is unavailable until the document has finished printing. However, using this parameter ensures that the whole document is available to the printer.`, ``),
            new Parameter_js_2.Parameter(`{+ &#124; -}keepprintedjobs`, `Specifies whether the spooler should retain documents after they are printed. Enabling this option allows a user to resubmit a document to the printer from the print queue instead of from the printing program.`, ``),
            new Parameter_js_2.Parameter(`{+ &#124; -}workoffline`, `Specifies whether a user is able to send print jobs to the print queue if the computer is not connected to the network.`, ``),
            new Parameter_js_2.Parameter(`{+ &#124; -}enabledevq`, `Specifies whether print jobs that do not match the printer setup (for example, PostScript files spooled to non-PostScript printers) should be held in the queue rather than being printed.`, ``),
            new Parameter_js_2.Parameter(`{+ &#124; -}docompletefirst`, `Specifies whether the spooler should send print jobs with a lower priority that have completed spooling before sending print jobs with a higher priority that have not completed spooling. If this option is enabled and no documents have completed spooling, the spooler will send larger documents before smaller ones. You should enable this option if you want to maximize printer efficiency at the cost of job priority. If this option is disabled, the spooler always sends higher priority jobs to their respective queues first.`, ``),
            new Parameter_js_2.Parameter(`{+ &#124; -}enablebidi`, `Specifies whether the printer sends status information to the spooler.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Configures or displays configuration information about a printer.`, `cscript Prncnfg {-g | -t | -x | -?} [-S <ServerName>] [-P <printerName>] [-z <NewprinterName>] [-u <UserName>] [-w <Password>] [-r <PortName>] [-l <Location>] [-h <Sharename>] [-m <Comment>] [-f <SeparatorFileName>] [-y <Datatype>] [-st <starttime>] [-ut <Untiltime>] [-i <DefaultPriority>] [-o <Priority>] [<+|->shared] [<+|->direct] [<+|->hidden] [<+|->published] [<+|->rawonly] [<+|->queued] [<+|->enablebidi] [<+|->keepprintedjobs] [<+|->workoffline] [<+|->enabledevq] [<+|->docompletefirst]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`prndrvr`, [
            new Parameter_js_2.Parameter(`-a`, `Installs a driver.`, ``),
            new Parameter_js_2.Parameter(`-d`, `deletes a driver.`, ``),
            new Parameter_js_2.Parameter(`-l`, `lists all printer drivers installed on the server specified by the -s parameter. If you do not specify a server, Windows lists the printer drivers installed on the local computer.`, ``),
            new Parameter_js_2.Parameter(`-x`, `deletes all printer drivers and additional printer drivers not in use by a logical printer on the server specified by the -s parameter. If you do not specify a server to remove from the list, Windows deletes all unused printer drivers on the local computer.`, ``),
            new Parameter_js_2.Parameter(`-m <DrivermodelName>`, `Specifies (by name) the driver you want to install. Drivers are often named for the model of printer they support. See the printer documentation for more information.`, ``),
            new Parameter_js_2.Parameter(`-v {0 &#124; 1 &#124; 2 &#124; 3}`, `Specifies the version of the driver you want to install. See the description of the -eparameter for information on which versions are available for which environment. If you do not specify a version, the version of the driver appropriate for the version of Windows running on the computer where you are installing the driver is installed.<br /><br />-   version 0 supports Windows 95, Windows 98, and Windows Millennium edition.<br />-   version 1 supports Windows NT 3.51.<br />-   version 2 supports Windows NT 4.0.<br />-   version 3 supports Windows Vista, Windows XP, Windows 2000, and the Windows Server 2003 operating systems. Note that this is the only printer driver version that Windows Vista supports.`, ``),
            new Parameter_js_2.Parameter(`-e <Environment>`, `Specifies the environment for the driver you want to install. If you do not specify an environment, the environment of the computer where you are installing the driver is used. The supported environment parameters are:<br /><br />-   "Windows NT x86"<br />-   "Windows x64"<br />-   "Windows IA64"`, ``),
            new Parameter_js_2.Parameter(`-s <ServerName>`, `Specifies the name of the remote computer that hosts the printer that you want to manage. If you do not specify a computer, the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`-u <UserName> -w <Password>`, `Specifies an account with permissions to connect to the computer that hosts the printer that you want to manage. All members of the target computer's local Administrators group have these permissions, but the permissions can also be granted to other users. If you do not specify an account, you must be logged on under an account with these permissions for the command to work.`, ``),
            new Parameter_js_2.Parameter(`-h <path>`, `Specifies the path to the driver file. If you do not specify a path, the path to the location where Windows was installed is used.`, ``),
            new Parameter_js_2.Parameter(`-i <Filename.inf>`, `Specifies the complete path and file name for the driver you want to install. If you do not specify a file name, the script uses one of the inbox printer .inf files in the inf subdirectory of the Windows directory.<br /><br />if the driver path is not specified, the script searches for driver files in the driver.cab file.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Use the prndrvr command to add, delete, and list printer drivers.`, `cscript prndrvr {-a | -d | -l | -x | -?} [-m <model>] [-v {0|1|2|3}] 

[-e <environment>] [-s <ServerName>] [-u <UserName>] [-w <Password>] 

[-h <path>] [-i <inf file>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`prnjobs`, [
            new Parameter_js_2.Parameter(`-z`, `pauses the print job specified with the -j parameter.`, ``),
            new Parameter_js_2.Parameter(`-m`, `Resumes the print job specified with the -j parameter.`, ``),
            new Parameter_js_2.Parameter(`-x`, `Cancels the print job specified with the -j parameter.`, ``),
            new Parameter_js_2.Parameter(`-l`, `lists all the print jobs in a print queue.`, ``),
            new Parameter_js_2.Parameter(`-s <ServerName>`, `Specifies the name of the remote computer that hosts the printer that you want to manage. If you do not specify a computer, the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`-p <printerName>`, `Specifies the name of the printer that you want to manage. Required.`, ``),
            new Parameter_js_2.Parameter(`-j <JobID>`, `Specifies (by ID number) the print job you want to cancel.`, ``),
            new Parameter_js_2.Parameter(`-u <UserName> -w <Password>`, `Specifies an account with permissions to connect to the computer that hosts the printer that you want to manage. All members of the target computer's local Administrators group have these permissions, but the permissions can also be granted to other users. If you do not specify an account, you must be logged on under an account with these permissions for the command to work.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Pauses, resumes, cancels, and lists print jobs.`, `cscript Prnjobs {-z | -m | -x | -l | -?} [-s <ServerName>] 

[-p <printerName>] [-j <JobID>] [-u <UserName>] [-w <Password>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`prnmngr`, [
            new Parameter_js_2.Parameter(`-a`, `adds a local printer connection.`, ``),
            new Parameter_js_2.Parameter(`-d`, `deletes a printer connection.`, ``),
            new Parameter_js_2.Parameter(`-x`, `deletes all printers from the server specified with the -s parameter. If you do not specify a server, Windows deletes all printers on the local computer.`, ``),
            new Parameter_js_2.Parameter(`-g`, `Displays the default printer.`, ``),
            new Parameter_js_2.Parameter(`-t`, `Sets the default printer to the printer specified by the -p parameter.`, ``),
            new Parameter_js_2.Parameter(`-l`, `lists all printers installed on the server specified by the -s parameter. If you do not specify a server, Windows lists the printers installed on the local computer.`, ``),
            new Parameter_js_2.Parameter(`c`, `Specifies that the parameter applies to printer connections. Can be used with the -a and -x parameters.`, ``),
            new Parameter_js_2.Parameter(`-s <ServerName>`, `Specifies the name of the remote computer that hosts the printer that you want to manage. If you do not specify a computer, the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`-p <printerName>`, `Specifies the name of the printer that you want to manage.`, ``),
            new Parameter_js_2.Parameter(`-m <DrivermodelName>`, `Specifies (by name) the driver you want to install. Drivers are often named for the model of printer they support. See the printer documentation for more information.`, ``),
            new Parameter_js_2.Parameter(`-r <PortName>`, `Specifies the port where the printer is connected. If this is a parallel or a serial port, use the ID of the port (for example, LPT1: or COM1:). If this is a TCP/IP port, use the port name that was specified when the port was added.`, ``),
            new Parameter_js_2.Parameter(`-u <UserName> -w <Password>`, `Specifies an account with permissions to connect to the computer that hosts the printer that you want to manage. All members of the target computer's local Administrators group have these permissions, but the permissions can also be granted to other users. If you do not specify an account, you must be logged on under an account with these permissions for the command to work.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Adds, deletes, and lists printers or printer connections, in addition to setting and displaying the default printer.`, `cscript Prnmngr {-a | -d | -x | -g | -t | -l | -?}[c] [-s <ServerName>] 

[-p <printerName>] [-m <printermodel>] [-r <PortName>] [-u <UserName>] 

[-w <Password>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`prnport`, [
            new Parameter_js_2.Parameter(`-a`, `creates a standard TCP/IP printer port.`, ``),
            new Parameter_js_2.Parameter(`-d`, `deletes a standard TCP/IP printer port.`, ``),
            new Parameter_js_2.Parameter(`-l`, `lists all standard TCP/IP printer ports on the computer specified with the -s parameter.`, ``),
            new Parameter_js_2.Parameter(`-g`, `Displays the configuration of a standard TCP/IP printer port.`, ``),
            new Parameter_js_2.Parameter(`-t`, `Configures the port settings for a standard TCP/IP printer port.`, ``),
            new Parameter_js_2.Parameter(`-r <PortName>`, `Specifies the port to which the printer is connected.`, ``),
            new Parameter_js_2.Parameter(`-s <ServerName>`, `Specifies the name of the remote computer that hosts the printer that you want to manage. If you do not specify a computer, the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`-u <UserName> -w <Password>`, `Specifies an account with permissions to connect to the computer that hosts the printer that you want to manage. All members of the target computer's local Administrators group have these permissions, but the permissions can also be granted to other users. If you do not specify an account, you must be logged on under an account with these permissions for the command to work.`, ``),
            new Parameter_js_2.Parameter(`-o {raw &#124; lpr}`, `Specifies which protocol the port uses: TCP raw or TCP lpr. If you use TCP raw, you can optionally specify the port number by using the -n parameter. The default port number is 9100.`, ``),
            new Parameter_js_2.Parameter(`-h <Hostaddress>`, `Specifies (by IP address) the printer for which you want to configure the port.`, ``),
            new Parameter_js_2.Parameter(`-q <QueueName>`, `Specifies the queue name for a TCP raw port.`, ``),
            new Parameter_js_2.Parameter(`-n <PortNumber>`, `Specifies the port number for a TCP raw port. The default port number is 9100.`, ``),
            new Parameter_js_2.Parameter(`-m{e &#124; d}`, `Specifies whether SNMP is enabled. The parameter e enables SNMP. The parameter d disables SNMP.`, ``),
            new Parameter_js_2.Parameter(`-i <SNMPIndex`, `Specifies the SNMP index, if SNMP is enabled. For more information, see Rfc 1759 at the [Rfc editor Web site](https://go.microsoft.com/fwlink/?LinkId=569).`, ``),
            new Parameter_js_2.Parameter(`-y <CommunityName>`, `Specifies the SNMP community name, if SNMP is enabled.`, ``),
            new Parameter_js_2.Parameter(`-2{e &#124; -d}`, `Specifies whether double spools (also known as respooling) are enabled for TCP lpr ports. Double spools are necessary because TCP lpr must include an accurate byte count in the control file that is sent to the printer, but the protocol cannot get the count from the local print provider. Therefore, when a file is spooled to a TCP lpr print queue, it is also spooled as a temporary file in the system32 directory. TCP lpr determines the size of the temporary file and sends the size to the server running LPD. The parameter e enables double spools. The parameter d disables double spools.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates, deletes, and lists standard TCP/IP printer ports, in addition to displaying and changing port configuration.`, `cscript prnport {-a | -d | -l | -g | -t | -?} [-r <PortName>] 

[-s <ServerName>] [-u <UserName>] [-w <Password>] [-o {raw | lpr}] 

[-h <Hostaddress>] [-q <QueueName>] [-n <PortNumber>] -m{e | d} 

[-i <SNMPIndex>] [-y <CommunityName>] -2{e | -d}`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`prnqctl`, [
            new Parameter_js_2.Parameter(`-z`, `pauses printing on the printer specified with the -p parameter.`, ``),
            new Parameter_js_2.Parameter(`-m`, `Resumes printing on the printer specified with the -p parameter.`, ``),
            new Parameter_js_2.Parameter(`-e`, `prints a test page on the printer specified with the -p parameter.`, ``),
            new Parameter_js_2.Parameter(`-x`, `Cancels all print jobs on the printer specified with the -p parameter.`, ``),
            new Parameter_js_2.Parameter(`-s <ServerName>`, `Specifies the name of the remote computer that hosts the printer that you want to manage. If you do not specify a computer, the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`-p <printerName>`, `Specifies the name of the printer that you want to manage. Required.`, ``),
            new Parameter_js_2.Parameter(`-u <UserName> -w <Password>`, `Specifies an account with permissions to connect to the computer that hosts the printer that you want to manage. All members of the target computer's local Administrators group have these permissions, but the permissions can also be granted to other users. If you do not specify an account, you must be logged on under an account with these permissions for the command to work.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Prints a test page, pauses or resumes a printer, and clears a printer queue.  `, `cscript Prnqctl {-z | -m | -e | -x | -?} [-s <ServerName>]   

[-p <printerName>] [-u <UserName>] [-w <Password>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`prompt`, [
            new Parameter_js_2.Parameter(`<Text>`, `Specifies the text and information that you want to include in the command prompt.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Changes the Cmd.exe command prompt. If used without parameters, prompt resets the command prompt to the default setting, which is the current drive letter and directory followed by the greater than symbol (>).`, `prompt [<Text>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pubprn`, [
            new Parameter_js_2.Parameter(`<ServerName>`, `Specifies the name of the Windows server that hosts the printer that you want to publish. If you do not specify a computer, the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`<UNCprinterpath>`, `The Universal Naming Convention (UNC) path to the shared printer that you want to publish.`, ``),
            new Parameter_js_2.Parameter(`"LDAP://CN=<Container>,DC=<Container>"`, `Specifies the path to the container in active directory Domain Services where you want to publish the printer.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Publishes a printer to the active directory Domain Services.`, `cscript pubprn {<ServerName> | <UNCprinterpath>} 

"LDAP://CN=<Container>,DC=<Container>"`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pushd`, [
            new Parameter_js_2.Parameter(`<Path>`, `Specifies the directory to make the current directory. This command supports relative paths.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Stores the current directory for use by the popd command, and then changes to the specified directory.`, `pushd [<Path>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`pushprinterconnections`, [
            new Parameter_js_2.Parameter(`<-log>`, `Writes a per user debug log file to %temp, or writes a per machine debug log to %windir%temp.`, ``),
            new Parameter_js_2.Parameter(`<-?>`, `Displays Help at the command prompt.`, ``),
        ], `Reads Deployed Printer Connection settings from Group Policy and deploys/removes printer connections as needed.`, `pushprinterconnections <-log> <-?>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`qappsrv`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `Displays a list of all Remote Desktop Session Host (RD Session Host) servers on the network.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`qprocess`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `Displays information about processes that are running on a Remote Desktop Session Host (RD Session Host) server.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`query`, [
            new Parameter_js_2.Parameter(`[query process](query-process.md)`, `Displays information about processes that are running on an rd Session Host server.`, ``),
            new Parameter_js_2.Parameter(`[query session](query-session.md)`, `Displays information about sessions on an rd Session Host server.`, ``),
            new Parameter_js_2.Parameter(`[query termserver](query-termserver.md)`, `Displays a list of all rd Session Host servers on the network.`, ``),
            new Parameter_js_2.Parameter(`[query user](query-user.md)`, `Displays information about user sessions on an rd Session Host server.`, ``),
        ], `Displays information about processes, sessions, and Remote Desktop Session Host (RD Session Host) servers.`, `query process

query session

query termserver

query user`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`quser`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
        ], `Displays information about user sessions on a Remote Desktop Session Host (rd Session Host) server.  `, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`qwinsta`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `Displays information about sessions on a Remote Desktop Session Host (RD Session Host) server.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rcp`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Copies files between computers. This command has been deprecated. You can install the Subsystem for UNIX-based Applications using the Add Features Wizard. For more information, see [Windows Server 2008 UNIX Interoperability Components](https://go.microsoft.com/fwlink/?LinkId=191835) at the Microsoft Web site. After installation, you can then open a C Shell or Korn Shell command window and run rcp. For more information, type man rcp at the C Shell or Korn Shell prompt.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rd`, [
            new Parameter_js_2.Parameter(`[<Drive>:]<Path>`, `Specifies the location and the name of the directory that you want to delete. *Path* is required.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Deletes a directory tree (the specified directory and all its subdirectories, including all files).`, ``),
            new Parameter_js_2.Parameter(`/q`, `Specifies quiet mode. Does not prompt for confirmation when deleting a directory tree. (Note that /q works only if /s is specified.)`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Deletes a directory. This command is the same as the rmdir command.`, `rd [<Drive>:]<Path> [/s [/q]]

rmdir [<Drive>:]<Path> [/s [/q]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rdpsign`, [
            new Parameter_js_2.Parameter(`/sha1 <hash>`, `Specifies the thumbprint, which is the Secure Hash Algorithm 1 (SHA1) hash of the signing certificate that is included in the certificate store.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Quiet mode. No output when the command succeeds and minimal output if the command fails.`, ``),
            new Parameter_js_2.Parameter(`/v`, `verbose mode. Displays all warnings, messages, and status.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Tests the signing and output results without actually replacing any of the input files.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables you to digitally sign a Remote Desktop Protocol (.rdp) file.`, `rdpsign /sha1 <hash> [/q | /v |] [/l] <file_name.rdp>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`recover`, [
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]<FileName>`, `Specifies the location and name of the file that you want to recover. *FileName* is required.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Recovers readable information from a bad or defective disk.`, `recover [<Drive>:][<Path>]<FileName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`reg`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Performs operations on registry subkey information and values in registry entries. The reg commands include:`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`regini`, [
            new Parameter_js_2.Parameter(`-h <hivefile hiveroot>`, `Specifies the local registry hive to modify. You must specify the name of the hive file and the root of the hive in the format hivefile hiveroot.`, ``),
            new Parameter_js_2.Parameter(`-i <n>`, `Specifies the level of indentation to use to indicate the tree structure of registry keys in the command output. The Regdmp.exe tool (which gets a registry keyâ€™s current permissions in binary format) uses indentation in multiples of four, so the default value is 4.`, ``),
            new Parameter_js_2.Parameter(`-o <outputwidth>`, `Specifies the width of the command output, in characters. If the output will appear in the command window, the default value is the width of the window. If the output is directed to a file, the default value is 240 characters.`, ``),
            new Parameter_js_2.Parameter(`-b`, `Specifies that Regini.exe output is backward compatible with previous versions of Regini.exe. See the Remarks section for details.`, ``),
            new Parameter_js_2.Parameter(`textfiles`, `Specifies the name of one or more text files that contain registry data. Any number of ANSI or Unicode text files can be listed.`, ``),
        ], `Modifies the registry from the command line or a script, and applies changes that were preset in one or more text files. You can create, modify, or delete registry keys, in addition to modifying the permissions on the registry keys.`, `regini [-m \\machinename | -h hivefile hiveroot][-i n] [-o outputWidth][-b] textFiles...`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`regsvr32`, [
            new Parameter_js_2.Parameter(`/u`, `Unregisters server.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Runs Regsvr32 without displaying messages.`, ``),
            new Parameter_js_2.Parameter(`/n`, `Runs Regsvr32 without calling DllRegisterServer. (Requires the /i parameter.)`, ``),
            new Parameter_js_2.Parameter(`/i:<cmdline>`, `Passes an optional command-line string (*cmdline*) to DllInstall. If you use this parameter in conjunction with the /u parameter, it calls DllUninstall.`, ``),
            new Parameter_js_2.Parameter(`<DllName>`, `The name of the .dll file that will be registered.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Registers .dll files as command components in the registry.`, `regsvr32 [/u] [/s] [/n] [/i[:cmdline]] <DllName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`relog`, [
            new Parameter_js_2.Parameter(`*FileName* [*FileName ...*]`, `Specifies the pathname of an existing performance counter log. You can specify multiple input files.`, ``),
            new Parameter_js_2.Parameter(`-a `, `Appends output file instead of overwriting. This option does not apply to SQL format where the default is always to append.  `, ``),
            new Parameter_js_2.Parameter(`-c *path* [*path ...*]`, `Specifies the performance counter path to log. To specify multiple counter paths, separate them with a space and enclose the counter paths in quotation marks (for example, "*Counterpath1* *Counterpath2*")`, ``),
            new Parameter_js_2.Parameter(`-cf *FileName*`, `Specifies the pathname of the text file that lists the performance counters to be included in a relog file. Use this option to list counter paths in an input file, one per line. Default setting is all counters in the original log file are relogged.`, ``),
            new Parameter_js_2.Parameter(`-f {bin| csv|tsv|SQL}`, `Specifies the pathname of the output file format. The default format is bin. For a SQL database, the output file specifies the *DSN!CounterLog*. You can specify the database location by using the ODBC manager to configure the DSN (Database System Name).  `, ``),
            new Parameter_js_2.Parameter(`-t *Value*`, `Specifies sample intervals in "*N*" records. Includes every nth data point in the relog file. Default is every data point.`, ``),
            new Parameter_js_2.Parameter(`-o {*OutputFile* | *"SQL:DSN!Counter_Log*} where DSN is a ODMC DSN defined on the system.`, `Specifies the pathname of the output file or SQL database where the counters will be written. <br>Note: For the 64-bit and 32-bit versions of Relog.exe, you need to define a DSN in the ODBC Data Source (64-bit and 32-bit respectively)`, ``),
            new Parameter_js_2.Parameter(`-b <*M*/*D*/*YYYY*> [[*HH*:]*MM*:]*SS*`, `Specifies begin time for copying first record from the input file. date and time must be in this exact format *M*/*D*/*YYYYHH*:*MM*:*SS*.`, ``),
            new Parameter_js_2.Parameter(`-e <*M*/*D*/*YYYY*> [[*HH*:]*MM*:]*SS* `, `Specifies end time for copying last record from the input file. date and time must be in this exact format *M*/*D*/*YYYYHH*:*MM*:*SS*.`, ``),
            new Parameter_js_2.Parameter(`-config {*FileName* | *i*}`, `Specifies the pathname of the settings file that contains command-line parameters. Use *-i* in the configuration file as a placeholder for a list of input files that can be placed on the command line. On the command line, however, you do not need to use *i*. You can also use wildcards such as *.blg to specify many input file names.`, ``),
            new Parameter_js_2.Parameter(`-q`, `Displays the performance counters and time ranges of log files specified in the input file.`, ``),
            new Parameter_js_2.Parameter(`-y`, `Bypasses prompting by answering "yes" to all questions.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Extracts performance counters from performance counter logs into other formats, such as text-TSV (for tab-delimited text), text-CSV (for comma-delimited text), binary-BIN, or SQL.   `, `relog [<FileName> [<FileName> ...]] [/a] [/c <path> [<path> ...]] [/cf <FileName>] [/f  {bin|csv|tsv|SQL}] [/t <Value>] [/o {OutputFile|DSN!CounterLog}] [/b <M/D/YYYY> [[<HH>:] <MM>:] <SS>] [/e <M/D/YYYY> [[<HH>:] <MM>:] <SS>] [/config {<FileName>|i}] [/q]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rem`, [
            new Parameter_js_2.Parameter(`<Comment>`, `Specifies a string of characters to include as a comment.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Records comments (remarks) in a batch file or CONFIG.SYS. If no comment is specified, rem adds vertical spacing.`, `rem [<Comment>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ren`, [
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]<FileName1>`, `Specifies the location and name of the file or set of files you want to rename. *FileName1* can include wildcard characters (* and ?).`, ``),
            new Parameter_js_2.Parameter(`<FileName2>`, `Specifies the new name for the file. You can use wildcard characters to specify new names for multiple files.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Renames files or directories. This command is the same as the rename command.`, `ren [<Drive>:][<Path>]<FileName1> <FileName2>

rename [<Drive>:][<Path>]<FileName1> <FileName2>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rename`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `This is the same as the ren command.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`repair-bde`, [
            new Parameter_js_2.Parameter(`<InputVolume>`, `Identifies the drive letter of the BitLocker-encrypted drive that you want to repair. The drive letter must include a colon; for example: C:.`, ``),
            new Parameter_js_2.Parameter(`<OutputVolumeorImage>`, `Identifies the drive on which to store the content of the repaired drive. All information on the output drive will be overwritten.`, ``),
            new Parameter_js_2.Parameter(`-rk`, `Identifies the location of the recovery key that should be used to unlock the volume. This command may also be specified as -recoverykey.`, ``),
            new Parameter_js_2.Parameter(`-rp`, `Identifies the numerical recovery password that should be used to unlock the volume. This command may also be specified as -recoverypassword.`, ``),
            new Parameter_js_2.Parameter(`-pw`, `Identifies the password that should be used to unlock the volume. This command may also be specified as -password`, ``),
            new Parameter_js_2.Parameter(`-kp`, `Identifies the recovery key package that can be used to unlock the volume. This command may also be specified as -keypackage.`, ``),
            new Parameter_js_2.Parameter(`-lf`, `Specifies the path to the file that will store Repair-bde error, warning, and information messages. This command may also be specified as -logfile.`, ``),
            new Parameter_js_2.Parameter(`-f`, `Forces a volume to be dismounted even if it cannot be locked. This command may also be specified as -force.`, ``),
            new Parameter_js_2.Parameter(`-? or /?`, `Displays Help at the command prompt.`, ``),
        ], `Accesses encrypted data on a severely damaged hard disk if the drive was encrypted by using BitLocker. Repair-bde can reconstruct critical parts of the drive and salvage recoverable data as long as a valid recovery password or recovery key is used to decrypt the data. If the BitLocker metadata data on the drive has become corrupt, you must be able to supply a backup key package in addition to the recovery password or recovery key. This key package is backed up in Active Directory Domain Services (AD DS) if you used the default setting for AD DS backup. With this key package and either the recovery password or recovery key, you can decrypt portions of a BitLocker-protected drive if the disk is corrupted. Each key package will work only for a drive that has the corresponding drive identifier. You can use the [BitLocker Recovery Password Viewer for Active Directory](https://technet.microsoft.com/library/dd875531(v=ws.10).aspx) to obtain this key package from AD DS.`, `repair-bde <InputVolume> <OutputVolumeorImage> [-rk] [â€“rp] [-pw] [â€“kp] [â€“lf] [-f] [{-?|/?}]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`replace`, [
            new Parameter_js_2.Parameter(`[<Drive1>:][<Path1>]<FileName>`, `Specifies the location and name of the source file or set of files. *FileName* is required, and can include wildcard characters (* and ?).`, ``),
            new Parameter_js_2.Parameter(`[<Drive2>:][<Path2>]`, `Specifies the location of the destination file. You cannot specify a file name for files you replace. If you do not specify a drive or path, replace uses the current drive and directory as the destination.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Adds new files to the destination directory instead of replacing existing files. You cannot use this command-line option with the /s or /u command-line option.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Prompts you for confirmation before replacing a destination file or adding a source file.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Replaces Read-only and unprotected files. If you attempt to replace a Read-only file, but you do not specify /r, an error results and stops the replacement operation.`, ``),
            new Parameter_js_2.Parameter(`/w`, `Waits for you to insert a disk before the search for source files begins. If you do not specify /w, replace begins replacing or adding files immediately after you press ENTER.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Searches all subdirectories in the destination directory and replaces matching files. You cannot use /s with the /a command-line option. The replace command does not search subdirectories that are specified in *Path1*.`, ``),
            new Parameter_js_2.Parameter(`/u`, `Replaces only those files on the destination directory that are older than those in the source directory. You cannot use /u with the /a command-line option.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Replaces files. If used with the /a option, replace adds new files to a directory instead of replacing existing files.`, `replace [<Drive1>:][<Path1>]<FileName> [<Drive2>:][<Path2>] [/a] [/p] [/r] [/w] 

replace [<Drive1>:][<Path1>]<FileName> [<Drive2>:][<Path2>] [/p] [/r] [/s] [/w] [/u]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rexec`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Rexec is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`risetup`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `The risetup command is deprecated in Windows ServerÂ® 2008 and Windows Server 2008 R2.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rmdir`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `This command is the same as the rd command. See [Rd](rd.md) for syntax and parameters.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`robocopy`, [
            new Parameter_js_2.Parameter(`<Source>`, `Specifies the path to the source directory.`, ``),
            new Parameter_js_2.Parameter(`<Destination>`, `Specifies the path to the destination directory.`, ``),
            new Parameter_js_2.Parameter(`<File>`, `Specifies the file or files to be copied. You can use wildcard characters (* or ?), if you want. If the File parameter is not specified, *.* is used as the default value.`, ``),
            new Parameter_js_2.Parameter(`<Options>`, `Specifies options to be used with the robocopy command.`, ``),
        ], `Copies file data.`, `robocopy <Source> <Destination> [<File>[ ...]] [<Options>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`route_ws2008`, [
            new Parameter_js_2.Parameter(`/f`, `Clears the routing table of all entries that are not host routes (routes with a netmask of 255.255.255.255), the loopback network route (routes with a destination of 127.0.0.0 and a netmask of 255.0.0.0), or a multicast route (routes with a destination of 224.0.0.0 and a netmask of 240.0.0.0). If this is used in conjunction with one of the commands (such as add, change, or delete), the table is cleared prior to running the command.`, ``),
            new Parameter_js_2.Parameter(`/p`, `When used with the add command, the specified route is added to the registry and is used to initialize the IP routing table whenever the TCP/IP protocol is started. By default, added routes are not preserved when the TCP/IP protocol is started. When used with the print command, the list of persistent routes is displayed. This parameter is ignored for all other commands. Persistent routes are stored in the registry location HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesTcpipParametersPersistentRoutes.`, ``),
            new Parameter_js_2.Parameter(`<Command>`, `Specifies the command you want to run. The following table lists valid commands:<br /><br />-   add: adds a route.<br />-   change: modifies an existing route.<br />-   delete: deletes a route or routes.<br />-   print: prints a route or routes.`, ``),
            new Parameter_js_2.Parameter(`<Destination>`, `Specifies the network destination of the route. The destination can be an IP network address (where the host bits of the network address are set to 0), an IP address for a host route, or 0.0.0.0 for the default route.`, ``),
            new Parameter_js_2.Parameter(`mask <Netmask>`, `Specifies the network destination of the route. The destination can be an IP network address (where the host bits of the network address are set to 0), an IP address for a host route, or 0.0.0.0 for the default route.`, ``),
            new Parameter_js_2.Parameter(`<Gateway>`, `Specifies the forwarding or next hop IP address over which the set of addresses defined by the network destination and subnet mask are reachable. For locally attached subnet routes, the gateway address is the IP address assigned to the interface that is attached to the subnet. For remote routes, available across one or more routers, the gateway address is a directly reachable IP address that is assigned to a neighboring router.`, ``),
            new Parameter_js_2.Parameter(`metric <Metric>`, `Specifies an integer cost metric (ranging from 1 to 9999) for the route, which is used when choosing among multiple routes in the routing table that most closely match the destination address of a packet being forwarded. The route with the lowest metric is chosen. The metric can reflect the number of hops, the speed of the path, path reliability, path throughput, or administrative properties.`, ``),
            new Parameter_js_2.Parameter(`if <Interface>`, `Specifies the interface index for the interface over which the destination is reachable. For a list of interfaces and their corresponding interface indexes, use the display of the route print command. You can use either decimal or hexadecimal values for the interface index. For hexadecimal values, precede the hexadecimal number with 0x. When the if parameter is omitted, the interface is determined from the gateway address.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays and modifies the entries in the local IP routing table. Used without parameters, route displays help.   `, `route [/f] [/p] [<Command> [<Destination>] [mask <Netmask>] [<Gateway>] [metric <Metric>]] [if <Interface>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rpcinfo`, [
            new Parameter_js_2.Parameter(`/p [<Node>]`, `lists all programs registered with the port mapper on the specified host. If you do not specify a node (computer) name, the program queries the port mapper on the local host.`, ``),
            new Parameter_js_2.Parameter(`/b <Program version>`, `Requests a response from all network nodes that have the specified program and version registered with the port mapper. You must specify both a program name or number and a version number.`, ``),
            new Parameter_js_2.Parameter(`/t <Node Program> [<version>]`, `Uses the TCP transport protocol to call the specified program. You must specify both a node (computer) name and a program name. If you do not specify a version, the program calls all versions.`, ``),
            new Parameter_js_2.Parameter(`/u <Node Program> [<version>]`, `Uses the UDP transport protocol to call the specified program. You must specify both a node (computer) name and a program name. If you do not specify a version, the program calls all versions.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Lists programs on remote computers. The rpcinfo command-line utility makes a remote procedure call (RPC) to an RPC server and reports what it finds. `, `rpcinfo [/p [<Node>]] [/b <Program version>] [/t <Node Program> [<version>]] [/u <Node Program> [<version>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rpcping`, [
            new Parameter_js_2.Parameter(`/t <protseq>`, `Specifies the protocol sequence to use. Can be one of the standard RPC protocol sequences, for example: ncacn_ip_tcp, ncacn_np, or ncacn_http.<br /><br />If not specified, default is ncacn_ip_tcp.`, ``),
            new Parameter_js_2.Parameter(`/s <server_addr>`, `Specifies the server address. If not specified, the local machine will be pinged.`, ``),
            new Parameter_js_2.Parameter(`/e <endpoint>`, `Specifies the endpoint to ping. If none is specified, the endpoint mapper on the target machine will be pinged.<br /><br />This option is mutually exclusive with the interface (/f) option.`, ``),
            new Parameter_js_2.Parameter(`/o <binding_options>`, `Specifies the binding options for the RPC ping.`, ``),
            new Parameter_js_2.Parameter(`/f <interface UUID>[,Majorver]`, `Specifies the interface to ping. This option is mutually exclusive with the endpoint option. The interface is specified as a UUID.<br /><br />if the *Majorver* is not specified, version 1 of the interface will be sought.<br /><br />When interface is specified, rpcping will query the endpoint mapper on the target machine to retrieve the endpoint for the specified interface. The endpoint mapper will be queried using the options specified in the command line.`, ``),
            new Parameter_js_2.Parameter(`/O <Object UUID>`, `Specifies the object UUID if the interface registered one.`, ``),
            new Parameter_js_2.Parameter(`/i <#_iterations>`, `Specifies the number of calls to make. The default is 1. This option is useful for measuring connection latency if multiple iterations are specified.`, ``),
            new Parameter_js_2.Parameter(`/u <security_package_id>`, `Specifies the security package (security provider) RPC will use to make the call. The security package is identified as a number or a name. If a number is used it is the same number as in the RpcBindingSetAuthInfoEx API. The list below shows the names and numbers. Names are not case sensitive:<br /><br />-   Negotiate / 9 or one of nego, snego or negotiate<br />-   NTLM / 10 or NTLM<br />-   SChannel / 14 or SChannel<br />-   Kerberos / 16 or Kerberos<br />-   Kernel / 20 or Kernel<br />    if you specify this option, you must specify authentication level other than none. There is no default for this option. If it is not specified, RPC will not use security for the ping.`, ``),
            new Parameter_js_2.Parameter(`/a <authn_level>`, `Specifies the authentication level to use. Possible values are:<br /><br />-   connect<br />-   call<br />-   pkt<br />-   integrity<br />-   privacy<br /><br />if this option is specified, the security package ID (/u) must also be specified. There is no default for this option.<br /><br />if this option is not specified, RPC will not use security for the ping.`, ``),
            new Parameter_js_2.Parameter(`/N <server_princ_name>`, `Specifies a server principal name.<br /><br />This field can be used only when authentication level and security package are selected.`, ``),
            new Parameter_js_2.Parameter(`/I <auth_identity>`, `Allows you to specify alternative identity to connect to the server. The identity is in the form user,domain,password. If the user name, domain, or password have special characters that can be interpreted by the shell, enclose the identity in double quotes. You can specify * instead of the password and RPC will prompt you to enter the password without echoing it on the screen. If this field is not specified, the identity of the logged on user will be used.<br /><br />This field can be used only when authentication level and security package are selected.`, ``),
            new Parameter_js_2.Parameter(`/C <capabilities>`, `Specifies a hexadecimal bitmask of flags. This field can be used only when authentication level and security package are selected.`, ``),
            new Parameter_js_2.Parameter(`/T <identity_tracking>`, `Specifies static or dynamic. If not specified, dynamic is the default.<br /><br />This field can be used only when authentication level and security package are selected.`, ``),
            new Parameter_js_2.Parameter(`/M <impersonation_type>`, `Specifies anonymous, identify, impersonate or delegate. Default is impersonate.<br /><br />This field can be used only when authentication level and security package are selected.`, ``),
            new Parameter_js_2.Parameter(`/S <server_sid>`, `Specifies the expected SID of the server.<br /><br />This field can be used only when authentication level and security package are selected.`, ``),
            new Parameter_js_2.Parameter(`/P <proxy_auth_identity>`, `Specifies the identity to authenticate with to the RPC/HTTP proxy. Has the same format as for the /I option. You must specify security package (/u), authentication level (/a), and authentication schemes (/H) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/F <RPCHTTP_flags>`, `Specifies the flags to pass for RPC/HTTP front end authentication. The flags may be specified as numbers or names The currently recognized flags are:<br /><br />-   Use SSL / 1 or ssl or use_ssl<br />-   Use first auth scheme / 2 or first or use_first<br /><br />You must specify security package (/u) and authentication level (/a) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/H <RPC/HTTP_authn_schemes>`, `Specifies the authentication schemes to use for RPC/HTTP front end authentication. This option is a list of numerical values or names separated by comma. Example: Basic,NTLM. Recognized values are (names are not case sensitive):<br /><br />-   Basic / 1 or Basic<br />-   NTLM / 2 or NTLM<br />-   Certificate / 65536 or Cert<br /><br />You must specify security package (/u) and authentication level (/a) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/B <server_certificate_subject>`, `Specifies the server certificate subject. You must use SSL for this option to work.<br /><br />You must specify security package (/u) and authentication level (/a) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Retrieves the server certificate subject from the certificate sent by the server and prints it to a screen or a log file. Valid only when the Proxy echo only option (/E) and the use SSL options are specified.<br /><br />You must specify security package (/u) and authentication level (/a) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/R`, `Specifies the HTTP proxy. If *none*, the RPC proxy is used. The value *default* means to use the IE settings in your client machine. Any other value will be treated as the explicit HTTP proxy. If you do not specify this flag, the default value is assumed, that is, the IE settings are checked. This flag is valid only when the /E (echo Only) flag is enabled.`, ``),
            new Parameter_js_2.Parameter(`/E`, `Restricts the ping to the RPC/HTTP proxy only. The ping does not reach the server. Useful when trying to establish whether the RPC/HTTP proxy is reachable. To specify an HTTP proxy, use the /R flag. If an HTTP proxy is specified in the /o flag, this option will be ignored.<br /><br />You must specify security package (/u) and authentication level (/a) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Specifies quiet mode. Does not issue any prompts except for passwords. Assumes *Y* response to all queries. Use this option with care.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Use smart card certificate. rpcping will prompt user to choose smart card.`, ``),
            new Parameter_js_2.Parameter(`/A`, `Specifies the identity with which to authenticate to the HTTP proxy. Has the same format as for the /I option.<br /><br />You must specify authentication schemes (/U), security package (/u) and authentication level (/a) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/U`, `Specifies the authentication schemes to use for HTTP proxy authentication. This option is a list of numerical values or names separated by comma. Example: Basic,NTLM. Recognized values are (names are not case sensitive):<br /><br />-   Basic / 1 or Basic<br />-   NTLM / 2 or NTLM<br /><br />You must specify security package (/u) and authentication level (/a) in order to use this option.`, ``),
            new Parameter_js_2.Parameter(`/r`, `if multiple iterations are specified, this option will make rpcping display current execution statistics periodically instead after the last call. The report interval is given in seconds. Default is 15.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Tells rpcping how verbose to make the output. Default value is 1. 2 and 3 provide more output from rpcping.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Launches RPC network diagnostic UI.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Specifies to prompt for credentials if authentication fails.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Confirms the RPC connectivity between the computer running Microsoft Exchange Server and any of the supported Microsoft Exchange Client workstations on the network. This utility can be used to check if the Microsoft Exchange Server services are responding to RPC requests from the client workstations via the network. `, `rpcping [/t <protseq>] [/s <server_addr>] [/e <endpoint>

        |/f <interface UUID>[,Majorver]] [/O <Interface Object UUID]

        [/i <#_iterations>] [/u <security_package_id>] [/a <authn_level>]

        [/N <server_princ_name>] [/I <auth_identity>] [/C <capabilities>]

        [/T <identity_tracking>] [/M <impersonation_type>]

        [/S <server_sid>] [/P <proxy_auth_identity>] [/F <RPCHTTP_flags>]

        [/H <RPC/HTTP_authn_schemes>] [/o <binding_options>]

        [/B <server_certificate_subject>] [/b] [/E] [/q] [/c]

        [/A <http_proxy_auth_identity>] [/U <HTTP_proxy_authn_schemes>]

        [/r <report_results_interval>] [/v <verbose_level>] [/d]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rsh`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Runs commands on remote computers running the RSH service or daemon. This command has been deprecated. You can install the Subsystem for UNIX-based Applications using the Add Features Wizard. For more information, see [Windows Server 2008 UNIX Interoperability Components](https://go.microsoft.com/fwlink/?LinkId=191835) at the Microsoft Web site. After installation, you can then open a C Shell or Korn Shell command window and run rsh. For more information, type man rsh at the C Shell or Korn Shell prompt.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rundll32`, [
            new Parameter_js_2.Parameter(`[Rundll32 printui.dll,PrintUIEntry](rundll32-printui.md)`, `Displays the printer user interface`, ``),
        ], `Loads and runs 32-bit dynamic-link libraries (DLLs). There are no configurable settings for Rundll32. Help information is provided for a specific DLL you run with the rundll32 command.`, `Rundll32 <DLLname>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`rwinsta`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `Enables you to reset (delete) a session on a Remote Desktop Session Host (rd Session Host) server.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`schtasks`, [
            new Parameter_js_2.Parameter(`MINUTE, HOURLY, DAILY, WEEKLY, MONTHLY`, `Specifies the time unit for the schedule.`, ``),
            new Parameter_js_2.Parameter(`ONCE`, `The task runs once at a specified date and time.`, ``),
            new Parameter_js_2.Parameter(`ONSTART`, `The task runs every time the system starts. You can specify a start date, or run the task the next time the system starts.`, ``),
            new Parameter_js_2.Parameter(`ONLOGON`, `The task runs whenever a user (any user) logs on. You can specify a date, or run the task the next time the user logs on.`, ``),
            new Parameter_js_2.Parameter(`ONIDLE`, `The task runs whenever the system is idle for a specified period of time. You can specify a date, or run the task the next time the system is idle.`, ``),
        ], `Schedules commands and programs to run periodically or at a specific time. Adds and removes tasks from the schedule, starts and stops tasks on demand, and displays and changes scheduled tasks.`, `ERROR: The data is invalid.`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Scwcmd`, [
            new Parameter_js_2.Parameter(`/analyze`, `Determines whether a computer is in compliance with a policy.</br>See [Scwcmd: analyze](scwcmd-analyze.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/configure`, `Applies an SCW-generated security policy to a computer.</br>See [Scwcmd: configure](scwcmd-configure.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/register`, `Extends or customizes the SCW Security Configuration Database by registering a Security Configuration Database file that contains role, task, service, or port definitions.</br>See [Scwcmd: register](scwcmd-register.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/rollback`, `Applies the most recent rollback policy available, and then deletes that rollback policy.</br>See [Scwcmd: rollback](scwcmd-rollback.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/transform`, `Transforms a security policy file generated by using SCW into a new Group Policy object (GPO) in Active Directory Domain Services.</br>See [Scwcmd: transform](scwcmd-transform.md) syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/view`, `Renders an .xml file by using a specified .xsl transform.</br>See [Scwcmd: view](scwcmd-view.md) for syntax and options.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `The Scwcmd.exe command-line tool included with the Security Configuration Wizard (SCW) can be used to perform the following tasks:`, `scwcmd <command> [<subcommand>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`secedit`, [
            new Parameter_js_2.Parameter(`[Secedit:analyze](secedit-analyze.md)`, `Allows you to analyze current systems settings against baseline settings that are stored in a database.  The analysis results are stored in a separate area of the database and can be viewed in the Security Configuration and Analysis snap-in.`, ``),
            new Parameter_js_2.Parameter(`[Secedit:configure](secedit-configure.md)`, `Allows you to configure a system with security settings stored in a database.`, ``),
            new Parameter_js_2.Parameter(`[Secedit:export](secedit-export.md)`, `Allows you to export security settings stored in a database.`, ``),
            new Parameter_js_2.Parameter(`[Secedit:generaterollback](secedit-generaterollback.md)`, `Allows you to generate a rollback template with respect to a configuration template.`, ``),
            new Parameter_js_2.Parameter(`[Secedit:import](secedit-import.md)`, `Allows you to import a security template into a database so that the settings specified in the template can be applied to a system or analyzed against a system.`, ``),
            new Parameter_js_2.Parameter(`[Secedit:validate](secedit-validate.md)`, `Allows you to validate the syntax of a security template.`, ``),
        ], `Configures and analyzes system security by comparing your current configuration to specified security templates.`, `secedit 

[/analyze /db <database file name> /cfg <configuration file name> [/overwrite] /log <log file name> [/quiet]]

[/configure /db <database file name> [/cfg <configuration filename>] [/overwrite] [/areas [securitypolicy | group_mgmt | user_rights | regkeys | filestore | services]] [/log <log file name>] [/quiet]]

[/export /db <database file name> [/mergedpolicy] /cfg <configuration file name> [/areas [securitypolicy | group_mgmt | user_rights | regkeys | filestore | services]] [/log <log file name>]]

[/generaterollback /db <database file name> /cfg <configuration file name> /rbk <rollback file name> [/log <log file name>] [/quiet]]

[/import /db <database file name> /cfg <configuration file name> [/overwrite] [/areas [securitypolicy | group_mgmt | user_rights | regkeys | filestore | services]] [/log <log file name>] [/quiet]]

[/validate <configuration file name>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`serverceipoptin`, [
            new Parameter_js_2.Parameter(`/query`, `verifies the current setting.`, ``),
            new Parameter_js_2.Parameter(`/enable`, `Enables participation.`, ``),
            new Parameter_js_2.Parameter(`/disable`, `Disables participation.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Allows you to participate in the Customer Experience Improvement Program (CEIP).`, `serverceipoptin [/query] [/enable] [/disable]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Servermanagercmd`, [
            new Parameter_js_2.Parameter(`-query [[[<Drive>:]<path>]<*query.xml*>]`, `Displays a list of all roles, role services, and features installed and available for installation on the server. You can also use the short form of this parameter, -q. If you want the query results saved to an XML file, specify an XML file to replace *query.xml*.`, ``),
            new Parameter_js_2.Parameter(`-inputpath  <[[<Drive>:]<path>]*answer.xml*>`, `Installs or removes the roles, role services, and features specified in an XML answer file represented by *answer.xml*. You can also use the short form of this parameter, -p.`, ``),
            new Parameter_js_2.Parameter(`-install <*Id*>`, `Installs the role, role service, or feature specified by *Id*. The identifiers are case-insensitive. Multiple roles, role services, and features must be separated by spaces. The following optional parameters are used with the -install parameter.<br /><br />-   -setting <*SettingName*>=<*SettingValue*>   Specifies required settings for the installation.<br />-   -allSubFeatures Specifies the installation of all subordinate services and features along with the parent role, role service, or feature named in the *Id* value. Note:     Some role containers do not have a command line identifier to allow installation of all role services. This is the case when role services cannot be installed in the same instance of the Server Manager command. For example, the Federation Service role service of active directory Federation Services and the Federation Service Proxy role service cannot be installed by using the same Server Manager command instance.<br />-   -resultpath <*result.xml>   Saves installation results to an XML file represented by *result.xml*. You can also use the short form of this parameter, -r. Note:     You cannot run servermanagercmd with both the -resultpath parameter and the -whatif parameter specified.<br />-   -restart Restarts the computer automatically when installation is complete (if restarting is required by the roles or features installed).<br />-   -whatif Displays any operations specified for the -install parameter. You can also use the short form of the -whatif parameter, -w. You cannot run servermanagercmd with both the -resultpath parameter and the -whatif parameter specified.<br />-   -logpath <[[<Drive>:]<path>]*log.txt*>   Specifies a name and location for the log file, other than the default, %windir%tempservermanager.log.`, ``),
            new Parameter_js_2.Parameter(`-remove <*Id*>`, `Removes the role, role service, or feature specified by *Id*. The identifiers are case-insensitive. Multiple roles, role services, and features must be separated by spaces. The following optional parameters are used with the -remove parameter.<br /><br />-   -resultpath <[[<Drive>:]<path>]*result.xml*>   Saves removal results to an XML file represented by *result.xml*. You can also use the short form of this parameter, -r. Note:     You cannot run servermanagercmd with both the -resultpath parameter and the -whatif parameter specified.<br />-   -restart Restarts the computer automatically when removal is complete (if restarting is required by remaining roles or features).<br />-   -whatif Displays any operations specified for the -remove parameter. You can also use the short form of the -whatif parameter, -w. You cannot run servermanagercmd with both the -resultpath parameter and the -whatif parameter specified.<br />-   -logpath<[[<Drive>:]<path>]*log.txt*>   Specifies a name and location for the log file, other than the default, %windir%tempservermanager.log.`, ``),
            new Parameter_js_2.Parameter(`-help`, `Displays help in the Command prompt window. You can also use the short form, -?.`, ``),
            new Parameter_js_2.Parameter(`-version`, `Displays the Server Manager version number. You can also use the short form, -v.`, ``),
        ], `Installs and removes roles, role services, and features. Also displays the list of all roles, role services, and features available, and shows which are installed on this computer. For additional information about the roles, role services, and features that you can specify by using this tool, see the [Server Manager help](https://go.microsoft.com/fwlink/?LinkID=137387). For examples of how to use this command, see [Examples](#BKMK_examples).`, `servermanagercmd -query [[[<Drive>:]<path>]<query.xml>] [-logpath   [[<Drive>:]<path>]<log.txt>]

servermanagercmd -inputpath  [[<Drive>:]<path>]<answer.xml> [-resultpath <result.xml> [-restart] | -whatif] [-logpath [[<Drive>:]<path>]<log.txt>]

servermanagercmd -install <Id> [-allSubFeatures] [-resultpath   [[<Drive>:]<path>]<result.xml> [-restart] | -whatif] [-logpath   [[<Drive>:]<path>]<log.txt>]

servermanagercmd -remove <Id> [-resultpath    <result.xml> [-restart] | -whatif] [-logpath  [[<Drive>:]<path>]<log.txt>]

servermanagercmd [-help | -?]

servermanagercmd -version`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`set`, [
            new Parameter_js_2.Parameter(`<Variable>`, `Specifies the environment variable to set or modify.`, ``),
            new Parameter_js_2.Parameter(`<String>`, `Specifies the string to associate with the specified environment variable.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Sets the value of *Variable* to a line of input entered by the user.`, ``),
            new Parameter_js_2.Parameter(`<PromptString>`, `Optional. Specifies a message to prompt the user for input. This parameter is used with the /p command-line option.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Sets *String* to a numerical expression that is evaluated.`, ``),
            new Parameter_js_2.Parameter(`<Expression>`, `Specifies a numerical expression. See Remarks for valid operators that can be used in *Expression*.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays, sets, or removes CMD.EXE environment variables. If used without parameters, set displays the current environment variable settings.`, `set [<Variable>=[<String>]]

set [/p] <Variable>=[<PromptString>]

set /a <Variable>=<Expression>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`setlocal`, [
            new Parameter_js_2.Parameter(`enableextensions`, `Enables the command extensions until the matching endlocal command is encountered, regardless of the setting before the setlocal command was run.`, ``),
            new Parameter_js_2.Parameter(`disableextensions`, `Disables the command extensions until the matching endlocal command is encountered, regardless of the setting before the setlocal command was run.`, ``),
            new Parameter_js_2.Parameter(`enabledelayedexpansion`, `Enables the delayed environment variable expansion until the matching endlocal command is encountered, regardless of the setting before the setlocal command was run.`, ``),
            new Parameter_js_2.Parameter(`disabledelayedexpansion`, `Disables the delayed environment variable expansion until the matching endlocal command is encountered, regardless of the setting before the setlocal command was run.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Starts localization of environment variables in a batch file. Localization continues until a matching endlocal command is encountered or the end of the batch file is reached.`, `setlocal [enableextensions | disableextensions] [enabledelayedexpansion | disabledelayedexpansion]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`setx`, [
            new Parameter_js_2.Parameter(`/s <Computer>`, `Specifies the name or IP address of a remote computer. Do not use backslashes. The default value is the name of the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u [<Domain>]<User name>`, `Runs the script with the credentials of the specified user account. The default value is the system permissions.`, ``),
            new Parameter_js_2.Parameter(`/p [<Password>]`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`<Variable>`, `Specifies the name of the environment variable that you want to set.`, ``),
            new Parameter_js_2.Parameter(`<Value>`, `Specifies the value to which you want to set the environment variable.`, ``),
            new Parameter_js_2.Parameter(`/k <Path>`, `Specifies that the variable is set based on information from a registry key. The p*ath* uses the following syntax:</br>"\<HIVE><KEY>...<Value>"</br>For example, you might specify the following path:</br>"HKEY_LOCAL_MACHINESystemCurrentControlSetControlTimeZoneInformationStandardName"`, ``),
            new Parameter_js_2.Parameter(`/f <File name>`, `Specifies the file that you want to use.`, ``),
            new Parameter_js_2.Parameter(`/a <X>,<Y>`, `Specifies absolute coordinates and offset as search parameters.`, ``),
            new Parameter_js_2.Parameter(`/r <X>,<Y> "<String>"`, `Specifies relative coordinates and offset from String as search parameters.`, ``),
            new Parameter_js_2.Parameter(`/m`, `Specifies to set the variable in the system environment. The default setting is the local environment.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Displays file coordinates, ignoring the /a, /r, and /d command-line options.`, ``),
            new Parameter_js_2.Parameter(`/d <Delimiters>`, `Specifies delimiters such as "," or "" to be used in addition to the four built-in delimiters â€” SPACE, TAB, ENTER, and LINEFEED. Valid delimiters include any ASCII character. The maximum number of delimiters is 15, including built-in delimiters.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates or modifies environment variables in the user or system environment, without requiring programming or scripting. The Setx command also retrieves the values of registry keys and writes them to text files.`, `setx [/s <Computer> [/u [<Domain>\]<User name> [/p [<Password>]]]] <Variable> <Value> [/m]

setx [/s <Computer> [/u [<Domain>\]<User name> [/p [<Password>]]]] [<Variable>] /k <Path> [/m]

setx [/s <Computer> [/u [<Domain>\]<User name> [/p [<Password>]]]] /f <FileName> {[<Variable>] {/a <X>,<Y> | /r <X>,<Y> "<String>"} [/m] | /x} [/d <Delimiters>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`sfc`, [
            new Parameter_js_2.Parameter(`/scannow`, `Scans the integrity of all protected system files and repairs files with problems when possible.`, ``),
            new Parameter_js_2.Parameter(`/verifyonly`, `Scans integrity of all protected system files. No repair operation is performed.`, ``),
            new Parameter_js_2.Parameter(`/scanfile`, `Scans integrity of the specified file and repairs the file if problems are detected, when possible.`, ``),
            new Parameter_js_2.Parameter(`<file>`, `Specified full path and filename`, ``),
            new Parameter_js_2.Parameter(`/verifyfile`, `verifies the integrity of the specified file. No repair operation is performed.`, ``),
            new Parameter_js_2.Parameter(`/offwindir`, `Specifies the location of the offline windows directory, for offline repair.`, ``),
            new Parameter_js_2.Parameter(`/offbootdir`, `Specifies the location of the offline boot directory for offline`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Scans and verifies the integrity of all protected system files and replaces incorrect versions with correct versions.`, `sfc [/scannow] [/verifyonly] [/scanfile=<file>] [/verifyfile=<file>] [/offwindir=<offline windows directory> /offbootdir=<offline boot directory>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`shadow`, [
            new Parameter_js_2.Parameter(`<SessionName>`, `Specifies the name of the session that you want to remotely control.`, ``),
            new Parameter_js_2.Parameter(`<SessionID>`, `Specifies the ID of the session that you want to remotely control. Use query user to display the list of sessions and their session IDs.`, ``),
            new Parameter_js_2.Parameter(`/server:<ServerName>`, `Specifies the rd Session Host server containing the session that you want to remotely control. By default, the current rd Session Host4 server is used.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays information about the actions being performed.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables you to remotely control an active session of another user on a Remote Desktop Session Host (rd Session Host) server.`, `shadow {<SessionName> | <SessionID>} [/server:<ServerName>] [/v]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`shift`, [
            new Parameter_js_2.Parameter(`/n <N>`, `Specifies to start shifting at the *N*th argument, where *N* is any value from 0 to 8. Requires command extensions, which are enabled by default.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Changes the position of batch parameters in a batch file.`, `shift [/n <N>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`showmount`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
            new Parameter_js_2.Parameter(`#`, ``, ``),
        ], `You can use showmount to display mounted directories.  `, `showmount {-e|-a|-d} <Server>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`shutdown`, [
            new Parameter_js_2.Parameter(`/i`, `Displays the Remote Shutdown Dialog box. The /i option must be the first parameter following the command. If /i is specified, all other options are ignored.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Logs off the current user immediately, with no time-out period. You cannot use /l with /m or /t.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Shuts down the computer.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Restarts the computer after shutdown.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Aborts a system shutdown. Effective only during the timeout period. To use /a, you must also use the /m option.`, ``),
            new Parameter_js_2.Parameter(`/p`, `Turns off the local computer only (not a remote computer)â€”with no time-out period or warning. You can use /p only with /d or /f. If your computer does not support power-off functionality, it will shut down when you use /p, but the power to the computer will remain on.`, ``),
            new Parameter_js_2.Parameter(`/h`, `Puts the local computer into hibernation, if hibernation is enabled. You can use /h only with /f.`, ``),
            new Parameter_js_2.Parameter(`/e`, `Enables you to document the reason for the unexpected shutdown on the target computer.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Forces running applications to close without warning users.</br>Caution: Using the /f option might result in loss of unsaved data.`, ``),
            new Parameter_js_2.Parameter(`/m \\<ComputerName>`, `Specifies the target computer. Cannot be used with the /l option.`, ``),
            new Parameter_js_2.Parameter(`/t <XXX>`, `Sets the time-out period or delay to *XXX* seconds before a restart or shutdown. This causes a warning to display on the local console. You can specify 0-600 seconds. If you do not use /t, the time-out period is 30 seconds by default.`, ``),
            new Parameter_js_2.Parameter(`/d [p|u:]<XX>:<YY>`, `Lists the reason for the system restart or shutdown. The following are the parameter values:</br>p Indicates that the restart or shutdown is planned.</br>u Indicates that the reason is user defined.</br>Note: If p or u are not specified, the restart or shutdown is unplanned.</br>*XX* Specifies the major reason number (positive integer less than 256).</br>*YY* Specifies the minor reason number (positive integer less than 65536).`, ``),
            new Parameter_js_2.Parameter(`/c "<Comment>"`, `Enables you to comment in detail about the reason for the shutdown. You must first provide a reason by using the /d option. You must enclose comments in quotation marks. You can use a maximum of 511 characters.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt, including a list of the major and minor reasons that are defined on your local computer.`, ``),
        ], `Enables you to shut down or restart local or remote computers one at a time.`, `shutdown [/i | /l | /s | /r | /a | /p | /h | /e] [/f] [/m \\<ComputerName>] [/t <XXX>] [/d [p|u:]<XX>:<YY> [/c "comment"]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`sort`, [
            new Parameter_js_2.Parameter(`/r`, `Reverses the sort order (that is, sorts from Z to A and from 9 to 0).`, ``),
            new Parameter_js_2.Parameter(`/+<N>`, `Specifies the character position number where sort will begin each comparison. *N* can be any valid integer.`, ``),
            new Parameter_js_2.Parameter(`/m <Kilobytes>`, `Specifies the amount of main memory to use for the sort in kilobytes (KB).`, ``),
            new Parameter_js_2.Parameter(`/l <Locale>`, `Overrides the sort order of characters that are defined by the system default locale (that is, the language and Country/Region selected during installation).`, ``),
            new Parameter_js_2.Parameter(`/rec <Characters>`, `Specifies the maximum number of characters in a record or a line of the input file (the default value is 4,096 and the maximum is 65,535).`, ``),
            new Parameter_js_2.Parameter(`[<Drive1>:][<Path1>]<FileName1>`, `Specifies the file to be sorted. If no file name is specified, the standard input is sorted. Specifying the input file is faster than redirecting the same file as standard input.`, ``),
            new Parameter_js_2.Parameter(`/t [<Drive2>:][<Path2>]`, `Specifies the path of the directory to hold the sort command's working storage if the data does not fit in the main memory. By default, the system temporary directory is used.`, ``),
            new Parameter_js_2.Parameter(`/o [<Drive3>:][<Path3>]<FileName3>`, `Specifies the file where the sorted input is to be stored. If not specified, the data is written to the standard output. Specifying the output file is faster than redirecting standard output to the same file.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Reads input, sorts data, and writes the results to the screen, to a file, or to another device.`, `sort [/r] [/+<N>] [/m <Kilobytes>] [/l <Locale>] [/rec <Characters>] [[<Drive1>:][<Path1>]<FileName1>] [/t [<Drive2>:][<Path2>]] [/o [<Drive3>:][<Path3>]<FileName3>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`start`, [
            new Parameter_js_2.Parameter(`"<Title>"`, `Specifies the title to display in the Command Prompt window title bar.`, ``),
            new Parameter_js_2.Parameter(`/d <Path>`, `Specifies the startup directory.`, ``),
            new Parameter_js_2.Parameter(`/i`, `Passes the Cmd.exe startup environment to the new Command Prompt window. If /i is not specified, the current environment is used.`, ``),
            new Parameter_js_2.Parameter(`/min | /max`, `Specifies to minimize (/min) or maximize (/max) the new Command Prompt window.`, ``),
            new Parameter_js_2.Parameter(`/separate | /shared`, `Starts 16-bit programs in a separate memory space (/separate) or shared memory space (/shared). These options are not supported on 64-bit platforms.`, ``),
            new Parameter_js_2.Parameter(`/low | /normal | /high | /realtime | /abovenormal | /belownormal`, `Starts an application in the specified priority class. Valid priority class values are /low, /normal, /high, /realtime, /abovenormal, and /belownormal.`, ``),
            new Parameter_js_2.Parameter(`/affinity <HexAffinity>`, `Applies the specified processor affinity mask (expressed as a hexadecimal number) to the new application.`, ``),
            new Parameter_js_2.Parameter(`/wait`, `Starts an application and waits for it to end.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Starts an application without opening a new Command Prompt window. CTRL+C handling is ignored unless the application enables CTRL+C processing. Use CTRL+BREAK to interrupt the application.`, ``),
            new Parameter_js_2.Parameter(`/b <Command> | <Program>`, `Specifies the command or program to start.`, ``),
            new Parameter_js_2.Parameter(`<Parameters>`, `Specifies parameters to pass to the command or program.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Starts a separate Command Prompt window to run a specified program or command.`, `start ["<Title>"] [/d <Path>] [/i] [{/min | /max}] [{/separate | /shared}] [{/low | /normal | /high | /realtime | /abovenormal | belownormal}] [/affinity <HexAffinity>] [/wait] [/b {<Command> | <Program>} [<Parameters>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`subst`, [
            new Parameter_js_2.Parameter(`<Drive1>:`, `Specifies the virtual drive to which you want to assign a path.`, ``),
            new Parameter_js_2.Parameter(`[<Drive2>:]<Path>`, `Specifies the physical drive and path that you want to assign to a virtual drive.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Deletes a substituted (virtual) drive.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Associates a path with a drive letter. If used without parameters, subst displays the names of the virtual drives in effect.`, `subst [<Drive1>: [<Drive2>:]<Path>] 

subst <Drive1>: /d`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`sxstrace`, [
            new Parameter_js_2.Parameter(`trace`, `Enables tracing for sxs (side-by-side)`, ``),
            new Parameter_js_2.Parameter(`/logfile`, `Specifies the raw log file.`, ``),
            new Parameter_js_2.Parameter(`<FileName>`, `Saves tracing log to *FileName*.`, ``),
            new Parameter_js_2.Parameter(`/nostop`, `Specifies no prompt to stop tracing.`, ``),
            new Parameter_js_2.Parameter(`parse`, `Translates the raw trace file.`, ``),
            new Parameter_js_2.Parameter(`/outfile`, `Specifies the output filename.`, ``),
            new Parameter_js_2.Parameter(`<ParsedFile>`, `Specifies the filename of the parsed file.`, ``),
            new Parameter_js_2.Parameter(`/filter`, `Allows the output to be filtered.`, ``),
            new Parameter_js_2.Parameter(`<AppName>`, `Specifies the name of the application.`, ``),
            new Parameter_js_2.Parameter(`stoptrace`, `Stop the trace if it is not stopped before.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Diagnoses side-by-side problems.    `, `sxstrace [{[trace /logfile:<FileName> [/nostop]|[parse /logfile:<FileName> /outfile:<ParsedFile>  [/filter:<AppName>]}]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`sysocmgr`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Sysocmgr is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`systeminfo`, [
            new Parameter_js_2.Parameter(`/s <Computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u <Domain><UserName>`, `Runs the command with the account permissions of the specified user account. If /u is not specified, this command uses the permissions of the user who is currently logged on to the computer that is issuing the command.`, ``),
            new Parameter_js_2.Parameter(`/p <Password>`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`/fo <Format>`, `Specifies the output format with one of the following values:</br>TABLE: Displays output in a table.</br>LIST: Displays output in a list.</br>CSV: Displays output in Comma Separated Values format.`, ``),
            new Parameter_js_2.Parameter(`/nh`, `Suppresses column headers in the output. Valid when the /fo parameter is set to TABLE or CSV.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays detailed configuration information about a computer and its operating system, including operating system configuration, security information, product ID, and hardware properties (such as RAM, disk space, and network cards).`, `Systeminfo [/s <Computer> [/u <Domain>\<UserName> [/p <Password>]]] [/fo {TABLE | LIST | CSV}] [/nh]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`takeown`, [
            new Parameter_js_2.Parameter(`/s <Computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default value is the local computer. This parameter applies to all of the files and folders specified in the command.`, ``),
            new Parameter_js_2.Parameter(`/u [<Domain>]<User name>`, `Runs the script with the permissions of the specified user account. The default value is system permissions.`, ``),
            new Parameter_js_2.Parameter(`/p [<Password>]`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`/f <File name>`, `Specifies the file name or directory name pattern. You can use the wildcard character * when specifying the pattern. You can also use the syntax *ShareNameFileName*.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Gives ownership to the Administrators group instead of the current user.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Performs a recursive operation on all files in the specified directory and subdirectories.`, ``),
            new Parameter_js_2.Parameter(`/d {Y | N}`, `Suppresses the confirmation prompt that is displayed when the current user does not have the "List Folder" permission on a specified directory, and instead uses the specified default value. Valid values for the /d option are as follows:</br>-   Y: Take ownership of the directory.</br>-   N: Skip the directory.</br>Note that you must use this option in conjunction with the /r option.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Enables an administrator to recover access to a file that previously was denied, by making the administrator the owner of the file.`, `takeown [/s <Computer> [/u [<Domain>\]<User name> [/p [<Password>]]]] /f <File name> [/a] [/r [/d {Y|N}]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tapicfg`, [
            new Parameter_js_2.Parameter(`install /directory:<PartitionName>`, `Required. Specifies the DNS name of the TAPI application directory partition to be created. This name must be a fully qualified domain name.`, ``),
            new Parameter_js_2.Parameter(`/server: <DCName>`, `Specifies the DNS name of the domain controller on which the TAPI application directory partition is created. If the domain controller name is not specified, the name of the local computer is used.`, ``),
            new Parameter_js_2.Parameter(`/forcedefault`, `Specifies that this directory is the default TAPI application directory partition for the domain. There can be multiple TAPI application directory partitions in a domain.<br /><br />if this directory is the first TAPI application directory partition created on the domain, it is automatically set as the default, regardless of whether you use the /forcedefault option.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates, removes, or displays a TAPI application directory partition, or sets a default TAPI application directory partition. TAPI 3.1 clients can use the information in this application directory partition with the directory service locator service to find and communicate with TAPI directories.You can also use tapicfg to create or remove service connection points, which enable TAPI clients to efficiently locate TAPI application directory partitions in a domain. For more information, see remarks. To view the command syntax, click a command. `, `tapicfg install /directory:<PartitionName> [/server:<DCName>] [/forcedefault]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`taskkill`, [
            new Parameter_js_2.Parameter(`/s <computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u <Domain>\\<UserName>`, `Runs the command with the account permissions of the user who is specified by *UserName* or *Domain*\*UserName*. /u can be specified only if /s is specified. The default is the permissions of the user who is currently logged on to the computer that is issuing the command.`, ``),
            new Parameter_js_2.Parameter(`/p <Password>`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`/fi <Filter>`, `Applies a filter to select a set of tasks. You can use more than one filter or use the wildcard character (*) to specify all tasks or image names. See the following [table for valid filter names](#BKMK_table), operators, and values.`, ``),
            new Parameter_js_2.Parameter(`/pid <ProcessID>`, `Specifies the process ID of the process to be terminated.`, ``),
            new Parameter_js_2.Parameter(`/im <ImageName>`, `Specifies the image name of the process to be terminated. Use the wildcard character (*) to specify all image names.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Specifies that processes be forcefully terminated. This parameter is ignored for remote processes; all remote processes are forcefully terminated.`, ``),
            new Parameter_js_2.Parameter(`/t`, `Terminates the specified process and any child processes started by it.`, ``),
        ], `Ends one or more tasks or processes. Processes can be ended by process ID or image name. taskkill replaces the kill tool.`, `taskkill [/s <computer> [/u [<Domain>\]<UserName> [/p [<Password>]]]] {[/fi <Filter>] [...] [/pid <ProcessID> | /im <ImageName>]} [/f] [/t]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tasklist`, [
            new Parameter_js_2.Parameter(`/s <Computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`/u [<Domain>\\]<UserName>`, `Runs the command with the account permissions of the user who is specified by *UserName* or *DomainUserName*. /u can be specified only if /s is specified. The default is the permissions of the user who is currently logged on to the computer that is issuing the command.`, ``),
            new Parameter_js_2.Parameter(`/p <Password>`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`/m <Module>`, `Lists all tasks with DLL modules loaded that match the given pattern name. If the module name is not specified, this option displays all modules loaded by each task.`, ``),
            new Parameter_js_2.Parameter(`/svc`, `Lists all the service information for each process without truncation. Valid when the /fo parameter is set to table.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays verbose task information in the output. For complete verbose output without truncation, use /v and /svc together.`, ``),
            new Parameter_js_2.Parameter(`/fo {table | list | csv}`, `Specifies the format to use for the output. Valid values are table, list, and csv. The default format for output is table.`, ``),
            new Parameter_js_2.Parameter(`/nh`, `Suppresses column headers in the output. Valid when the /fo parameter is set to table or csv.`, ``),
            new Parameter_js_2.Parameter(`/fi <Filter>`, `Specifies the types of processes to include in or exclude from the query. See the following table for valid filter names, operators, and values.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays a list of currently running processes on the local computer or on a remote computer. Tasklist replaces the tlist tool.`, `tasklist [/s <Computer> [/u [<Domain>\]<UserName> [/p <Password>]]] [{/m <Module> | /svc | /v}] [/fo {table | list | csv}] [/nh] [/fi <Filter> [/fi <Filter> [ ... ]]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tcmsetup`, [
            new Parameter_js_2.Parameter(`/q`, `Prevents the display of message boxes.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Specifies that connection-oriented callbacks will be used for heavy traffic networks where packet loss is high. When this parameter is omitted, connectionless callbacks will be used.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Required. Specifies client setup.`, ``),
            new Parameter_js_2.Parameter(`<Server1>`, `Required. Specifies the name of the remote server that has the TAPI service providers that the client will use. The client will use the service providers' lines and phones. The client must be in the same domain as the server or in a domain that has a two-way trust relationship with the domain that contains the server.`, ``),
            new Parameter_js_2.Parameter(`<Server2>â€¦`, `Specifies any additional server or servers that will be available to this client. If you specify a list of servers is, use a space to separate the server names.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Clears the list of remote servers. Disables the TAPI client by preventing it from using the TAPI service providers that are on the remote servers.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Sets up or disables the TAPI client.`, `tcmsetup [/q] [/x] /c <Server1> [<Server2> â€¦] 

tcmsetup  [/q] /c /d`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`telnet`, [
            new Parameter_js_2.Parameter(`/a`, `attempt automatic logon. Same as /l option except uses the currently logged on user s name.`, ``),
            new Parameter_js_2.Parameter(`/e <EscapeChar>`, `Escape character used to enter the telnet client prompt.`, ``),
            new Parameter_js_2.Parameter(`/f <FileName>`, `File name used for client side logging.`, ``),
            new Parameter_js_2.Parameter(`/l <UserName>`, `Specifies the user name to log on with on the remote computer.`, ``),
            new Parameter_js_2.Parameter(`/t {vt100 &#124; vt52 &#124; ansi &#124; vtnt}`, `Specifies the terminal type. Supported terminal types are vt100, vt52, ansi, and vtnt.`, ``),
            new Parameter_js_2.Parameter(`<Host> [<Port>]`, `Specifies the hostname or IP address of the remote computer to connect to, and optionally the TCP port to use (default is TCP port 23).`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt. Alternatively, you can type /h.`, ``),
        ], `Communicates with a computer running the telnet Server service. `, `telnet [/a] [/e <EscapeChar>] [/f <FileName>] [/l <UserName>] [/t {vt100 | vt52 | ansi | vtnt}] [<Host> [<Port>]] [/?]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tftp`, [
            new Parameter_js_2.Parameter(`-i`, `Specifies binary image transfer mode (also called octet mode). In binary image mode, the file is transferred in one-byte units. Use this mode when transferring binary files. If -i is omitted, the file is transferred in ASCII mode. This is the default transfer mode. This mode converts the end-of-line (EOL) characters to an appropriate format for the specified computer. Use this mode when transferring text files. If a file transfer is successful, the data transfer rate is displayed.`, ``),
            new Parameter_js_2.Parameter(`<Host>`, `Specifies the local or remote computer.`, ``),
            new Parameter_js_2.Parameter(`put`, `Transfers the file *Source* on the local computer to the file *Destination* on the remote computer. Because the tftp protocol does not support user authentication, the user must be logged onto the remote computer, and the files must be writable on the remote computer.`, ``),
            new Parameter_js_2.Parameter(`get`, `Transfers the file *Destination* on the remote computer to the file *Source* on the local computer.`, ``),
            new Parameter_js_2.Parameter(`<Source>`, `Specifies the file to transfer.`, ``),
            new Parameter_js_2.Parameter(`<Destination>`, `Specifies where to transfer the file.`, ``),
        ], `Transfers files to and from a remote computer, typically a computer running UNIX, that is running the Trivial File Transfer Protocol (tftp) service or daemon. tftp is typically used by embedded devices or systems that retrieve firmware, configuration information, or a system image during the boot process from a tftp server.   `, `tftp [-i] [<Host>] [{get | put}] <Source> [<Destination>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`time`, [
            new Parameter_js_2.Parameter(`<HH>[:<MM>[:<SS>[.<NN>]]] [am|pm]`, `Sets the system time to the new time specified, where *HH* is in hours (required), *MM* is in minutes, and *SS* is in seconds. *NN* can be used to specify hundredths of a second. If am or pm is not specified, time uses the 24-hour format by default.`, ``),
            new Parameter_js_2.Parameter(`/t`, `Displays the current time without prompting you for a new time.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays or sets the system time. If used without parameters, time displays the current system time and prompts you to enter a new time.`, `time [/t | [<HH>[:<MM>[:<SS>]] [am|pm]]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`timeout`, [
            new Parameter_js_2.Parameter(`/t <TimeoutInSeconds>`, `Specifies the decimal number of seconds (between -1 and 99999) to wait before the command processor continues processing. The value -1 causes the computer to wait indefinitely for a keystroke.`, ``),
            new Parameter_js_2.Parameter(`/nobreak`, `Specifies to ignore user key strokes.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Pauses the command processor for the specified number of seconds.`, `timeout /t <TimeoutInSeconds> [/nobreak]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`title`, [
            new Parameter_js_2.Parameter(`<String>`, `Specifies the title of the Command Prompt window.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Creates a title for the Command Prompt window.`, `title [<String>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tlntadmn`, [
            new Parameter_js_2.Parameter(`<computerName>`, `Specifies the name of the server to connect to. The default is the local computer.`, ``),
            new Parameter_js_2.Parameter(`-u <UserName> -p <Password>`, `Specifies administrative credentials for a remote server that you want to administer. This parameter is required if you want to administer a remote server to which you are not logged on with administrative credentials.`, ``),
            new Parameter_js_2.Parameter(`start`, `starts the telnet Server Service.`, ``),
            new Parameter_js_2.Parameter(`stop`, `Stops the telnet Server Service`, ``),
            new Parameter_js_2.Parameter(`pause`, `pauses the telnet Server Service. No new connections will be accepted.`, ``),
            new Parameter_js_2.Parameter(`continue`, `Resumes the telnet Server Service.`, ``),
            new Parameter_js_2.Parameter(`-s {<SessionID> &#124; all}`, `Displays active telnet sessions.`, ``),
            new Parameter_js_2.Parameter(`-k {<SessionID> &#124; all}`, `Ends telnet sessions. type the Session ID to end a specific session, or type all to end all the sessions.`, ``),
            new Parameter_js_2.Parameter(`-m {<SessionID> &#124; all}  <Message>`, `Sends a message to one or more sessions. type the session ID to send a message to a specific session, or type all to send a message to all sessions. type the message that you want to send between quotation marks.`, ``),
            new Parameter_js_2.Parameter(`config dom = <Domain>`, `Configures the default domain for the server.`, ``),
            new Parameter_js_2.Parameter(`config ctrlakeymap = {yes &#124; no}`, `Specifies if you want the telnet server to interpret CTRL+A as ALT. type yes to map the shortcut key, or type no to prevent the mapping.`, ``),
            new Parameter_js_2.Parameter(`config timeout = <hh>:<mm>:<ss>`, `Sets the time-out period in hours, minutes, and seconds.`, ``),
            new Parameter_js_2.Parameter(`config timeoutactive = {yes &#124; no`, `Enables the idle session timeout.`, ``),
            new Parameter_js_2.Parameter(`config maxfail = <attempts>`, `Sets the maximum number of failed logon attempts before disconnecting.`, ``),
            new Parameter_js_2.Parameter(`config maxconn = <Connections>`, `Sets the maximum number of connections.`, ``),
            new Parameter_js_2.Parameter(`config port = <Number>`, `Sets the telnet port. You must specify the port with an integer smaller than 1024.`, ``),
            new Parameter_js_2.Parameter(`config sec {+ &#124; -}NTLM {+ &#124; -}passwd`, `Specifies whether you want to use NTLM, a password, or both to authenticate logon attempts. To use a particular type of authentication, type a plus sign (+) before that type of authentication. To prevent using a particular type of authentication, type a minus sign (-) before that type of authentication.`, ``),
            new Parameter_js_2.Parameter(`config mode = {console &#124; stream}`, `Specifies the mode of operation.`, ``),
            new Parameter_js_2.Parameter(`-?`, `Displays help at the command prompt.`, ``),
        ], `Administers a local or remote computer that is running the telnet Server Service.   `, `tlntadmn [<computerName>] [-u <UserName>] [-p <Password>] [{start | stop | pause | continue}] [-s {<SessionID> | all}] [-k {<SessionID> | all}] [-m {<SessionID> | all}  <Message>] [config [dom = <Domain>] [ctrlakeymap = {yes | no}] [timeout = <hh>:<mm>:<ss>] [timeoutactive = {yes | no}] [maxfail = <attempts>] [maxconn = <Connections>] [port = <Number>] [sec {+ | -}NTLM {+ | -}passwd] [mode = {console | stream}]] [-?]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tpmvscmgr`, [
            new Parameter_js_2.Parameter(`/name`, `Required. Indicates the name of the new virtual smart card.`, ``),
            new Parameter_js_2.Parameter(`/AdminKey`, `Indicates the desired administrator key that can be used to reset the PIN of the card if the user forgets the PIN.</br>DEFAULT Specifies the default value of 010203040506070801020304050607080102030405060708.</br>PROMPT Prompts the user to enter a value for the administrator key.</br>RANDOM Results in a random setting for the administrator key for a card that is not returned to the user. This creates a card that might not be manageable by using smart card management tools. When generated with RANDOM, the administrator key must be entered as 48 hexadecimal characters.`, ``),
            new Parameter_js_2.Parameter(`/PIN`, `Indicates desired user PIN value.</br>DEFAULT Specifies the default PIN of 12345678.</br>PROMPT Prompts the user to enter a PIN at the command line. The PIN must be a minimum of eight characters, and it can contain numerals, characters, and special characters.`, ``),
            new Parameter_js_2.Parameter(`/PUK`, `Indicates the desired PIN Unlock Key (PUK) value. The PUK value must be a minimum of eight characters, and it can contain numerals, characters, and special characters. If the parameter is omitted, the card is created without a PUK.</br>DEFAULT Specifies the default PUK of 12345678.</br>PROMPT Prompts to the user to enter a PUK at the command line.`, ``),
            new Parameter_js_2.Parameter(`/generate`, `Generates the files in storage that are necessary for the virtual smart card to function. If the /generate parameter is omitted, it is equivalent to creating a card without this file system. A card without a file system can be managed only by a smart card management system such as Microsoft Configuration Manager.`, ``),
            new Parameter_js_2.Parameter(`/machine`, `Allows you to specify the name of a remote computer on which the virtual smart card can be created. This can be used in a domain environment only, and it relies on DCOM. For the command to succeed in creating a virtual smart card on a different computer, the user running this command must be a member in the local administrators group on the remote computer.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help for this command.`, ``),
        ], `The Tpmvscmgr command-line tool allows users with Administrative credentials to create and delete TPM virtual smart cards on a computer. For examples of how this command can be used, see [Examples](#BKMK_Examples).`, `Tpmvscmgr create [/name] [/AdminKey DEFAULT | PROMPT | RANDOM] [/PIN DEFAULT | PROMPT] [/PUK DEFAULT | PROMPT] [/generate] [/machine] [/?]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tracerpt`, [
            new Parameter_js_2.Parameter(`-?`, `Displays context sensitive help.`, ``),
            new Parameter_js_2.Parameter(`-config <filename>`, `Load a settings file containing command options.`, ``),
            new Parameter_js_2.Parameter(`-y`, `Answer yes to all questions without prompting.`, ``),
            new Parameter_js_2.Parameter(`-f <XML `, ` HTML>`, ``),
            new Parameter_js_2.Parameter(`-of <CSV `, ` EVTX `, ``),
            new Parameter_js_2.Parameter(`-df <filename>`, `Create a Microsoft-specific counting/reporting schema file.`, ``),
            new Parameter_js_2.Parameter(`-int <filename>`, `Dump the interpreted event structure to the specified file.`, ``),
            new Parameter_js_2.Parameter(`-rts`, `Report raw timestamp in the event trace header. Can only be used with -o, not -report or -summary.`, ``),
            new Parameter_js_2.Parameter(`-tmf <filename>`, `Specify a Trace Message Format definition file.`, ``),
            new Parameter_js_2.Parameter(`-tp <value>`, `Specify the TMF file search path. Multiple paths may be used, separated by a semicolon (;).`, ``),
            new Parameter_js_2.Parameter(`-i <value>`, `Specify the provider image path. The matching PDB will be located in the Symbol Server. Multiple paths can be used, separated by a semicolon (;).`, ``),
            new Parameter_js_2.Parameter(`-pdb <value>`, `Specify the symbol server path. Multiple paths can be used, separated by a semicolon (;).`, ``),
            new Parameter_js_2.Parameter(`-gmt`, `Convert WPP payload timestamps to Greenwich Mean Time.`, ``),
            new Parameter_js_2.Parameter(`-rl <value>`, `Define System Report Level from 1 to 5. Default is 1.`, ``),
            new Parameter_js_2.Parameter(`-summary [filename]`, `Generate a summary report text file. Filename if not specified is summary.txt.`, ``),
            new Parameter_js_2.Parameter(`-o [filename]`, `Generate a text output file. Filename if not specified is dumpfile.xml.`, ``),
            new Parameter_js_2.Parameter(`-report [filename]`, `Generate a text output report file. Filename if not specified is workload.xml.`, ``),
            new Parameter_js_2.Parameter(`-lr`, `Specify "less restrictive." This uses best efforts for events that do not match the events schema.`, ``),
            new Parameter_js_2.Parameter(`-export [filename]`, `Generate an Event Schema export file. Filename if not specified is schema.man.`, ``),
            new Parameter_js_2.Parameter(`[-l] <value [value [â€¦]]>`, `Specify the Event Trace log file to process.`, ``),
            new Parameter_js_2.Parameter(`-rt <session_name [session_name [â€¦]]>`, `Specify Real-time Event Trace Session data sources.`, ``),
        ], `The tracerpt command can be used to parse Event Trace Logs, log files generated by Performance Monitor, and real-time Event Trace providers. It generates dump files, report files, and report schemas.`, `tracerpt <[-l] <value [value [...]]>|-rt <session_name [session_name [...]]>> [options]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tracert`, [
            new Parameter_js_2.Parameter(`/d`, `Prevents tracert from attempting to resolve the IP addresses of intermediate routers to their names. This can speed up the display of tracert results.`, ``),
            new Parameter_js_2.Parameter(`/h <MaximumHops>`, `Specifies the maximum number of hops in the path to search for the target (destination). The default is 30 hops.`, ``),
            new Parameter_js_2.Parameter(`/j <Hostlist>`, `Specifies that echo Request messages use the Loose Source Route option in the IP header with the set of intermediate destinations specified in *Hostlist*. With loose source routing, successive intermediate destinations can be separated by one or multiple routers. The maximum number of addresses or names in the host list is 9. The *Hostlist* is a series of IP addresses (in dotted decimal notation) separated by spaces. Use this parameter only when tracing IPv4 addresses.`, ``),
            new Parameter_js_2.Parameter(`/w <timeout>`, `Specifies the amount of time in milliseconds to wait for the ICMP time Exceeded or echo Reply message corresponding to a given echo Request message to be received. If not received within the time-out, an asterisk (*) is displayed. The default time-out is 4000 (4 seconds).`, ``),
            new Parameter_js_2.Parameter(`/R`, `Specifies that the IPv6 Routing extension header be used to send an echo Request message to the local host, using the destination as an intermediate destination and testing the reverse route.`, ``),
            new Parameter_js_2.Parameter(`/S <Srcaddr>`, `Specifies the source address to use in the echo Request messages. Use this parameter only when tracing IPv6 addresses.`, ``),
            new Parameter_js_2.Parameter(`/4`, `Specifies that tracert.exe can use only IPv4 for this trace.`, ``),
            new Parameter_js_2.Parameter(`/6`, `Specifies that tracert.exe can use only IPv6 for this trace.`, ``),
            new Parameter_js_2.Parameter(`<TargetName>`, `Specifies the destination, identified either by IP address or host name.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Determines the path taken to a destination by sending Internet Control Message Protocol (ICMP) echo Request or ICMPv6 messages to the destination with incrementally increasing time to Live (TTL) field values. The path displayed is the list of near/side router interfaces of the routers in the path between a source host and a destination. The near/side interface is the interface of the router that is closest to the sending host in the path. Used without parameters, tracert displays help.   `, `tracert [/d] [/h <MaximumHops>] [/j <Hostlist>] [/w <timeout>] [/R] [/S <Srcaddr>] [/4][/6] <TargetName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tree`, [
            new Parameter_js_2.Parameter(`<Drive>:`, `Specifies the drive that contains the disk for which you want to display the directory structure.`, ``),
            new Parameter_js_2.Parameter(`<Path>`, `Specifies the directory for which you want to display the directory structure.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Displays the names of the files in each directory.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Specifies that tree is to use text characters instead of graphic characters to show the lines that link subdirectories.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the directory structure of a path or of the disk in a drive graphically.`, `tree [<Drive>:][<Path>] [/f] [/a]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tscon`, [
            new Parameter_js_2.Parameter(`<SessionID>`, `Specifies the ID of the session to which you want to connect. If you use the optional /dest:<*SessionName*> parameter, this is the ID of the session to which you want to connect.`, ``),
            new Parameter_js_2.Parameter(`<SessionName>`, `Specifies the name of the session to which you want to connect.`, ``),
            new Parameter_js_2.Parameter(`/dest:<SessionName>`, `Specifies the name of the current session. This session will disconnect when you connect to the new session.`, ``),
            new Parameter_js_2.Parameter(`/password:<pw>`, `Specifies the password of the user who owns the session to which you want to connect. This password is required when the connecting user does not own the session.`, ``),
            new Parameter_js_2.Parameter(`/password:*`, `prompts for the password of the user who owns the session to which you want to connect.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays information about the actions being performed.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Connects to another session on a Remote Desktop Session Host (rd Session Host) server.  `, `tscon {<SessionID> | <SessionName>} [/dest:<SessionName>] [/password:<pw> | /password:*] [/v]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tsdiscon`, [
            new Parameter_js_2.Parameter(`<SessionId>`, `Specifies the ID of the session to disconnect.`, ``),
            new Parameter_js_2.Parameter(`<SessionName>`, `Specifies the name of the session to disconnect.`, ``),
            new Parameter_js_2.Parameter(`/server:<ServerName>`, `Specifies the terminal server that contains the session that you want to disconnect. Otherwise, the current rd Session Host server is used.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays information about the actions being performed.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Disconnects a session from a Remote Desktop Session Host (rd Session Host) server.`, `tsdiscon [<SessionID> | <SessionName>] [/server:<ServerName>] [/v]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tsecimp`, [
            new Parameter_js_2.Parameter(`/f <Filename>`, `Required. Specifies the name of the XML file that contains the assignment information that you want to import.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Validates the structure of the XML file without importing the information into the Tsec.ini file.`, ``),
            new Parameter_js_2.Parameter(`/u`, `Checks whether each user is a member of the domain specified in the XML file. The computer on which you use this parameter must be connected to the network. This parameter might significantly slow performance if you are processing a large amount of user assignment information.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Displays a list of installed telephony providers. For each telephony provider, the associated line devices are listed, as well as the addresses and users associated with each line device.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Imports assignment information from an Extensible Markup Language (XML) file into the TAPI server security file (Tsec.ini). You can also use this command to display the list of TAPI providers and the lines devices associated with each of them, validate the structure of the XML file without importing the contents, and check domain membership.`, `tsecimp /f <Filename> [{/v | /u}]

tsecimp /d`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tskill`, [
            new Parameter_js_2.Parameter(`<ProcessID>`, `Specifies the ID of the process that you want to end.`, ``),
            new Parameter_js_2.Parameter(`<ProcessName>`, `Specifies the name of the process that you want to end. This parameter can include wildcard characters.`, ``),
            new Parameter_js_2.Parameter(`/server:<ServerName>`, `Specifies the terminal server that contains the process that you want to end. If /server is not specified, the current RD Session Host server is used.`, ``),
            new Parameter_js_2.Parameter(`/id:<SessionID>`, `Ends the process that is running in the specified session.`, ``),
            new Parameter_js_2.Parameter(`/a`, `Ends the process that is running in all sessions.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Displays information about the actions being performed.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Ends a process running in a session on a Remote Desktop Session Host (rd Session Host) server.`, `tskill {<ProcessID> | <ProcessName>} [/server:<ServerName>] [/id:<SessionID> | /a] [/v]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tsprof`, [
            new Parameter_js_2.Parameter(`/update`, `Updates profile path information for <*UserName*> in domain <*DomainName*> to <*Profilepath*>.`, ``),
            new Parameter_js_2.Parameter(`/domain:<DomainName>`, `Specifies the name of the domain in which the operation is applied.`, ``),
            new Parameter_js_2.Parameter(`/local`, `Applies the operation only to local user accounts.`, ``),
            new Parameter_js_2.Parameter(`/profile:<path>`, `Specifies the profile path as displayed in the Remote Desktop Services extensions in Local Users and Groups and active directory Users and computers.`, ``),
            new Parameter_js_2.Parameter(`<UserName>`, `Specifies the name of the user for whom you want to update or query the server profile path.`, ``),
            new Parameter_js_2.Parameter(`/copy`, `Copies user configuration information from <*SourceUser*> to <*DestinationUser*> and updates the profile path information for <*DestinationUser*> to <*Profilepath*>. Both <*SourceUser*> and <*DestinationUser*> must either be local or must be in domain <*DomainName*>.`, ``),
            new Parameter_js_2.Parameter(`<Src_usr>`, `Specifies the name of the user from whom you want to copy the user configuration information.`, ``),
            new Parameter_js_2.Parameter(`<Dest_usr>`, `Specifies the name of the user to whom you want to copy the user configuration information.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Displays the current profile path of the user for whom you want to query the server profile path.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Copies the Remote Desktop Services user configuration information from one user to another.`, `tsprof /update {/domain:<DomainName> | /local} /profile:<path> <UserName>

tsprof /copy {/domain:<DomainName> | /local} [/profile:<path>] <Src_usr> <Dest_usr>

tsprof /q {/domain:<DomainName> | /local} <UserName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`type`, [
            new Parameter_js_2.Parameter(`[<Drive>:][<Path>]<FileName>`, `Specifies the location and name of the file or files that you want to view. Separate multiple file names with spaces.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `In the Windows Command shell, type is a built in command which displays the contents of a text file. Use the type command to view a text file without modifying it.`, `type [<Drive>:][<Path>]<FileName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`typeperf`, [
            new Parameter_js_2.Parameter(`<counter [counter [â€¦]]>`, `Specifies performance counters to monitor.`, ``),
        ], `The typeperf command writes performance data to the command window or to a log file. To stop typeperf, press CTRL+C.`, `typeperf <counter [counter ...]> [options]

typeperf -cf <filename> [options]

typeperf -q [object] [options]

typeperf -qx [object] [options]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`tzutil`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
            new Parameter_js_2.Parameter(`/g`, `Displays the current time zone ID.`, ``),
            new Parameter_js_2.Parameter(`/s <timeZoneID>[_dstoff]`, `Sets the current time zone using the specified time zone ID. The _dstoff suffix disables Daylight Saving time adjustments for the time zone (where applicable).`, ``),
            new Parameter_js_2.Parameter(`/l`, `lists all valid time zone IDs and display names. The output will be:<br /><br />-   <display name><br />-   <time zone ID>`, ``),
        ], `Displays the Windows time Zone Utility. `, `tzutil [/?] [/g] [/s <timeZoneID>[_dstoff]] [/l]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`Vssadmin`, [
            new Parameter_js_2.Parameter(`[Vssadmin add shadowstorage](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc788051(v%3dws.11))`, `Adds a volume shadow copy storage association.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin create shadow](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc788055(v%3dws.11))`, `Creates a new volume shadow copy.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin delete shadows](vssadmin-delete-shadows.md)`, `Deletes volume shadow copies.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin delete shadowstorage](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc785461(v%3dws.11))`, `Deletes volume shadow copy storage associations.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin list providers](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc788108(v%3dws.11))`, `Lists registered volume shadow copy providers.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin list shadows](vssadmin-list-shadows.md)`, `Lists existing volume shadow copies.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin list shadowstorage](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc788045(v%3dws.11))`, `Lists all shadow copy storage associations on the system.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin list volumes](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc788064(v%3dws.11))`, `Lists volumes that are eligible for shadow copies.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin list writers](vssadmin-list-writers.md)`, `Lists all subscribed volume shadow copy writers on the system.`, ``),
            new Parameter_js_2.Parameter(`[Vssadmin resize shadowstorage](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc788050(v%3dws.11))`, `Resizes the maximum size for a shadow copy storage association.`, ``),
        ], `Displays current volume shadow copy backups and all installed shadow copy writers and providers. Select a command name in the following table view its command syntax.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`unlodctr`, [
            new Parameter_js_2.Parameter(`<DriverName>`, `removes the Performance counter name settings and Explain text for driver or service <DriverName> from the Windows Server 2003 registry.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Removes Performance counter names and Explain text for a service or device driver from the system registry.   `, `Unlodctr <DriverName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`ver`, [
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the operating system version number.`, `ver`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`verifier`, [
            new Parameter_js_2.Parameter(`<flags>`, `Must be a number in decimal or hexadecimal, combination of bits:<br /><br />-   Value: description<br />-   bit 0: special pool checking<br />-   bit 1: force irql checking<br />-   bit 2: low resources simulation<br />-   bit 3: pool tracking<br />-   bit 4: I/O verification<br />-   bit 5: deadlock detection<br />-   bit 6: unused<br />-   bit 7: DMA verification<br />-   bit 8: security checks<br />-   bit 9: force pending I/O requests<br />-   bit 10: IRP logging<br />-   bit 11: miscellaneous checks<br /><br />for example, /flags 27 is equivalent with /flags 0x1B`, ``),
            new Parameter_js_2.Parameter(`/volatile`, `Used to change the verifier settings dynamically without restarting the system. Any new settings will be lost when the system is restarted.`, ``),
            new Parameter_js_2.Parameter(`<probability>`, `Number between 1 and 10,000 specifying the fault injection probability. For example, specifying 100 means a fault injection probability of 1% (100/10,000).<br /><br />if this parameter is not specified then the default probability of 6% will be used.`, ``),
            new Parameter_js_2.Parameter(`<tags>`, `Specifies the pool tags that will be injected with faults, separated by space characters. If this parameter is not specified then any pool allocation can be injected with faults.`, ``),
            new Parameter_js_2.Parameter(`<applications>`, `Specifies the image file name of the applications that will be injected with faults, separated by space characters. If this parameter is not specified then low resources simulation can take place in any application.`, ``),
            new Parameter_js_2.Parameter(`<minutes>`, `A positive number specifying the length of the period after rebooting, in minutes, during which no fault injection will occur. If this parameter is not specified then the default length of 8 minutes will be used.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Driver verifier manager.  `, `verifier /standard /driver <name> [<name> ...]  

verifier /standard /all  

verifier [/flags <flags>] [/faults [<probability> [<tags> [<applications> [<minutes>]]]] /driver <name> [<name>...]  

verifier [/flags FLAGS] [/faults [<probability> [<tags> [<applications> [<minutes>]]]] /all  

verifier /querysettings  

verifier /volatile /flags <flags>  

verifier /volatile /adddriver <name> [<name>...]  

verifier /volatile /removedriver <name> [<name>...]  

verifier /volatile /faults [<probability> [<tags> [<applications>]]  

verifier /reset  

verifier /query  

verifier /log <LogFileName> [/interval <seconds>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`verify`, [
            new Parameter_js_2.Parameter(`[on | off]`, `Switches the verify setting on or off.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Tells cmd whether to verify that your files are written correctly to a disk. If used without parameters, verify displays the current setting.`, `verify [on | off]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`vol`, [
            new Parameter_js_2.Parameter(`<Drive>:`, `Specifies the drive that contains the disk for which you want to display the volume label and serial number.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the disk volume label and serial number, if they exist.  If used without parameters, vol displays information for the current drive.`, `vol [<Drive>:]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`waitfor`, [
            new Parameter_js_2.Parameter(`/s <Computer>`, `Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer. This parameter applies to all files and folders specified in the command.`, ``),
            new Parameter_js_2.Parameter(`/u [<Domain>]<User>`, `Runs the script using the credentials of the specified user account. By default, waitfor uses the current user's credentials.`, ``),
            new Parameter_js_2.Parameter(`/p [<Password>]`, `Specifies the password of the user account that is specified in the /u parameter.`, ``),
            new Parameter_js_2.Parameter(`/si`, `Sends the specified signal across the network.`, ``),
            new Parameter_js_2.Parameter(`/t <Timeout>`, `Specifies the number of seconds to wait for a signal. By default, waitfor waits indefinitely.`, ``),
            new Parameter_js_2.Parameter(`<SignalName>`, `Specifies the signal that waitfor waits for or sends. *SignalName* is not case-sensitive.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Sends or waits for a signal on a system. Waitfor is used to synchronize computers across a network.`, `waitfor [/s <Computer> [/u [<Domain>\]<User> [/p [<Password>]]]] /si <SignalName>

waitfor [/t <Timeout>] <SignalName>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`wbadmin`, [
            new Parameter_js_2.Parameter(`[Wbadmin enable backup](wbadmin-enable-backup.md)`, `Configures and enables a regularly scheduled backup.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin disable backup](wbadmin-disable-backup.md)`, `Disables your daily backups.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin start backup](wbadmin-start-backup.md)`, `Runs a one-time backup. If used with no parameters, uses the settings from the daily backup schedule.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin stop job](wbadmin-stop-job.md)`, `Stops the currently running backup or recovery operation.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin get versions](wbadmin-get-versions.md)`, `Lists details of backups recoverable from the local computer or, if another location is specified, from another computer.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin get items](wbadmin-get-items.md)`, `Lists the items included in a backup.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin start recovery](wbadmin-start-recovery.md)`, `Runs a recovery of the volumes, applications, files, or folders specified.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin get status](wbadmin-get-status.md)`, `Shows the status of the currently running backup or recovery operation.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin get disks](wbadmin-get-disks.md)`, `Lists disks that are currently online.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin start systemstaterecovery](wbadmin-start-systemstaterecovery.md)`, `Runs a system state recovery.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin start systemstatebackup](wbadmin-start-systemstatebackup.md)`, `Runs a system state backup.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin delete systemstatebackup](wbadmin-delete-systemstatebackup.md)`, `Deletes one or more system state backups.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin start sysrecovery](wbadmin-start-sysrecovery.md)`, `Runs a recovery of the full system (at least all the volumes that contain the operating system's state). This subcommand  is only available if you are using the Windows Recovery Environment.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin restore catalog](wbadmin-restore-catalog.md)`, `Recovers a backup catalog from a specified storage location in the case where the backup catalog on the local computer has been corrupted.`, ``),
            new Parameter_js_2.Parameter(`[Wbadmin delete catalog](wbadmin-delete-catalog.md)`, `Deletes the backup catalog on the local computer. Use this subcommand only if the backup catalog on this computer is corrupted and you have no backups stored at another location that you can use to restore the catalog.`, ``),
        ], `Enables you to back up and restore your operating system, volumes, files, folders, and applications from a command prompt.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`wdsutil`, [
            new Parameter_js_2.Parameter(`[Using the add Command](using-the-add-command.md)`, `adds objects or prestages computers.`, ``),
            new Parameter_js_2.Parameter(`[Using the Approve-AutoaddDevices Command](using-the-approve-autoadddevices-command.md)`, `Approves computers that are pending administrator approval.`, ``),
            new Parameter_js_2.Parameter(`[Using the convert-RiprepImage Command](using-the-convert-riprepimage-command.md)`, `converts an existing remote Installation Preparation (RIPrep) image to a Windows Image (.wim) file.`, ``),
            new Parameter_js_2.Parameter(`[Using the copy Command](using-the-copy-command.md)`, `Copies an image or a driver group.`, ``),
            new Parameter_js_2.Parameter(`[Using the delete-AutoaddDevices Command](using-the-delete-autoadddevices-command.md)`, `deletes computers that are in the Auto-add database (which stores information about the computers on the server).`, ``),
            new Parameter_js_2.Parameter(`[Using the Disable Command](using-the-disable-command.md)`, `Disables all services for Windows Deployment Services.`, ``),
            new Parameter_js_2.Parameter(`[Using the Disconnect-Client Command](using-the-disconnect-client-command.md)`, `Disconnects a client from a multicast transmission or namespace.`, ``),
            new Parameter_js_2.Parameter(`[Using the Enable Command](using-the-enable-command.md)`, `Enables all services for Windows Deployment Services.`, ``),
            new Parameter_js_2.Parameter(`[Using the Export-Image Command](using-the-export-image-command.md)`, `Exports an image from the image store to a .wim file.`, ``),
            new Parameter_js_2.Parameter(`[Using The get Command](using-the-get-command.md)`, `Retrieves properties and attributes about the specified object.`, ``),
            new Parameter_js_2.Parameter(`[Using the Initialize-Server Command](using-the-initialize-server-command.md)`, `Configures a Windows Deployment Services server for initial use.`, ``),
            new Parameter_js_2.Parameter(`[Using the New Command](using-the-new-command.md)`, `creates new capture and discover images as well as multicast transmissions and namespaces.`, ``),
            new Parameter_js_2.Parameter(`[The progress Command](the-progress-command.md)`, `Displays the progress status while a command is being executed.`, ``),
            new Parameter_js_2.Parameter(`[Using The Reject-AutoaddDevices Command](using-the-reject-autoadddevices-command.md)`, `Rejects computers that are pending administrator approval.`, ``),
            new Parameter_js_2.Parameter(`[Using the remove Command](using-the-remove-command.md)`, `removes objects.`, ``),
            new Parameter_js_2.Parameter(`[Using the replace-Image Command](using-the-replace-image-command.md)`, `replaces a boot or installation image with a new version of that image.`, ``),
            new Parameter_js_2.Parameter(`[The Set Command](the-set-command.md)`, `Sets properties and attributes on the specified object.`, ``),
            new Parameter_js_2.Parameter(`[The start Server Command](the-start-server-command.md)`, `starts all services on the Windows Deployment Services server, including multicast transmissions, namespaces, and the Transport Server.`, ``),
            new Parameter_js_2.Parameter(`[The Stop Server Command](the-stop-server-command.md)`, `Stops all services on the Windows Deployment Services server.`, ``),
            new Parameter_js_2.Parameter(`[The uninitialize-Server Option](the-uninitialize-server-option.md)`, `reverts changes made during server initialization.`, ``),
            new Parameter_js_2.Parameter(`[The Update-ServerFiles Command](the-update-serverfiles-command.md)`, `Updates server files on the remoteInstall share.`, ``),
            new Parameter_js_2.Parameter(`[The verbose Command](the-verbose-command.md)`, `Displays verbose output for the specified command.`, ``),
        ], `wdsutil is a command-line utility used for managing your Windows Deployment Services server. To run these commands, click start, right-click Command prompt, and click Run as administrator.  `, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`wecutil`, [
            new Parameter_js_2.Parameter(`{es | enum-subscription}`, `Displays the names of all remote event subscriptions that exist.`, ``),
            new Parameter_js_2.Parameter(`{gs | get-subscription} <Subid> [/f:<Format>] [/uni:<Unicode>]`, `Displays remote subscription configuration information. <Subid> is a string that uniquely identifies a subscription. <Subid> is the same as the string that was specified in the <SubscriptionId> tag of the XML configuration file, which was used to create the subscription.`, ``),
            new Parameter_js_2.Parameter(`{gr | get-subscriptionruntimestatus} <Subid> [<Eventsource> â€¦]`, `Displays the runtime status of a subscription. <Subid> is a string that uniquely identifies a subscription. <Subid> is the same as the string that was specified in the <SubscriptionId> tag of the XML configuration file, which was used to create the subscription. <Eventsource> is a string that identifies a computer that serves as a source of events. <Eventsource> should be a fully qualified domain name, a NetBIOS name, or an IP address.`, ``),
            new Parameter_js_2.Parameter(`{ss | set-subscription} <Subid> [/e:[<Subenabled>]] [/esa:<Address>] [/ese:[<Srcenabled>]] [/aes] [/res] [/un:<Username>] [/up:<Password>] [/d:<Desc>] [/uri:<Uri>] [/cm:<Configmode>] [/ex:<Expires>] [/q:<Query>] [/dia:<Dialect>] [/tn:<Transportname>] [/tp:<Transportport>]  [/dm:<Deliverymode>] [/dmi:<Deliverymax>] [/dmlt:<Deliverytime>] [/hi:<Heartbeat>] [/cf:<Content>] [/l:<Locale>] [/ree:[<Readexist>]] [/lf:<Logfile>] [/pn:<Publishername>] [/essp:<Enableport>] [/hn:<Hostname>] [/ct:<Type>]</br>or</br>{ss | set-subscription /c:<Configfile> [/cun:<Comusername> /cup:<Compassword>]`, `Changes the subscription configuration. You can specify the subscription ID and the appropriate options to change subscription parameters, or you can specify an XML configuration file to change subscription parameters.`, ``),
            new Parameter_js_2.Parameter(`{cs | create-subscription} <Configfile> [/cun:<Username> /cup:<Password>]`, `Creates a remote subscription. <Configfile> specifies the path to the XML file that contains the subscription configuration. The path can be absolute or relative to the current directory.`, ``),
            new Parameter_js_2.Parameter(`{ds | delete-subscription} <Subid>`, `Deletes a subscription and unsubscribes from all event sources that deliver events into the event log for the subscription. Any events already received and logged are not deleted. <Subid> is a string that uniquely identifies a subscription. <Subid> is the same as the string that was specified in the <SubscriptionId> tag of the XML configuration file, which was used to create the subscription.`, ``),
            new Parameter_js_2.Parameter(`{rs | retry-subscription} <Subid> [<Eventsource>â€¦]`, `Retries to establish a connection and send a remote subscription request to an inactive subscription. Attempts to reactivate all event sources or specified event sources. Disabled sources are not retried. <Subid> is a string that uniquely identifies a subscription. <Subid> is the same as the string that was specified in the <SubscriptionId> tag of the XML configuration file, which was used to create the subscription. <Eventsource> is a string that identifies a computer that serves as a source of events. <Eventsource> should be a fully qualified domain name, a NetBIOS name, or an IP address.`, ``),
            new Parameter_js_2.Parameter(`{qc | quick-config} [/q:[<Quiet>]]`, `Configures the Windows Event Collector service to ensure a subscription can be created and sustained through reboots. This includes the following steps:</br>1.  Enable the ForwardedEvents channel if it is disabled.</br>2.  Set the Windows Event Collector service to delay start.</br>3.  Start the Windows Event Collector service if it is not running.`, ``),
        ], `Enables you to create and manage subscriptions to events that are forwarded from remote computers. The remove computer must support thye WS-Management protocol. For examples of how to use this command, see [Examples](#BKMK_examples).`, `wecutil  [{es | enum-subscription}] 

[{gs | get-subscription} <Subid> [/f:<Format>] [/uni:<Unicode>]] 

[{gr | get-subscriptionruntimestatus} <Subid> [<Eventsource> â€¦]] 

[{ss | set-subscription} [<Subid> [/e:[<Subenabled>]] [/esa:<Address>] [/ese:[<Srcenabled>]] [/aes] [/res] [/un:<Username>] [/up:<Password>] [/d:<Desc>] [/uri:<Uri>] [/cm:<Configmode>] [/ex:<Expires>] [/q:<Query>] [/dia:<Dialect>] [/tn:<Transportname>] [/tp:<Transportport>] [/dm:<Deliverymode>] [/dmi:<Deliverymax>] [/dmlt:<Deliverytime>] [/hi:<Heartbeat>] [/cf:<Content>] [/l:<Locale>] [/ree:[<Readexist>]] [/lf:<Logfile>] [/pn:<Publishername>] [/essp:<Enableport>] [/hn:<Hostname>] [/ct:<Type>]] [/c:<Configfile> [/cun:<Username> /cup:<Password>]]] 

[{cs | create-subscription} <Configfile> [/cun:<Username> /cup:<Password>]] 

[{ds | delete-subscription} <Subid>] 

[{rs | retry-subscription} <Subid> [<Eventsource>â€¦]] 

[{qc | quick-config} [/q:[<Quiet>]]].`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`wevtutil`, [
            new Parameter_js_2.Parameter(`{el | enum-logs}`, `Displays the names of all logs.`, ``),
            new Parameter_js_2.Parameter(`{gl | get-log} <Logname> [/f:<Format>]`, `Displays configuration information for the specified log, which includes whether the log is enabled or not, the current maximum size limit of the log, and the path to the file where the log is stored.`, ``),
            new Parameter_js_2.Parameter(`{sl | set-log} <Logname> [/e:<Enabled>] [/i:<Isolation>] [/lfn:<Logpath>] [/rt:<Retention>] [/ab:<Auto>] [/ms:<MaxSize>] [/l:<Level>] [/k:<Keywords>] [/ca:<Channel>] [/c:<Config>]`, `Modifies the configuration of the specified log.`, ``),
            new Parameter_js_2.Parameter(`{ep | enum-publishers}`, `Displays the event publishers on the local computer.`, ``),
            new Parameter_js_2.Parameter(`{gp | get-publisher} <Publishername> [/ge:<Metadata>] [/gm:<Message>] [/f:<Format>]]`, `Displays the configuration information for the specified event publisher.`, ``),
            new Parameter_js_2.Parameter(`{im | install-manifest} <Manifest>`, `Installs event publishers and logs from a manifest. For more information about event manifests and using this parameter, see the Windows Event Log SDK at the Microsoft Developers Network (MSDN) Web site (https://msdn.microsoft.com).`, ``),
            new Parameter_js_2.Parameter(`{um | uninstall-manifest} <Manifest>`, `Uninstalls all publishers and logs from a manifest. For more information about event manifests and using this parameter, see the Windows Event Log SDK at the Microsoft Developers Network (MSDN) Web site (https://msdn.microsoft.com).`, ``),
            new Parameter_js_2.Parameter(`{qe | query-events} <Path> [/lf:<Logfile>] [/sq:<Structquery>] [/q:<Query>] [/bm:<Bookmark>] [/sbm:<Savebm>] [/rd:<Direction>] [/f:<Format>] [/l:<Locale>] [/c:<Count>] [/e:<Element>]`, `Reads events from an event log, from a log file, or using a structured query. By default, you provide a log name for <Path>. However, if you use the /lf option, then <Path> must be a path to a log file. If you use the /sq parameter, <Path> must be a path to a file that contains a structured query.`, ``),
            new Parameter_js_2.Parameter(`{gli | get-loginfo} <Logname> [/lf:<Logfile>]`, `Displays status information about an event log or log file. If the /lf option is used, <Logname> is a path to a log file. You can run wevtutil el to obtain a list of log names.`, ``),
            new Parameter_js_2.Parameter(`{epl | export-log} <Path> <Exportfile> [/lf:<Logfile>] [/sq:<Structquery>] [/q:<Query>] [/ow:<Overwrite>]`, `Exports events from an event log, from a log file, or using a structured query to the specified file. By default, you provide a log name for <Path>. However, if you use the /lf option, then <Path> must be a path to a log file. If you use the /sq option, <Path> must be a path to a file that contains a structured query. <Exportfile> is a path to the file where the exported events will be stored.`, ``),
            new Parameter_js_2.Parameter(`{al | archive-log} <Logpath> [/l:<Locale>]`, `Archives the specified log file in a self-contained format. A subdirectory with the name of the locale is created and all locale-specific information is saved in that subdirectory. After the directory and log file are created by running wevtutil al, events in the file can be read whether the publisher is installed or not.`, ``),
            new Parameter_js_2.Parameter(`{cl | clear-log} <Logname> [/bu:<Backup>]`, `Clears events from the specified event log. The /bu option can be used to back up the cleared events.`, ``),
        ], `Enables you to retrieve information about event logs and publishers. You can also use this command to install and uninstall event manifests, to run queries, and to export, archive, and clear logs. For examples of how to use this command, see [Examples](#BKMK_examples).`, `wevtutil [{el | enum-logs}] [{gl | get-log} <Logname> [/f:<Format>]]

[{sl | set-log} <Logname> [/e:<Enabled>] [/i:<Isolation>] [/lfn:<Logpath>] [/rt:<Retention>] [/ab:<Auto>] [/ms:<MaxSize>] [/l:<Level>] [/k:<Keywords>] [/ca:<Channel>] [/c:<Config>]] 

[{ep | enum-publishers}] 

[{gp | get-publisher} <Publishername> [/ge:<Metadata>] [/gm:<Message>] [/f:<Format>]] [{im | install-manifest} <Manifest>] 

[{um | uninstall-manifest} <Manifest>] [{qe | query-events} <Path> [/lf:<Logfile>] [/sq:<Structquery>] [/q:<Query>] [/bm:<Bookmark>] [/sbm:<Savebm>] [/rd:<Direction>] [/f:<Format>] [/l:<Locale>] [/c:<Count>] [/e:<Element>]] 

[{gli | get-loginfo} <Logname> [/lf:<Logfile>]] 

[{epl | export-log} <Path> <Exportfile> [/lf:<Logfile>] [/sq:<Structquery>] [/q:<Query>] [/ow:<Overwrite>]] 

[{al | archive-log} <Logpath> [/l:<Locale>]] 

[{cl | clear-log} <Logname> [/bu:<Backup>]] [/r:<Remote>] [/u:<Username>] [/p:<Password>] [/a:<Auth>] [/uni:<Unicode>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`where`, [
            new Parameter_js_2.Parameter(`/r <Dir>`, `Indicates a recursive search, starting with the specified directory.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Returns an exit code (0 for success, 1 for failure) without displaying the list of matched files.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Displays the results of the where command in quotation marks.`, ``),
            new Parameter_js_2.Parameter(`/t`, `Displays the file size and the last modified date and time of each matched file.`, ``),
            new Parameter_js_2.Parameter(`[$<ENV>:|<Path>:]<Pattern>[ ...]`, `Specifies the search pattern for the files to match. At least one pattern is required, and the pattern can include wildcard characters (* and ?). By default, where searches the current directory and the paths that are specified in the PATH environment variable. You can specify a different path to search by using the format $*ENV*:*Pattern* (where *ENV* is an existing environment variable containing one or more paths) or by using the format *Path*:*Pattern* (where *Path* is the directory path you want to search). These optional formats should not be used with the /r command-line option.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays the location of files that match the given search pattern.`, `where [/r <Dir>] [/q] [/f] [/t] [$<ENV>:|<Path>:]<Pattern>[ ...]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`whoami`, [
            new Parameter_js_2.Parameter(`/upn`, `Displays the user name in user principal name (UPN) format.`, ``),
            new Parameter_js_2.Parameter(`/fqdn`, `Displays the user name in fully qualified domain name (FQDN) format.`, ``),
            new Parameter_js_2.Parameter(`/logonid`, `Displays the logon ID of the current user.`, ``),
            new Parameter_js_2.Parameter(`/user`, `Displays the current domain and user name and the security identifier (SID).`, ``),
            new Parameter_js_2.Parameter(`/groups`, `Displays the user groups to which the current user belongs.`, ``),
            new Parameter_js_2.Parameter(`/priv`, `Displays the security privileges of the current user.`, ``),
            new Parameter_js_2.Parameter(`/fo <Format>`, `Specifies the output format. Valid values include:</br>table Displays output in a table. This is the default value.</br>list Displays output in a list.</br>csv Displays output in comma-separated value (CSV) format.`, ``),
            new Parameter_js_2.Parameter(`/all`, `Displays all information in the current access token, including the current user name, security identifiers (SID), privileges, and groups that the current user belongs to.`, ``),
            new Parameter_js_2.Parameter(`/nh`, `Specifies that the column header should not be displayed in the output. This is valid only for table and CSV formats.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Displays user, group and privileges information for the user who is currently logged on to the local system. If used without parameters, whoami displays the current domain and user name.`, `whoami [/upn | /fqdn | /logonid]

whoami {[/user] [/groups] [/priv]} [/fo <Format>] [/nh]

whoami /all [/fo <Format>] [/nh]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`winnt`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Winnt is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`winnt32`, [
            new Parameter_js_2.Parameter(`/checkupgradeonly`, `Checks your computer for upgrade compatibility with products in Windows Server 2003.<br /><br />if you use this option with /unattend, no user input is required.  Otherwise, the results are displayed on the screen, and you can save them under the file name you specify. The default file name is upgrade.txt in the systemroot folder.`, ``),
            new Parameter_js_2.Parameter(`/cmd`, `Instructs setup to carry out a specific command before the final phase of setup. This occurs after your computer has restarted and after setup has collected the necessary configuration information, but before setup is complete.`, ``),
            new Parameter_js_2.Parameter(`<CommandLine>`, `Specifies the commandline to be carried out before the final phase of setup.`, ``),
            new Parameter_js_2.Parameter(`/cmdcons`, `On an x86-based computer, installs the recovery Console as a startup option.  The recovery Console is a command-line interface from which you can perform tasks such as starting and stopping services and accessing the local drive (including drives formatted with NTFS). You can only use the /cmdcons option after setup is finished.`, ``),
            new Parameter_js_2.Parameter(`/copydir`, `creates an additional folder within the folder in which the operating system files are installed.  for example, for x86 and x64-based computers, you could create a folder called *Private_drivers* within the i386 source folder for your installation, and place driver files in the folder. type /copydir:i386\*Private_drivers* to have setup copy that folder to  your newly installed computer, making the new folder location systemroot\*Private_drivers*.<br /><br />-   i386 specifies i386<br />-   ia64 specifies ia64<br /><br />You can use /copydir to create as many additional folders as you want.`, ``),
            new Parameter_js_2.Parameter(`<FolderName>`, `Specifies the folder that you created to hold modifications for your site.`, ``),
            new Parameter_js_2.Parameter(`/copysource`, `creates a temporary additional folder within the folder in which the operating system files are installed. You can use /copysource to create as many additional folders as you want.<br /><br />Unlike the folders /copydir creates, /copysource folders are deleted after Setup completes.`, ``),
            new Parameter_js_2.Parameter(`/debug`, `creates a debug log at the level specified, for example, /debug4:Debug.log.  The default log file is C: systemrootwinnt32.log, and`, ``),
            new Parameter_js_2.Parameter(`<level>`, `Level Values and descriptions<br /><br />-   0: Severe Errors<br />-   1: Errors<br />-   2: Default level. Warnings<br />-   3: Information<br />-   4: detailed information for debugging<br /><br />Each level includes the levels below it.`, ``),
            new Parameter_js_2.Parameter(`/dudisable`, `Prevents Dynamic Update from running. Without Dynamic Update, setup runs only with the original setup files. This option will disable Dynamic Update even if you use an answer file and specify Dynamic Update options in that file.`, ``),
            new Parameter_js_2.Parameter(`/duprepare`, `Carries out preparations on an installation share so that it can be used with Dynamic Update files that you downloaded from the Windows Update Web site. This share can then be used for installing Windows XP for multiple clients.`, ``),
            new Parameter_js_2.Parameter(`<pathName>`, `Specifies full path name.`, ``),
            new Parameter_js_2.Parameter(`/dushare`, `Specifies a share on which you previously downloaded Dynamic Update files (updated files for use with Setup) from the Windows Update Web site, and on which you previously ran /duprepare:*< pathName>*. When run on a client, specifies that the client installation will make use of the updated files on the share specified in <pathName>.`, ``),
            new Parameter_js_2.Parameter(`/emsport`, `Enables or disables Emergency Management Services during setup and after the server operating system has been installed. With Emergency Management Services, you can remotely manage a server in emergency situations that would typically require a local keyboard, mouse, and monitor, such as when the network is unavailable or the server is not functioning properly. Emergency Management Services has specific hardware requirements, and is available only for products in Windows Server 2003.<br /><br />-   com1 is applicable only for x86-based computers (not Itanium architecture-based computers).<br />-   com2is applicable only for x86-based computers (not Itanium architecture-based computers).<br />-   Default. Uses the setting specified in the BIOS Serial Port Console Redirection (SPCR) table, or, in Itanium architecture-based systems, through the EFI console device path. If you specify usebiossettings and there is no SPCR table or appropriate EFI console device path, Emergency Management Serices will not be enabled.<br />-   off disables Emergency Management Services. You can later enable it by modifying the boot settings.`, ``),
            new Parameter_js_2.Parameter(`/emsbaudrate`, `for x86-based computers, specifies the baud rate for Emergency Management Services. (The option is not applicable for Itanium architecture-based computers.) Must be used with /emsport:com1 or /emsport:com2 (otherwise,  /emsbaudrate is ignored).`, ``),
            new Parameter_js_2.Parameter(`<BaudRate>`, `Specifies baudrate of 9600, 19200, 57600, or 115200. 9600 is the default.`, ``),
            new Parameter_js_2.Parameter(`/m`, `Specifies that setup copies replacement files from an alternate location.  Instructs setup to look in the alternate location first, and if files are present, to use them instead of the files from the default location.`, ``),
            new Parameter_js_2.Parameter(`/makelocalsource`, `Instructs setup to copy all installation source files to your local hard disk.  Use /makelocalsource when installing from a cd to provide installation files when the cd is not available later in the installation.`, ``),
            new Parameter_js_2.Parameter(`/noreboot`, `Instructs setup to not restart the computer after the file copy phase of setup is completed so that you can run another command.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Specifies the source location of the files for your installation. To simultaneously copy files from multiple servers, type the /s:<Sourcepath> option multiple times (up to a maximum of eight). If you type the option multiple times, the first server specified must be available, or setup will fail.`, ``),
            new Parameter_js_2.Parameter(`<Sourcepath>`, `Specifies full source path name.`, ``),
            new Parameter_js_2.Parameter(`/syspart`, `On an x86-based computer, specifies that you can copy setup startup files to a hard disk, mark the disk as active, and then install the disk into another computer. When you start that computer, it automatically starts with the next phase of setup.<br /><br />You must always use the /tempdrive parameter with the /syspart parameter.<br /><br />You can start winnt32 with the /syspart option on an x86-based computer running Windows NT 4.0, Windows 2000, Windows XP, or a product in Windows Server 2003. If the computer is running Windows NT version 4.0, it requires Service Pack 5 or later. The computer cannot be running Windows 95, Windows 98, or Windows Millennium edition.`, ``),
            new Parameter_js_2.Parameter(`<DriveLetter>`, `Specifies the drive letter.`, ``),
            new Parameter_js_2.Parameter(`/tempdrive`, `directs setup to place temporary files on the specified partition.<br /><br />for a new installation, the server operating system will also be installed on the specified partition.<br /><br />for an upgrade, the /tempdrive option affects the placement of temporary files only; the operating system will be upgraded in the partition from which you run winnt32.`, ``),
            new Parameter_js_2.Parameter(`/udf`, `Indicates an identifier (<ID>) that setup uses to specify how a Uniqueness Database (UDB) file modifies an answer file (see the /unattend option).  The UDB overrides values in the answer file, and the identifier determines which values in the UDB file are used. For example, /udf:RAS_user,Our_company.udb overrides settings specified for the RAS_user identifier in the Our_company.udb  file. If no <UDB_file> is specified, setup prompts the user to insert a disk that contains the $Unique$.udb file.`, ``),
            new Parameter_js_2.Parameter(`<ID>`, `Indicates an identifier used to specify how a Uniqueness Database (UDB) file modifies an answer file.`, ``),
            new Parameter_js_2.Parameter(`<UDB_file>`, `Specifies a Uniqueness Database (UDB) file.`, ``),
            new Parameter_js_2.Parameter(`/unattend`, `On an x86-based computer, upgrades your previous version of Windows NT 4.0 Server (with Service Pack 5 or later) or Windows 2000 in unattended setup mode. All user settings are taken from the previous installation, so no user intervention is required during setup.`, ``),
            new Parameter_js_2.Parameter(`<num>`, `Specifies the number of seconds between the time that setup finishes copying the files and when it restarts your computer. You can use <Num> on any computer running Windows 98, Windows Millennium edition, Windows NT, Windows 2000, Windows XP, or a product in Windows Server 2003 . If the computer is running Windows NT version 4.0, it requires Service Pack 5 or later.`, ``),
            new Parameter_js_2.Parameter(`<AnswerFile>`, `Provides setup with your custom specifications`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Performs an installation of or upgrade to a product in Windows Server 2003. You can run winnt32 at the command prompt on a computer running Windows 95, Windows 98, Windows Millennium edition, Windows NT, Windows 2000, Windows XP, or a product in the Windows Server 2003. If you run winnt32 on a computer running Windows NT version 4.0, you must first apply Service Pack 5 or later.`, `winnt32 [/checkupgradeonly] [/cmd: <CommandLine>] [/cmdcons] [/copydir:{i386|ia64}\<FolderName>] [/copysource: <FolderName>] [/debug[<Level>]:[ <FileName>]] [/dudisable] [/duprepare: <pathName>] [/dushare: <pathName>] [/emsport:{com1|com2|usebiossettings|off}] [/emsbaudrate: <BaudRate>] [/m: <FolderName>]  [/makelocalsource] [/noreboot] [/s: <Sourcepath>] [/syspart: <DriveLetter>] [/tempdrive: <DriveLetter>] [/udf: <ID>[,<UDB_File>]] [/unattend[<Num>]:[ <AnswerFile>]]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`winpop`, [
            new Parameter_js_2.Parameter(`t`, `i`, ``),
            new Parameter_js_2.Parameter(`d`, `e`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`a`, `u`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`m`, `a`, ``),
            new Parameter_js_2.Parameter(`m`, `s`, ``),
            new Parameter_js_2.Parameter(`-`, `-`, ``),
        ], `Winpop is deprecated, and is not guaranteed to be supported in future releases of Windows.`, ``, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`winrs`, [
            new Parameter_js_2.Parameter(`[/remote]:<endpoint>`, `Specifies the target endpoint using a NetBIOS name or the standard connection:<br /><br />-   <url>: [<transport>://]<target>[:<port>]<br /><br />if not specified, /r:localhost is used.`, ``),
            new Parameter_js_2.Parameter(`/unencrypted]`, `Specifies that the messages to the remote shell will not be encrypted. This is useful for troubleshooting or when the network traffic is already encrypted using ipsec, or when physical security is enforced.<br /><br />By default, the messages are encrypted using Kerberos or NTLM keys.<br /><br />This command-line option is ignored when HTTPS transport is selected.`, ``),
            new Parameter_js_2.Parameter(`/username]:<username>`, `Specifies username on command line.<br /><br />if not specified, the tool will use Negotiate authentication or prompt for the name.<br /><br />if /username is specified, /password must also be specified.`, ``),
            new Parameter_js_2.Parameter(`/password]:<password>`, `Specifies password on command line.<br /><br />if /password is not specified but /username is, the tool will prompt for the password.<br /><br />if /password is specified, /username must also be specified.`, ``),
            new Parameter_js_2.Parameter(`/timeout:<seconds>`, `This option is deprecated.`, ``),
            new Parameter_js_2.Parameter(`/directory:<path>`, `Specifies starting directory for remote shell.<br /><br />if not specified, the remote shell will start in the user's home directory defined by the environment variable %USERPROFILE%.`, ``),
            new Parameter_js_2.Parameter(`/environment:<string>=<value>`, `Specifies a single environment variable to be set when shell starts, which allows changing default environment for shell.<br /><br />Multiple occurrences of this switch must be used to specify multiple environment variables.`, ``),
            new Parameter_js_2.Parameter(`/noecho`, `Specifies that echo should be disabled. This may be necessary to ensure that user's answers to remote prompts are not displayed locally.<br /><br />By default echo is "on".`, ``),
            new Parameter_js_2.Parameter(`/noprofile`, `Specifies that the user's profile should not be loaded.<br /><br />By default, the server will attempt to load the user profile.<br /><br />if the remote user is not a local administrator on the target system, then this option will be required (the default will result in error).`, ``),
            new Parameter_js_2.Parameter(`/allowdelegate`, `Specifies that the user's credentials can be used to access a remote share, for example, found on a different machine than the target endpoint.`, ``),
            new Parameter_js_2.Parameter(`/compression`, `Turn on compression.  Older installations on remote machines may not support compression so it is off by default.<br /><br />Default setting is off, since older installations on remote machines may not support compression.`, ``),
            new Parameter_js_2.Parameter(`/usessl`, `Use an SSL connection when using a remote endpoint.  Specifying this instead of the transport https: will use the default WinRM default port.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Windows remote Management allows you to manage and execute programs remotely.   `, `winrs [/<parameter>[:<value>]] <command>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`wmic`, [
            new Parameter_js_2.Parameter(`class`, `Escapes from the default alias mode of WMIC to access classes in the WMI schema directly.`, ``),
            new Parameter_js_2.Parameter(`path`, `Escapes from the default alias mode of WMIC to access instances in the WMI schema directly.`, ``),
            new Parameter_js_2.Parameter(`context`, `Displays the current values of all global switches.`, ``),
            new Parameter_js_2.Parameter(`[quit | exit]`, `Exits the WMIC command shell.`, ``),
        ], `Displays WMI information inside an interactive command shell.`, `command </parameter>`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`wscript`, [
            new Parameter_js_2.Parameter(`scriptname`, `Specifies the path and file name of the script file.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Specifies batch mode, which does not display alerts, scripting errors, or input prompts. This is the opposite of /i.`, ``),
            new Parameter_js_2.Parameter(`/d`, `Starts the debugger.`, ``),
            new Parameter_js_2.Parameter(`/e`, `Specifies the engine that is used to run the script. This lets you run scripts that use a custom file name extension. Without the /e parameter, you can only run scripts that use registered file name extensions. For example, if you try to run this command:<br>"""cscript test.admin"""<br>You will receive this error message: Input Error: There is no script engine for file extension ".admin."<br>One advantage of using nonstandard file name extensions is that it guards against accidentally double-clicking a script and running something you really did not want to run. <br>This does not create a permanent association between the .admin file name extension and VBScript. Each time you run a script that uses a .admin file name extension, you will need to use the /e parameter.`, ``),
            new Parameter_js_2.Parameter(`/h:cscript`, `Registers cscript.exe as the default script host for running scripts.`, ``),
            new Parameter_js_2.Parameter(`/h:wscript`, `Registers wscript.exe as the default script host for running scripts. This is the default when the /h option is omitted.`, ``),
            new Parameter_js_2.Parameter(`/i`, `Specifies interactive mode, which displays alerts, scripting errors, and input prompts.</br>This is the default and the opposite of /b.`, ``),
            new Parameter_js_2.Parameter(`/job:<identifier>`, `Runs the job identified by *identifier* in a .wsf script file.`, ``),
            new Parameter_js_2.Parameter(`/logo`, `Specifies that the Windows Script Host banner is displayed in the console before the script runs.</br>This is the default and the opposite of /nologo.`, ``),
            new Parameter_js_2.Parameter(`/nologo`, `Specifies that the Windows Script Host banner is not displayed before the script runs. This is the opposite of /logo.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Saves the current command prompt options for the current user.`, ``),
            new Parameter_js_2.Parameter(`/t:<number>`, `Specifies the maximum time the script can run (in seconds). You can specify up to 32,767 seconds.</br>The default is no time limit.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Starts the script in the debugger.`, ``),
            new Parameter_js_2.Parameter(`ScriptArguments`, `Specifies the arguments passed to the script. Each script argument must be preceded by a slash (/).`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays Help at the command prompt.`, ``),
        ], `Windows Script Host provides an environment in which users can execute scripts in a variety of languages that use a variety of object models to perform tasks.`, `wscript [<scriptname>] [/b] [/d] [/e:<engine>] [{/h:cscript|/h:wscript}] [/i] [/job:<identifier>] [{/logo|/nologo}] [/s] [/t:<number>] [/x] [/?] [<ScriptArguments>]`, "", () => { }),
        new ConsoleCommand_js_2.ConsoleCommand(`xcopy`, [
            new Parameter_js_2.Parameter(`<Source>`, `Required. Specifies the location and names of the files you want to copy. This parameter must include either a drive or a path.`, ``),
            new Parameter_js_2.Parameter(`[<Destination>]`, `Specifies the destination of the files you want to copy. This parameter can include a drive letter and colon, a directory name, a file name, or a combination of these.`, ``),
            new Parameter_js_2.Parameter(`/w`, `Displays the following message and waits for your response before starting to copy files:</br>Press any key to begin copying file(s)`, ``),
            new Parameter_js_2.Parameter(`/p`, `Prompts you to confirm whether you want to create each destination file.`, ``),
            new Parameter_js_2.Parameter(`/c`, `Ignores errors.`, ``),
            new Parameter_js_2.Parameter(`/v`, `Verifies each file as it is written to the destination file to make sure that the destination files are identical to the source files.`, ``),
            new Parameter_js_2.Parameter(`/q`, `Suppresses the display of xcopy messages.`, ``),
            new Parameter_js_2.Parameter(`/f`, `Displays source and destination file names while copying.`, ``),
            new Parameter_js_2.Parameter(`/l`, `Displays a list of files that are to be copied.`, ``),
            new Parameter_js_2.Parameter(`/g`, `Creates decrypted *Destination* files when the destination does not support encryption.`, ``),
            new Parameter_js_2.Parameter(`/d [:MM-DD-YYYY]`, `Copies source files changed on or after the specified date only. If you do not include a *MM-DD-YYYY* value, xcopy copies all *Source* files that are newer than existing *Destination* files. This command-line option allows you to update files that have changed.`, ``),
            new Parameter_js_2.Parameter(`/u`, `Copies files from *Source* that exist on *Destination* only.`, ``),
            new Parameter_js_2.Parameter(`/i`, `If *Source* is a directory or contains wildcards and *Destination* does not exist, xcopy assumes *Destination* specifies a directory name and creates a new directory. Then, xcopy copies all specified files into the new directory. By default, xcopy prompts you to specify whether *Destination* is a file or a directory.`, ``),
            new Parameter_js_2.Parameter(`/s`, `Copies directories and subdirectories, unless they are empty. If you omit /s, xcopy works within a single directory.`, ``),
            new Parameter_js_2.Parameter(`/e`, `Copies all subdirectories, even if they are empty. Use /e with the /s and /t command-line options.`, ``),
            new Parameter_js_2.Parameter(`/t`, `Copies the subdirectory structure (that is, the tree) only, not files. To copy empty directories, you must include the /e command-line option.`, ``),
            new Parameter_js_2.Parameter(`/k`, `Copies files and retains the read-only attribute on *Destination* files if present on the *Source* files. By default, xcopy removes the read-only attribute.`, ``),
            new Parameter_js_2.Parameter(`/r`, `Copies read-only files.`, ``),
            new Parameter_js_2.Parameter(`/h`, `Copies files with hidden and system file attributes. By default, xcopy does not copy hidden or system files`, ``),
            new Parameter_js_2.Parameter(`/a`, `Copies only *Source* files that have their archive file attributes set. /a does not modify the archive file attribute of the source file. For information about how to set the archive file attribute by using attrib, see [Additional references](xcopy.md#BKMK_addref).`, ``),
            new Parameter_js_2.Parameter(`/m`, `Copies *Source* files that have their archive file attributes set. Unlike /a, /m turns off archive file attributes in the files that are specified in the source. For information about how to set the archive file attribute by using attrib, see [Additional references](xcopy.md#BKMK_addref).`, ``),
            new Parameter_js_2.Parameter(`/n`, `Creates copies by using the NTFS short file or directory names. /n is required when you copy files or directories from an NTFS volume to a FAT volume or when the FAT file system naming convention (that is, 8.3 characters) is required on the *Destination* file system. The *Destination* file system can be FAT or NTFS.`, ``),
            new Parameter_js_2.Parameter(`/o`, `Copies file ownership and discretionary access control list (DACL) information.`, ``),
            new Parameter_js_2.Parameter(`/x`, `Copies file audit settings and system access control list (SACL) information (implies /o).`, ``),
            new Parameter_js_2.Parameter(`/exclude:FileName1[+[FileName2][+[FileName3]( )]`, `Specifies a list of files. At least one file must be specified. Each file will contain search strings with each string on a separate line in the file.</br>When any of the strings match any part of the absolute path of the file to be copied, that file will be excuded from being copied. For example, specifying the string obj will exclude all files underneath the directory obj or all files with the .obj extension.`, ``),
            new Parameter_js_2.Parameter(`/y`, `Suppresses prompting to confirm that you want to overwrite an existing destination file.`, ``),
            new Parameter_js_2.Parameter(`/-y`, `Prompts to confirm that you want to overwrite an existing destination file.`, ``),
            new Parameter_js_2.Parameter(`/z`, `Copies over a network in restartable mode.`, ``),
            new Parameter_js_2.Parameter(`/b`, `Copies the symbolic link instead of the files. This parameter was introduced in Windows VistaÂ®.`, ``),
            new Parameter_js_2.Parameter(`/j`, `Copies files without buffering. Recommended for very large files. This parameter was added in Windows Server 2008 R2.`, ``),
            new Parameter_js_2.Parameter(`/?`, `Displays help at the command prompt.`, ``),
        ], `Copies files and directories, including subdirectories`, `Xcopy <Source> [<Destination>] [/w] [/p] [/c] [/v] [/q] [/f] [/l] [/g] [/d [:MM-DD-YYYY]] [/u] [/i] [/s [/e]] [/t] [/k] [/r] [/h] [{/a | /m}] [/n] [/o] [/x] [/exclude:FileName1[+[FileName2]][+[FileName3]] [{/y | /-y}] [/z] [/b] [/j]`, "", () => { }),
    ];
    exports.CMDCommands = commands;
});
define("Main/Commands/PSCommands", ["require", "exports", "Shared/Models/ConsoleCommand", "Shared/Models/Parameter"], function (require, exports, ConsoleCommand_js_3, Parameter_js_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PSCommands = void 0;
    var commands = [
        new ConsoleCommand_js_3.ConsoleCommand(`Add-BCDataCacheExtension`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-BitLockerKeyProtector`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-DnsClientNrptRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-DtcClusterTMMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-EtwTraceProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-InitiatorIdToMaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventNetworkAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventPacketCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventVFPProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventVmNetworkAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventVmSwitch`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventVmSwitchProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetEventWFPCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetIPHttpsCertBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetLbfoTeamMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetLbfoTeamNic`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetNatExternalAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetNatStaticMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-NetSwitchTeamMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-OdbcDsn`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-PartitionAccessPath`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-PhysicalDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-Printer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-PrinterDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-PrinterPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-StorageFaultDomain`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-TargetPortToMaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-VirtualDiskToMaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-VpnConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-VpnConnectionRoute`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-VpnConnectionTriggerApplication`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-VpnConnectionTriggerDnsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-VpnConnectionTriggerTrustedNetwork`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`AfterAll`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`AfterEach`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Assert-MockCalled`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Assert-VerifiableMocks`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Backup-BitLockerKeyProtector`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`BackupToAAD-BitLockerKeyProtector`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`BeforeAll`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`BeforeEach`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Block-FileShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Block-SmbShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-AssignedAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-BCCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-BitLockerAutoUnlock`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-Disk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-DnsClientCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-FileStorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-PcsvDeviceLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-StorageBusDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-StorageDiagnosticInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Close-SmbOpenFile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Close-SmbSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Compress-Archive`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Compress-Archive`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Configuration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Configuration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Connect-IscsiTarget`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Connect-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Context`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-NetIPsecMainModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-NetIPsecPhase1AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-NetIPsecPhase2AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-NetIPsecQuickModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Debug-FileShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Debug-MMAppPrelaunch`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Debug-StorageSubSystem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Debug-Volume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Describe`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-BC`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-BCDowngrading`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-BCServeOnBattery`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-BitLocker`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-BitLockerAutoUnlock`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-DAManualEntryPointSelection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-DscDebug`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-MMAgent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterChecksumOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterEncapsulatedPacketTaskOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterIPsecOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterLso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterPacketDirect`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterPowerManagement`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterQos`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterRdma`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterRsc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterRss`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterSriov`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterUso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetAdapterVmq`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetDnsTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetIPHttpsProfile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetNatTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetworkSwitchEthernetPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetworkSwitchFeature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-NetworkSwitchVlan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-OdbcPerfCounter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PhysicalDiskIdentification`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PnpDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PSTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PSTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PSWSManCombinedTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PSWSManCombinedTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-SmbDelegation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-StorageBusCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-StorageBusDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-StorageEnclosureIdentification`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-StorageEnclosurePower`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-StorageHighAvailability`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-StorageMaintenanceMode`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-WdacBidTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-WSManTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-WSManTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disconnect-IscsiTarget`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disconnect-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Dismount-DiskImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BCDistributed`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BCDowngrading`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BCHostedClient`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BCHostedServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BCLocal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BCServeOnBattery`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BitLocker`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-BitLockerAutoUnlock`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-DAManualEntryPointSelection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-DscDebug`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-MMAgent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterChecksumOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterEncapsulatedPacketTaskOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterIPsecOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterLso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterPacketDirect`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterPowerManagement`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterQos`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterRdma`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterRsc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterRss`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterSriov`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterUso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetAdapterVmq`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetDnsTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetIPHttpsProfile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetNatTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetworkSwitchEthernetPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetworkSwitchFeature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-NetworkSwitchVlan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-OdbcPerfCounter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PhysicalDiskIdentification`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PnpDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PSTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PSTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PSWSManCombinedTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PSWSManCombinedTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-SmbDelegation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-StorageBusCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-StorageBusDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-StorageEnclosureIdentification`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-StorageEnclosurePower`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-StorageHighAvailability`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-StorageMaintenanceMode`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-WdacBidTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-WSManTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-WSManTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Expand-Archive`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Expand-Archive`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-BCCachePackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-BCSecretKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-ODataEndpointProxy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-Command`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-Command`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-DSCResource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-DscResource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-NetRoute`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-RoleCapability`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-RoleCapability`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Flush-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Format-Volume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppBackgroundTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppvVirtualProcess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppxLastError`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppxLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AssignedAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AutologgerConfig`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCClientConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCContentServerConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCDataCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCDataCacheExtension`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCHashCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCHostedCacheServerConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCNetworkConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BCStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BitLockerVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ClusteredScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CredsFromCredentialProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DAClientExperienceConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DAConnectionStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DAEntryPointTableItem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DedupProperties`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Disk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DiskImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DiskStorageNodeView`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DnsClient`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DnsClientCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DnsClientGlobalSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DnsClientNrptGlobal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DnsClientNrptPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DnsClientNrptRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DnsClientServerAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DscConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DscConfigurationStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DscLocalConfigurationManager`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DscResource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DscResource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Dtc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcAdvancedHostSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcAdvancedSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcClusterDefault`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcClusterTMMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcDefault`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcNetworkSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcTransaction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcTransactionsStatistics`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcTransactionsTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DtcTransactionsTraceSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-EtwTraceProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-FileIntegrity`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-FileShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-FileShareAccessControlEntry`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-FileStorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-InitiatorId`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-InitiatorPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-InstalledModule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-InstalledModule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-InstalledScript`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-InstalledScript`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-IscsiConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-IscsiSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-IscsiTarget`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-IscsiTargetPortal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-IseSnippet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-LogProperties`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-LogProperties`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MMAgent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MockDynamicParameters`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpComputerStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpComputerStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpThreat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpThreat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpThreatCatalog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpThreatCatalog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpThreatDetection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MpThreatDetection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NCSIPolicyConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Net6to4Configuration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterAdvancedProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterChecksumOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterEncapsulatedPacketTaskOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterHardwareInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterIPsecOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterLso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterPacketDirect`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterPowerManagement`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterQos`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterRdma`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterRsc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterRss`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterSriov`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterSriovVf`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterStatistics`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterUso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterVmq`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterVMQQueue`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetAdapterVPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetCompartment`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetConnectionProfile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetDnsTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetDnsTransitionMonitoring`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventNetworkAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventPacketCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventVFPProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventVmNetworkAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventVmSwitch`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventVmSwitchProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetEventWFPCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallAddressFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallApplicationFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallInterfaceFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallInterfaceTypeFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallPortFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallProfile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallSecurityFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallServiceFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetFirewallSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPHttpsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPHttpsState`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPInterface`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecDospSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecMainModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecMainModeSA`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecPhase1AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecPhase2AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecQuickModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecQuickModeSA`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPv4Protocol`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIPv6Protocol`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetIsatapConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetLbfoTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetLbfoTeamMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetLbfoTeamNic`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNatExternalAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNatGlobal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNatSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNatStaticMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNatTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNatTransitionMonitoring`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetNeighbor`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetOffloadGlobalSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetPrefixPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetQosPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetRoute`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetSwitchTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetSwitchTeamMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetTCPConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetTCPSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetTeredoConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetTeredoState`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetTransportFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetUDPEndpoint`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetUDPSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetView`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetworkSwitchEthernetPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetworkSwitchFeature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetworkSwitchGlobalData`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NetworkSwitchVlan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-OdbcDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-OdbcDsn`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-OdbcPerfCounter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-OffloadDataTransferSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-OperationValidation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Partition`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PartitionSupportedSize`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PcsvDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PcsvDeviceLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PhysicalDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PhysicalDiskStorageNodeView`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PhysicalExtent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PhysicalExtentAssociation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PnpDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PnpDeviceProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PrintConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Printer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PrinterDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PrinterPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PrinterProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PrintJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ResiliencySetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ScheduledTaskInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbBandWidthLimit`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbClientConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbClientNetworkInterface`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbDelegation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbGlobalMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbMultichannelConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbMultichannelConstraint`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbOpenFile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbServerConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbServerNetworkInterface`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SmbWitnessClient`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StartApps`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageAdvancedProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageBusBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageBusDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageChassis`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageDiagnosticInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageEnclosure`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageEnclosureStorageNodeView`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageEnclosureVendorData`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageExtendedStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageFaultDomain`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageFileServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageFirmwareInformation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageHealthAction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageHealthReport`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageHealthSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageHistory`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageNode`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StoragePool`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageRack`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageReliabilityCounter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageScaleUnit`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageSite`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageSubSystem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-StorageTierSupportedSize`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SupportedClusterSizes`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SupportedFileSystems`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TargetPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TargetPortal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TestDriveItem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-VirtualDiskSupportedSize`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Volume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-VolumeCorruptionCount`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-VolumeScrubPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-VpnConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-VpnConnectionTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WdacBidTrace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsUpdateLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WUAVersion`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WUIsPendingReboot`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WULastInstallationDate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WULastScanSuccessDate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Grant-FileShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Grant-SmbShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Hide-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-BCCachePackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-BCSecretKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-IseSnippet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`In`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Initialize-Disk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`InModuleScope`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-Dtc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-WUUpdates`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-AsWorkflow`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-DscResource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-Mock`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-OperationValidation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-Pester`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`It`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Lock-BitLocker`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Mock`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Mount-DiskImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Move-SmbWitnessClient`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-AutologgerConfig`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-DAEntryPointTableItem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-DscChecksum`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-DscChecksum`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-EapConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-FileShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Fixture`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-IscsiTargetPortal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-IseSnippet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-MaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetAdapterAdvancedProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetEventSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPHttpsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecDospSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecMainModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecPhase1AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecPhase2AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecQuickModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetLbfoTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetNat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetNatTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetNeighbor`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetQosPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetRoute`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetSwitchTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetTransportFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetworkSwitchVlan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Partition`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PesterOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSWorkflowSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScheduledTaskAction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScheduledTaskPrincipal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScheduledTaskSettingsSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScheduledTaskTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScriptFileInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScriptFileInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-SmbGlobalMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-SmbMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-SmbMultichannelConstraint`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-SmbShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-StorageBusBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-StorageBusCacheStore`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-StorageFileServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-StoragePool`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-StorageSubsystemVirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-StorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-VirtualDiskClone`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-VirtualDiskSnapshot`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Volume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-VpnServerAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Open-NetGPO`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Optimize-StoragePool`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Optimize-Volume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`PSConsoleHostReadLine`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Publish-BCFileContent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Publish-BCWebContent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Publish-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Publish-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Publish-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Publish-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Read-PrinterNfcTag`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-ClusteredScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-DnsClient`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-IscsiSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-StorageSubsystem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-AutologgerConfig`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-BCDataCacheExtension`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-BitLockerKeyProtector`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-DAEntryPointTableItem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-DnsClientNrptRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-DscConfigurationDocument`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-DtcClusterTMMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-EtwTraceProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-FileShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-InitiatorId`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-InitiatorIdFromMaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-IscsiTargetPortal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-MaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-MpThreat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-MpThreat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetAdapterAdvancedProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventNetworkAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventPacketCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventVFPProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventVmNetworkAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventVmSwitch`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventVmSwitchProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetEventWFPCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPHttpsCertBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPHttpsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecDospSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecMainModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecMainModeSA`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecPhase1AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecPhase2AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecQuickModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecQuickModeSA`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetLbfoTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetLbfoTeamMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetLbfoTeamNic`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetNat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetNatExternalAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetNatStaticMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetNatTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetNeighbor`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetQosPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetRoute`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetSwitchTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetSwitchTeamMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetTransportFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetworkSwitchEthernetPortIPAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-NetworkSwitchVlan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-OdbcDsn`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Partition`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PartitionAccessPath`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PhysicalDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Printer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PrinterDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PrinterPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PrintJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-SmbBandwidthLimit`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-SmbGlobalMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-SmbMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-SmbMultichannelConstraint`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-SmbShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-StorageBusBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-StorageFaultDomain`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-StorageFileServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-StorageHealthIntent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-StorageHealthSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-StoragePool`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-StorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-TargetPortFromMaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-VirtualDiskFromMaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-VpnConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-VpnConnectionRoute`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-VpnConnectionTriggerApplication`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-VpnConnectionTriggerDnsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-VpnConnectionTriggerTrustedNetwork`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-DAEntryPointTableItem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-MaskingSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetIPHttpsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetIPsecMainModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetIPsecPhase1AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetIPsecPhase2AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetIPsecQuickModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetLbfoTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-NetSwitchTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-Printer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Repair-FileIntegrity`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Repair-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Repair-Volume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-BC`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-DAClientExperienceConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-DAEntryPointTableItem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-DtcLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-NCSIPolicyConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-Net6to4Configuration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-NetAdapterAdvancedProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-NetDnsTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-NetIPHttpsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-NetIsatapConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-NetTeredoConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-PhysicalDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Reset-StorageReliabilityCounter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resize-Partition`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resize-StorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resize-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Restart-NetAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Restart-PcsvDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Restart-PrintJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Restore-DscConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Restore-NetworkSwitchConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resume-BitLocker`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resume-PrintJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resume-StorageBusDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Revoke-FileShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Revoke-SmbShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`SafeGetCommand`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-NetGPO`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-NetworkSwitchConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Send-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-AssignedAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-BCAuthentication`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-BCCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-BCDataCacheEntryMaxAge`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-BCMinSMBLatency`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-BCSecretKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ClusteredScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DAClientExperienceConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DAEntryPointTableItem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Disk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DnsClient`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DnsClientGlobalSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DnsClientNrptGlobal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DnsClientNrptRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DnsClientServerAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcAdvancedHostSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcAdvancedSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcClusterDefault`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcClusterTMMapping`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcDefault`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcNetworkSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcTransaction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcTransactionsTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DtcTransactionsTraceSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DynamicParameterVariables`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-EtwTraceProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-FileIntegrity`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-FileShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-FileStorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-InitiatorPort`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-IscsiChapSecret`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-LogProperties`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-LogProperties`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-MMAgent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-MpPreference`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NCSIPolicyConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Net6to4Configuration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterAdvancedProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterBinding`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterChecksumOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterEncapsulatedPacketTaskOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterIPsecOffload`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterLso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterPacketDirect`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterPowerManagement`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterQos`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterRdma`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterRsc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterRss`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterSriov`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterUso`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetAdapterVmq`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetConnectionProfile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetDnsTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetEventPacketCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetEventProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetEventSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetEventVFPProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetEventVmSwitchProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetEventWFPCaptureProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallAddressFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallApplicationFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallInterfaceFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallInterfaceTypeFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallPortFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallProfile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallSecurityFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallServiceFilter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetFirewallSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPHttpsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPInterface`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPsecDospSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPsecMainModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPsecMainModeRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPsecPhase1AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPsecPhase2AuthSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPsecQuickModeCryptoSet`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPv4Protocol`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIPv6Protocol`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetIsatapConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetLbfoTeam`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetLbfoTeamMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetLbfoTeamNic`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetNat`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetNatGlobal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetNatTransitionConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetNeighbor`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetOffloadGlobalSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetQosPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetRoute`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetTCPSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetTeredoConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetUDPSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetworkSwitchEthernetPortIPAddress`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetworkSwitchPortMode`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetworkSwitchPortProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NetworkSwitchVlanProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-OdbcDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-OdbcDsn`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Partition`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PcsvDeviceBootConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PcsvDeviceNetworkConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PcsvDeviceUserPassword`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PhysicalDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PrintConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Printer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PrinterProperty`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ResiliencySetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-SmbBandwidthLimit`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-SmbClientConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-SmbPathAcl`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-SmbServerConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-SmbShare`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StorageBusProfile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StorageFileServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StorageHealthSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StoragePool`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StorageProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StorageSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StorageSubSystem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StorageTier`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-TestInconclusive`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Volume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-VolumeScrubPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-VpnConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-VpnConnectionIPsecConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-VpnConnectionProxy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-VpnConnectionTriggerDnsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-VpnConnectionTriggerTrustedNetwork`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Setup`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Should`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Show-NetFirewallRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Show-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Show-StorageHistory`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Show-VirtualDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-AppBackgroundTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-AppvVirtualProcess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-AutologgerConfig`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Dtc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-DtcTransactionsTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-MpScan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-MpScan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-MpWDOScan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-MpWDOScan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-NetEventSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-PcsvDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-StorageDiagnosticLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Trace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Trace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-WUScan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-DscConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Dtc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-DtcTransactionsTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-NetEventSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-PcsvDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-StorageDiagnosticLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-StorageJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Trace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Trace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Suspend-BitLocker`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Suspend-PrintJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Suspend-StorageBusDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Sync-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-Dtc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-NetConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-ScriptFileInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-ScriptFileInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unblock-FileShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unblock-SmbShareAccess`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-Dtc`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unlock-BitLocker`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-AppBackgroundTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-ClusteredScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-IscsiSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-PSRepository`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-ScheduledTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-StorageSubsystem`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-AutologgerConfig`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-Disk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-DscConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-EtwTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-HostStorageCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-IscsiTarget`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-IscsiTargetPortal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-Module`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-ModuleManifest`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-ModuleManifest`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-MpSignature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-MpSignature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-NetIPsecRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-Script`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-ScriptFileInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-ScriptFileInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-SmbMultichannelConnection`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-StorageFirmware`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-StoragePool`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-StorageProviderCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-DtcTransactionsTraceSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-PrinterNfcTag`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-VolumeCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-AppxPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-AppxProvisionedPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-AppxVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-BitsFile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-CertificateEnrollmentPolicyServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-Content`, [
            new Parameter_js_3.Parameter(`AsByteStream`, `Specifies that the content should be read as a stream of bytes. This parameter was introduced in PowerShell 6.0.


A warning occurs when you use the AsByteStream parameter with the Encoding parameter. The AsByteStream parameter ignores any encoding and the output is returned as a stream of bytes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


Encoding is a dynamic parameter that the FileSystem provider adds to the "Add-Content" cmdlet. This parameter works only in file system drives.


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Overrides the read-only attribute, allowing you to add content to a read-only file. For example, Force will override the read-only attribute or create directories to complete a file path, but it will not attempt to change file permissions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`NoNewline`, `Indicates that this cmdlet does not add a new line or carriage return to the content.


The string representations of the input objects are concatenated to form the output. No spaces or newlines are inserted between the output strings. No newline is added after the last output string.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the added content. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the items that receive the additional content. Wildcard characters are permitted. The paths must be paths to items, not to containers. For example, you must specify a path to one or more files, not a path to a directory. If you specify multiple paths, use commas to separate the paths.`, `String[]`),
            new Parameter_js_3.Parameter(`Stream`, `Specifies an alternative data stream for content. If the stream does not exist, this cmdlet creates it. Wildcard characters are not supported. Stream is a dynamic parameter that the FileSystem provider adds to "Add-Content". This parameter works only in file system drives.


You can use the "Add-Content" cmdlet to change the content of the Zone.Identifier alternate data stream. However, we do not recommend this as a way to eliminate security checks that block files that are downloaded from the Internet. If you verify that a downloaded file is safe, use the "Unblock-File" cmdlet.


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the content to be added. Type a quoted string, such as **This data is for internal use only , or specify an object that contains content, such as the DateTime** object that "Get-Date" generates.


You cannot specify the contents of a file by typing its path, because the path is just a string. You can use a "Get-Content" command to get the content and pass it to the Value parameter.`, `Object[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Adds content to the specified items, such as adding words to a file.`, `Add-Content [-Value] <Object[]> [-AsByteStream] [-Credential <PSCredential>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-NoNewline] [-PassThru] [-Stream <String>] [-Confirm] [-WhatIf] [<CommonParameters>]

Add-Content [-Path] <String[]> [-Value] <Object[]> [-AsByteStream] [-Credential <PSCredential>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-NoNewline] [-PassThru] [-Stream <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-History`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies an array of entries to add to the history as HistoryInfo object to the session history. You can use this parameter to submit a HistoryInfo object, such as the ones that are returned by the Get-History , Import-Clixml, or Import-Csv cmdlets, to Add-History .`, `PSObject[]`),
            new Parameter_js_3.Parameter(`Passthru`, `Indicates that this cmdlet returns a history object for each history entry. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
        ], `Appends entries to the session history.`, `Add-History [[-InputObject] <PSObject[]>] [-Passthru] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-JobTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-KdsRootKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-LocalGroupMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-Member`, [
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet adds a new member even the object has a custom member with the same name. You cannot use the Force parameter to replace a standard member of a type.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object to which the new member is added. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`MemberType`, `Specifies the type of the member to add. This parameter is required. The acceptable values for this parameter are:


- NoteProperty


- AliasProperty


- ScriptProperty


- CodeProperty


- ScriptMethod


- CodeMethod




For information about these values, see PSMemberTypes Enumeration (/dotnet/api/system.management.automation.psmembertypes)in the MSDN library.

Not all objects have every type of member. If you specify a member type that the object does not have, PowerShell returns an error.`, `PSMemberTypes`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the member that this cmdlet adds.`, `String`),
            new Parameter_js_3.Parameter(`NotePropertyMembers`, `Specifies a hash table or ordered dictionary of note property names and values. Type a hash table or dictionary in which the keys are note property names and the values are note property values.


For more information about hash tables and ordered dictionaries in PowerShell, see about_Hash_Tables (../Microsoft.PowerShell.Core/About/about_Hash_Tables.md).


This parameter was introduced in Windows PowerShell 3.0.`, `IDictionary`),
            new Parameter_js_3.Parameter(`NotePropertyName`, `Specifies the note property name.


Use this parameter with the NotePropertyValue parameter. This parameter is optional.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`NotePropertyValue`, `Specifies the note property value.


Use this parameter with the NotePropertyName parameter. This parameter is optional.


This parameter was introduced in Windows PowerShell 3.0.`, `Object`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.


For most objects, "Add-Member" adds the new members to the input object. However, when the input object is a string, "Add-Member" cannot add the member to the input object. For these objects, use the PassThru parameter to create an output object.


In Windows PowerShell 2.0, "Add-Member" added members only to the PSObject wrapper of objects, not to the object. Use the PassThru parameter to create an output object for any object that has a PSObject wrapper.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SecondValue`, `Specifies optional additional information about AliasProperty , ScriptProperty , CodeProperty , or CodeMethod members.


If used when adding an AliasProperty , this parameter must be a data type. A conversion to the specified data type is added to the value of the AliasProperty .


For example, if you add an AliasProperty that provides an alternate name for a string property, you can also specify a SecondValue parameter of System.Int32 to indicate that the value of that string property should be converted to an integer when accessed by using the corresponding AliasProperty .


You can use the SecondValue parameter to specify an additional ScriptBlock when adding a ScriptProperty member. The first ScriptBlock , specified in the Value parameter, is used to get the value of a variable. The second ScriptBlock , specified in the SecondValue parameter, is used to set the value of a variable.`, `Object`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the initial value of the added member. If you add an AliasProperty , CodeProperty , ScriptProperty or CodeMethod member, you can supply optional, additional information by using the SecondValue parameter.`, `Object`),
            new Parameter_js_3.Parameter(`TypeName`, `Specifies a name for the type.


When the type is a class in the System namespace or a type that has a type accelerator, you can enter the short name of the type. Otherwise, the full type name is required. This parameter is effective only when the InputObject is a PSObject .


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
        ], `Adds custom properties and methods to an instance of a PowerShell object.`, `Add-Member [-NotePropertyMembers] <IDictionary> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

Add-Member [-NotePropertyName] <String> [-NotePropertyValue] <Object> [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

Add-Member [-MemberType] {AliasProperty | CodeProperty | Property | NoteProperty | ScriptProperty | Properties | PropertySet | Method | CodeMethod | ScriptMethod | Methods | ParameterizedProperty | MemberSet | Event | Dynamic | All} [-Name] <String> [[-Value] <Object>] [[-SecondValue] <Object>] [-Force] -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]

Add-Member -InputObject <PSObject> [-PassThru] [-TypeName <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-SignerRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-Type`, [
            new Parameter_js_3.Parameter(`AssemblyName`, `Specifies the name of an assembly that includes the types. "Add-Type" takes the types from the specified assembly. This parameter is required when you're creating types based on an assembly name.


Enter the full or simple name, also known as the partial name, of an assembly. Wildcard characters are permitted in the assembly name. If you enter a simple or partial name, "Add-Type" resolves it to the full name, and then uses the full name to load the assembly.


This parameter doesn't accept a path or a filename. To enter the path to the assembly dynamic-link library (DLL) file, use the Path parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`CompilerOptions`, `Specifies the options for the source code compiler. These options are sent to the compiler without revision.


This parameter allows you to direct the compiler to generate an executable file, embed resources, or set command-line options, such as the "/unsafe" option.


You can't use the CompilerOptions and ReferencedAssemblies parameters in the same command.`, `String[]`),
            new Parameter_js_3.Parameter(`IgnoreWarnings`, `Ignores compiler warnings. Use this parameter to prevent "Add-Type" from handling compiler warnings as errors.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Language`, `Specifies the language that is used in the source code. The acceptable value for this parameter is CSharp .`, `Language`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to source code files or assembly DLL files that contain the types. Unlike Path , the value of the LiteralPath parameter is used exactly as it's typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`MemberDefinition`, `Specifies new properties or methods for the class. "Add-Type" generates the template code that is required to support the properties or methods.


On Windows, you can use this feature to make Platform Invoke (P/Invoke) calls to unmanaged functions in PowerShell.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the class to create. This parameter is required when generating a type from a member definition.


The type name and namespace must be unique within a session. You can't unload a type or change it. To change the code for a type, you must change the name or start a new PowerShell session. Otherwise, the command fails.`, `String`),
            new Parameter_js_3.Parameter(`Namespace`, `Specifies a namespace for the type.


If this parameter isn't included in the command, the type is created in the Microsoft.PowerShell.Commands.AddType.AutoGeneratedTypes namespace. If the parameter is included in the command with an empty string value or a value of "$Null", the type is generated in the global namespace.`, `String`),
            new Parameter_js_3.Parameter(`OutputAssembly`, `Generates a DLL file for the assembly with the specified name in the location. Enter an optional path and filename. Wildcard characters are permitted. By default, "Add-Type" generates the assembly only in memory.`, `String`),
            new Parameter_js_3.Parameter(`OutputType`, `Specifies the output type of the output assembly. By default, no output type is specified. This parameter is valid only when an output assembly is specified in the command. For more information about the values, see OutputAssemblyType Enumeration (/dotnet/api/microsoft.powershell.commands.outputassemblytype).


The acceptable values for this parameter are as follows:


- ConsoleApplication


- Library


- WindowsApplication`, `OutputAssemblyType`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns a System.Runtime object that represents the types that were added. By default, this cmdlet doesn't generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to source code files or assembly DLL files that contain the types.


If you submit source code files, "Add-Type" compiles the code in the files and creates an in-memory assembly of the types. The file extension specified in the value of Path determines the compiler that "Add-Type" uses.


If you submit an assembly file, "Add-Type" takes the types from the assembly. To specify an in-memory assembly or the global assembly cache, use the AssemblyName parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`ReferencedAssemblies`, `Specifies the assemblies upon which the type depends. By default, "Add-Type" references "System.dll" and "System.Management.Automation.dll". The assemblies that you specify by using this parameter are referenced in addition to the default assemblies.


Beginning in PowerShell 6, ReferencedAssemblies doesn't include the default .NET assemblies. You must include a specific reference to them in the value passed to this parameter.


You can't use the CompilerOptions and ReferencedAssemblies parameters in the same command.`, `String[]`),
            new Parameter_js_3.Parameter(`TypeDefinition`, `Specifies the source code that contains the type definitions. Enter the source code in a string or here-string, or enter a variable that contains the source code. For more information about here-strings, see about_Quoting_Rules (../Microsoft.PowerShell.Core/about/about_Quoting_Rules.md).


Include a namespace declaration in your type definition. If you omit the namespace declaration, your type might have the same name as another type or the shortcut for another type, causing an unintentional overwrite. For example, if you define a type called Exception , scripts that use Exception as the shortcut for System.Exception will fail.`, `String`),
            new Parameter_js_3.Parameter(`UsingNamespace`, `Specifies other namespaces that are required for the class. This is much like the C# keyword, "Using".


By default, "Add-Type" references the System namespace. When the MemberDefinition parameter is used, "Add-Type" also references the System.Runtime.InteropServices namespace by default. The namespaces that you add by using the UsingNamespace parameter are referenced in addition to the default namespaces.`, `String[]`),
        ], `Adds a Microsoft .NET Core class to a PowerShell session.`, `Add-Type -AssemblyName <String[]> [-PassThru] [<CommonParameters>]

Add-Type [-TypeDefinition] <String> [-CompilerOptions <String[]>] [-IgnoreWarnings] [-Language {CSharp}] [-OutputAssembly <String>] [-OutputType {ConsoleApplication | Library | WindowsApplication}] [-PassThru] [-ReferencedAssemblies <String[]>] [<CommonParameters>]

Add-Type [-Name] <String> [-MemberDefinition] <String[]> [-CompilerOptions <String[]>] [-IgnoreWarnings] [-Language {CSharp}] [-Namespace <String>] [-OutputAssembly <String>] [-OutputType {ConsoleApplication | Library | WindowsApplication}] [-PassThru] [-ReferencedAssemblies <String[]>] [-UsingNamespace <String[]>] [<CommonParameters>]

Add-Type [-Path] <String[]> [-CompilerOptions <String[]>] [-IgnoreWarnings] [-OutputAssembly <String>] [-OutputType {ConsoleApplication | Library | WindowsApplication}] [-PassThru] [-ReferencedAssemblies <String[]>] [<CommonParameters>]

Add-Type [-CompilerOptions <String[]>] [-IgnoreWarnings] -LiteralPath <String[]> [-OutputAssembly <String>] [-OutputType {ConsoleApplication | Library | WindowsApplication}] [-PassThru] [-ReferencedAssemblies <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-WindowsCapability`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-WindowsDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Add-WindowsPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-Content`, [
            new Parameter_js_3.Parameter(`Stream`, `Specifies an alternative data stream for content. If the stream does not exist, this cmdlet creates it. Wildcard characters are not supported.


Stream is a dynamic parameter that the FileSystem provider adds to "Clear-Content". This parameter works only in file system drives.


You can use the "Clear-Content" cmdlet to change the content of the Zone.Identifier alternate data stream. However, we do not recommend this as a way to eliminate security checks that block files that are downloaded from the Internet. If you verify that a downloaded file is safe, use the "Unblock-File" cmdlet.`, `String`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. To impersonate another > user, or elevate your credentials when running this cmdlet, use Invoke-Command.`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, strings that this cmdlet omits from the path to the content. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "*.txt". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter in the provider's format or language. The value of this parameter qualifies the Path parameter. The syntax of the filter, including the use of wildcards, depends on the provider. Filters are more efficient than other parameters, because the provider applies them when retrieving the objects, rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, content that this cmdlet clears. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "*.txt". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the paths to the items from which content is deleted. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell having PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the paths to the items from which content is deleted. Wildcards are permitted. The paths must be paths to items, not to containers. For example, you must specify a path to one or more files, not a path to a directory. Wildcards are permitted. This parameter is required, but the parameter name ("Path") is optional.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes the contents of an item, but does not delete the item.`, `Clear-Content [-Stream <String>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Clear-Content [-Path] <String[]> [-Stream <String>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-History`, [
            new Parameter_js_3.Parameter(`CommandLine`, `Deletes command history from a PowerShell session. The string must be an exact match or use wildcards to match commands in the PowerShell session history displayed by "Get-History". If you enter more than one string, "Clear-History" deletes commands that match any of the strings. The CommandLine parameter can be used with Count .


For strings with a space, use single quotations. For more information, see about_Quoting_Rules (About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Count`, `Specifies the number of history entries that "Clear-History" deletes. Commands are deleted in order, beginning with the oldest entry in the history.


The Count and Id parameters can be used together. The Count parameter specifies the number of commands to delete, inclusive of the specified Id . Beginning at the specified Id , commands are deleted in reverse sequential order. For example, if the Id is 30 and the Count is 10, "Clear-History" deletes items 21 through 30.


The Count and CommandLine parameters can be used together. Count specifies the number of commands to delete that match CommandLine parameter value. The commands are deleted in sequential order.`, `Int`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the command history Id that "Clear-History" deletes. To display Id numbers, use the "Get-History" cmdlet. The Id numbers are sequential and commands keep their Id number throughout a PowerShell session. The Id parameter can be used with Count and Newest .`, `Int[]`),
            new Parameter_js_3.Parameter(`Newest`, `When the Newest parameter is used, "Clear-History" deletes the newest entries in the history. By default, "Clear-History" deletes the oldest entries in the history.


The Newest parameter can be used with Id and Count . The Count parameter specifies the number of commands to delete, inclusive of the specified Id . Beginning at the specified Id , commands are deleted in sequential order. For example, if the Id is 30 and the Count is 10, "Clear-History" deletes items 30 through 39.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the "Clear-History" cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the "Clear-History" cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes entries from the PowerShell command history.`, `Clear-History [[-Count] <Int>] [-CommandLine <String[]>] [-Newest] [-Confirm] [-WhatIf] [<CommonParameters>]

Clear-History [[-Id] <Int[]>] [[-Count] <Int>] [-Newest] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-Item`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet clears items that cannot otherwise be changed, such as read- only aliases. The cmdlet cannot clear constants. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md). The cmdlet cannot override security restrictions, even when the Force parameter is used.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the items being cleared. Wildcard characters are permitted. This parameter is required, but the parameter name Path is optional.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Clears the contents of an item, but does not delete the item.`, `Clear-Item [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Clear-Item [-Path] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet deletes properties from items that cannot otherwise be accessed by the user. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the property to be cleared, such as the name of a registry value. Wildcard characters are permitted.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the property being cleared. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Clears the value of a property but does not delete the property.`, `Clear-ItemProperty [-Name] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Clear-ItemProperty [-Path] <String[]> [-Name] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-KdsCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-RecycleBin`, [
            new Parameter_js_3.Parameter(`DriveLetter`, `Specifies the recycle bin to clear for a single drive letter or an array of drive letters.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Specifies that the user isn't prompted for confirmation to clear a recycle bin.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts for user confirmation before running the cmdlet. The user is prompted for confirmation even if the Confirm parameter isn't specified.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if "Clear-RecycleBin" runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Clears the contents of a recycle bin.`, `Clear-RecycleBin [[-DriveLetter] <String[]>] [-Force] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-Tpm`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-Variable`, [
            new Parameter_js_3.Parameter(`Exclude`, `Specifies an array of items that this cmdlet omits in the operation. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Allows the cmdlet to clear a variable even if it is read-only. Even using the Force parameter, the cmdlet cannot clear constants.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies an array of items that this cmdlet includes in the operation. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the variable to be cleared. Wildcards are permitted. This parameter is required, but the parameter name ("Name") is optional.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope in which this alias is valid.


The acceptable values for this parameter are:


- Global


- Local


- Script




You can also use a number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent). Local is the default. For more information, see about_Scopes.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes the value of a variable.`, `Clear-Variable [-Name] <String[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-PassThru] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Clear-WindowsCorruptMountPoint`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Compare-Object`, [
            new Parameter_js_3.Parameter(`CaseSensitive`, `Indicates that comparisons should be case-sensitive.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Culture`, `Specifies the culture to use for comparisons.`, `String`),
            new Parameter_js_3.Parameter(`DifferenceObject`, `Specifies the objects that are compared to the reference objects.`, `PSObject[]`),
            new Parameter_js_3.Parameter(`ExcludeDifferent`, `Indicates that this cmdlet displays only the characteristics of compared objects that are equal. The differences between the objects are discarded.


Use ExcludeDifferent with IncludeEqual to display only the lines that match between the reference and difference objects.


If ExcludeDifferent is specified without IncludeEqual , there's no output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IncludeEqual`, `IncludeEqual displays the matches between the reference and difference objects.


By default, the output also includes the differences between the reference and difference objects.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `When you use the PassThru parameter, "Compare-Object" omits the PSCustomObject wrapper around the compared objects and returns the differing objects, unchanged.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Property`, `Specifies an array of properties of the reference and difference objects to compare.`, `Object[]`),
            new Parameter_js_3.Parameter(`ReferenceObject`, `Specifies an array of objects used as a reference for comparison.`, `PSObject[]`),
            new Parameter_js_3.Parameter(`SyncWindow`, `Specifies the number of adjacent objects that "Compare-Object" inspects while looking for a match in a collection of objects. "Compare-Object" examines adjacent objects when it doesn't find the object in the same position in a collection. The default value is "[Int32]::MaxValue", which means that "Compare-Object" examines the entire object collection.`, `Int32`),
        ], `Compares two sets of objects.`, `Compare-Object [-ReferenceObject] <PSObject[]> [-DifferenceObject] <PSObject[]> [-CaseSensitive] [-Culture <String>] [-ExcludeDifferent] [-IncludeEqual] [-PassThru] [-Property <Object[]>] [-SyncWindow <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Complete-BitsTransfer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Complete-DtcDiagnosticTransaction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Confirm-SecureBootUEFI`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Connect-PSSession`, [
            new Parameter_js_3.Parameter(`AllowRedirection`, `Indicates that this cmdlet allows redirection of this connection to an alternate URI.


When you use the ConnectionURI parameter, the remote destination can return an instruction to redirect to a different URI. By default, PowerShell does not redirect connections, but you can use this parameter to allow it to redirect the connection.


You can also limit the number of times the connection is redirected by changing the MaximumConnectionRedirectionCount session option value. Use the MaximumRedirection parameter of the New-PSSessionOption cmdlet or set the MaximumConnectionRedirectionCount property of the $PSSessionOption preference variable. The default value is 5.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ApplicationName`, `Specifies the name of an application. This cmdlet connects only to sessions that use the specified application.


Enter the application name segment of the connection URI. For example, in the following connection URI, the application name is WSMan: "http://localhost:5985/WSMAN". The application name of a session is stored in the Runspace.ConnectionInfo.AppName property of the session.


The value of this parameter is used to select and filter sessions. It does not change the application that the session uses.`, `String`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the mechanism that is used to authenticate user credentials in the command to reconnect to the disconnected session. The acceptable values for this parameter are:


- Default


- Basic


- Credssp


- Digest


- Kerberos


- Negotiate


- NegotiateWithImplicitCredential




The default value is Default.


For more information about the values of this parameter, see AuthenticationMechanism Enumeration (https://msdn.microsoft.com/library/system.management.automation.runspaces.authenticationmechanism)in the MSDN library.

Caution: Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to connect to the disconnected session. Enter the certificate thumbprint of the certificate.


Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts. They do not work with domain accounts.


To get a certificate thumbprint, use a Get-Item or Get-ChildItem command in the PowerShell Cert: drive.`, `String`),
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies the computers on which the disconnected sessions are stored. Sessions are stored on the computer that is at the server-side or receiving end of a connection. The default is the local computer.


Type the NetBIOS name, an IP address, or a fully qualified domain name of one computer. Wildcard characters are not permitted. To specify the local computer, type the computer name, localhost, or a dot (.)`, `String[]`),
            new Parameter_js_3.Parameter(`ConfigurationName`, `Connects only to sessions that use the specified session configuration.


Enter a configuration name or the fully qualified resource URI for a session configuration. If you specify only the configuration name, the following schema URI is prepended: "https://schemas.microsoft.com/powershell". The configuration name of a session is stored in the ConfigurationName property of the session.


The value of this parameter is used to select and filter sessions. It does not change the session configuration that the session uses.


For more information about session configurations, see about_Session_Configurations (About/about_Session_Configurations.md).`, `String`),
            new Parameter_js_3.Parameter(`ConnectionUri`, `Specifies the URIs of the connection endpoints for the disconnected sessions.


The URI must be fully qualified. The format of this string is as follows:


"<Transport>://<ComputerName>:<Port>/<ApplicationName>"


The default value is as follows:


"http://localhost:5985/WSMAN"


If you do not specify a connection URI, you can use the UseSSL and Port parameters to specify the connection URI values.


Valid values for the Transport segment of the URI are HTTP and HTTPS. If you specify a connection URI with a Transport segment, but do not specify a port, the session is created with standards ports: 80 for HTTP and 443 for HTTPS. To use the default ports for PowerShell remoting, specify port 5985 for HTTP or 5986 for HTTPS.


If the destination computer redirects the connection to a different URI, PowerShell prevents the redirection unless you use the AllowRedirection parameter in the command.`, `Uri[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to connect to the disconnected session. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the IDs of the disconnected sessions. The Id parameter works only when the disconnected session was previously connected to the current session.


This parameter is valid, but not effective, when the session is stored on the local computer, but was not connected to the current session.`, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies the instance IDs of the disconnected sessions.


The instance ID is a GUID that uniquely identifies a PSSession on a local or remote computer.


The instance ID is stored in the InstanceID property of the PSSession .`, `Guid[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the friendly names of the disconnected sessions.`, `String[]`),
            new Parameter_js_3.Parameter(`Port`, `Specifies the network port on the remote computer that is used to reconnect to the session. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985, which is the WinRM port for HTTP, and 5986, which is the WinRM port for HTTPS.


Before using an alternate port, you must configure the WinRM listener on the remote computer to listen at that port. To configure the listener, type the following two commands at the PowerShell prompt:


"Remove-Item -Path WSMan:\\Localhost\\listener\\listener* -Recurse"


"New-Item -Path WSMan:\\Localhost\\listener -Transport http -Address * -Port <port-number>"


Do not use the Port parameter unless you must. The port that is set in the command applies to all computers or sessions on which the command runs. An alternate port setting might prevent the command from running on all computers.`, `Int32`),
            new Parameter_js_3.Parameter(`Session`, `Specifies the disconnected sessions. Enter a variable that contains the PSSession objects or a command that creates or gets the PSSession objects, such as a Get-PSSession command.`, `PSSession[]`),
            new Parameter_js_3.Parameter(`SessionOption`, `Specifies advanced options for the session. Enter a SessionOption object, such as one that you create by using the New-PSSessionOption cmdlet, or a hash table in which the keys are session option names and the values are session option values.


The default values for the options are determined by the value of the $PSSessionOption preference variable, if it is set. Otherwise, the default values are established by options set in the session configuration.


The session option values take precedence over default values for sessions set in the $PSSessionOption preference variable and in the session configuration. However, they do not take precedence over maximum values, quotas or limits set in the session configuration.


For a description of the session options that includes the default values, see New-PSSessionOption. For information about the $PSSessionOption preference variable, see about_Preference_Variables (About/about_Preference_Variables.md). For more information about session configurations, see about_Session_Configurations (About/about_Session_Configurations.md).`, `PSSessionOption`),
            new Parameter_js_3.Parameter(`ThrottleLimit`, `Specifies the maximum number of concurrent connections that can be established to run this command. If you omit this parameter or enter a value of 0, the default value, 32, is used.


The throttle limit applies only to the current command, not to the session or to the computer.`, `Int32`),
            new Parameter_js_3.Parameter(`UseSSL`, `Indicates that this cmdlet uses the Secure Sockets Layer (SSL) protocol to connect to the disconnected session. By default, SSL is not used.


WS-Management encrypts all PowerShell content transmitted over the network. The UseSSL parameter is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection.


If you use this parameter, but SSL is not available on the port that is used for the command, the command fails.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Reconnects to disconnected sessions.`, `Connect-PSSession [-ConnectionUri] <Uri[]> [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] -InstanceId <Guid[]> [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]

Connect-PSSession [-ConnectionUri] <Uri[]> [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-Name <String[]>] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]

Connect-PSSession [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] -ComputerName <String[]> [-ConfigurationName <String>] [-Credential <PSCredential>] -InstanceId <Guid[]> [-Port <Int32>] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [-UseSSL] [-Confirm] [-WhatIf] [<CommonParameters>]

Connect-PSSession [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] -ComputerName <String[]> [-ConfigurationName <String>] [-Credential <PSCredential>] [-Name <String[]>] [-Port <Int32>] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [-UseSSL] [-Confirm] [-WhatIf] [<CommonParameters>]

Connect-PSSession [-Id] <Int32[]> [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]

Connect-PSSession -InstanceId <Guid[]> [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]

Connect-PSSession [-Name <String[]>] [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]

Connect-PSSession [-Session] <PSSession[]> [-ThrottleLimit <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Connect-WSMan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Convert-Path`, [
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies, as a string array, the path to be converted. The value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the PowerShell path to be converted.`, `String[]`),
        ], `Converts a path from a PowerShell path to a PowerShell provider path.`, `Convert-Path -LiteralPath <String[]> [<CommonParameters>]

Convert-Path [-Path] <String[]> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertFrom-CIPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertFrom-Csv`, [
            new Parameter_js_3.Parameter(`Delimiter`, `Specifies the delimiter that separates the property values in the CSV strings. The default is a comma (,).


Enter a character, such as a colon (:). To specify a semicolon (;) enclose it in single quotation marks.


If you specify a character other than the actual string delimiter in the file, "ConvertFrom-Csv" cannot create the objects from the CSV strings and will return the CSV strings.`, `Char`),
            new Parameter_js_3.Parameter(`Header`, `Specifies an alternate column header row for the imported string. The column header determines the property names of the objects created by "ConvertFrom-Csv".


Enter column headers as a comma-separated list. Do not enclose the header string in quotation marks. Enclose each column header in single quotation marks.


If you enter fewer column headers than there are data columns, the remaining data columns are discarded. If you enter more column headers than there are data columns, the additional column headers are created with empty data columns.


When using the Header parameter, omit the column header string from the CSV strings. Otherwise, this cmdlet creates an extra object from the items in the header row.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the CSV strings to be converted to objects. Enter a variable that contains the CSV strings or type a command or expression that gets the CSV strings. You can also pipe the CSV strings to "ConvertFrom-Csv".`, `PSObject[]`),
            new Parameter_js_3.Parameter(`UseCulture`, `Uses the list separator for the current culture as the item delimiter. To find the list separator for a culture, use the following command: "(Get-Culture).TextInfo.ListSeparator".`, `SwitchParameter`),
        ], `Converts object properties in comma-separated value (CSV) format into CSV versions of the original objects.`, `ConvertFrom-Csv [-InputObject] <PSObject[]> [[-Delimiter] <Char>] [-Header <String[]>] [<CommonParameters>]

ConvertFrom-Csv [-InputObject] <PSObject[]> [-Header <String[]>] -UseCulture [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertFrom-Json`, [
            new Parameter_js_3.Parameter(`AsHashtable`, `Converts the JSON to a hash table object. This switch was introduced in PowerShell 6.0. There are several scenarios where it can overcome some limitations of the "ConvertFrom-Json" cmdlet.


- If the JSON contains a list with keys that only differ in casing. Without the switch, those keys   would be seen as identical keys and therefore only the last one would get used. - If the JSON contains a key that is an empty string. Without the switch, the cmdlet would throw an   error since a "PSCustomObject" does not allow for that but a hash table does. An example use case  where this can occurs are "project.lock.json" files. - Hash tables can be processed faster for certain data structures.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Depth`, `Gets or sets the maximum depth the JSON input is allowed to have. By default, it is 1024.


This parameter was introduced in PowerShell 6.2.`, `Int32`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the JSON strings to convert to JSON objects. Enter a variable that contains the string, or type a command or expression that gets the string. You can also pipe a string to "ConvertFrom-Json".


The InputObject parameter is required, but its value can be an empty string. When the input object is an empty string, "ConvertFrom-Json" does not generate any output. The InputObject value cannot be "$null".`, `String`),
            new Parameter_js_3.Parameter(`NoEnumerate`, `Specifies that output is not enumerated.


Setting this parameter causes arrays to be sent as a single object instead of sending every element separately. This guarantees that JSON can be round-tripped via "ConvertTo-Json".`, `SwitchParameter`),
        ], `Converts a JSON-formatted string to a custom object or a hash table.`, `ConvertFrom-Json [-InputObject] <String> [-AsHashtable] [-Depth <Int32>] [-NoEnumerate] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertFrom-Markdown`, [
            new Parameter_js_3.Parameter(`AsVT100EncodedString`, `Specifies if the output should be encoded as a string with VT100 escape codes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object to be converted. When an object of type System.String is specified, the string is converted. When an object of type System.IO.FileInfo is specified, the contents of the file specified by the object are converted. Objects of any other type result in an error.`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to the file to be converted.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies a path to the file to be converted.`, `String[]`),
        ], `Convert the contents of a string or a file to a MarkdownInfo object.`, `ConvertFrom-Markdown [-AsVT100EncodedString] -InputObject <PSObject> [<CommonParameters>]

ConvertFrom-Markdown [-AsVT100EncodedString] -LiteralPath <String[]> [<CommonParameters>]

ConvertFrom-Markdown [-Path] <String[]> [-AsVT100EncodedString] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertFrom-SddlString`, [
            new Parameter_js_3.Parameter(`Sddl`, `Specifies the string representing the security descriptor in SDDL syntax.`, `String`),
            new Parameter_js_3.Parameter(`Type`, `Specifies the type of rights that SDDL string represents.


The acceptable values for this parameter are:


- FileSystemRights


- RegistryRights


- ActiveDirectoryRights


- MutexRights


- SemaphoreRights


- CryptoKeyRights


- EventWaitHandleRights




By default cmdlet uses file system rights.

CryptoKeyRights and ActiveDirectoryRights are not supported in PowerShell Core.`, `AccessRightTypeNames`),
        ], `Converts a SDDL string to a custom object.`, `ConvertFrom-SddlString [-Sddl] <String> [-Type {FileSystemRights | RegistryRights | ActiveDirectoryRights | MutexRights | SemaphoreRights | CryptoKeyRights | EventWaitHandleRights}] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertFrom-SecureString`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertFrom-StringData`, [
            new Parameter_js_3.Parameter(`StringData`, `Specifies the string to be converted. You can use this parameter or pipe a string to "ConvertFrom-StringData". The parameter name is optional.


The value of this parameter must be a string that contains one or more key-value pairs. Each key-value pair must be on a separate line, or each pair must be separated by newline characters ("n).


You can include comments in the string, but the comments cannot be on the same line as a key-value pair. "ConvertFrom-StringData" ignores single-line comments. The "#" character must be the first non-whitespace character on the line. All characters on the line after the "#" are ignored. The comments are not included in the hash table.


A here-string is a string consisting of one or more lines. Quotation marks within the here-string are interpreted literally as part of the string data. For more information, see about_Quoting_Rules (../Microsoft.PowerShell.Core/About/about_Quoting_Rules.md).`, `String`),
            new Parameter_js_3.Parameter(`Delimiter`, `The character used to separate the key from the value data in the string being converted. The default delimiter is the equals sign ("=") character. This parameter was added in PowerShell 7.`, `Char`),
        ], `Converts a string containing one or more key and value pairs to a hash table.`, `ConvertFrom-StringData [-StringData] <String> [[-Delimiter] <Char>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertTo-Csv`, [
            new Parameter_js_3.Parameter(`Delimiter`, `Specifies the delimiter to separate the property values in CSV strings. The default is a comma (","). Enter a character, such as a colon (":"). To specify a semicolon (";") enclose it in single quotation marks.`, `Char`),
            new Parameter_js_3.Parameter(`IncludeTypeInformation`, `When this parameter is used the first line of the output contains #TYPE followed by the fully qualified name of the object type. For example, #TYPE System.Diagnostics.Process .


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects that are converted to CSV strings. Enter a variable that contains the objects or type a command or expression that gets the objects. You can also pipe objects to "ConvertTo-CSV".`, `PSObject`),
            new Parameter_js_3.Parameter(`NoTypeInformation`, `Removes the #TYPE information header from the output. This parameter became the default in PowerShell 6.0 and is included for backwards compatibility.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UseCulture`, `Uses the list separator for the current culture as the item delimiter. To find the list separator for a culture, use the following command: "(Get-Culture).TextInfo.ListSeparator".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`QuoteFields`, `Specifies the names of the columns that should be quoted. When this parameter is used only the specified columns are quoted.`, `String[]`),
            new Parameter_js_3.Parameter(`UseQuotes`, `Specifies when quotes are used in the CSV files. Possible values are:


- Never - don't quote anything


- Always - quote everything (default behavior)


- AsNeeded - only quote fields that contain a delimiter character`, `QuoteKind`),
        ], `Converts objects into a series of character-separated value (CSV) strings.`, `ConvertTo-Csv [-InputObject] <PSObject> [[-Delimiter] <Char>] [-IncludeTypeInformation] [-NoTypeInformation] [-QuoteFields <String[]>] [-UseQuotes <QuoteKind>] [<CommonParameters>]

ConvertTo-Csv [-InputObject] <PSObject> [-IncludeTypeInformation] [-NoTypeInformation] [-UseCulture] [-QuoteFields <String[]>] [-UseQuotes <QuoteKind>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertTo-Html`, [
            new Parameter_js_3.Parameter(`As`, `Determines whether the object is formatted as a table or a list. Valid values are Table and List. The default value is Table.


The Table value generates an HTML table that resembles the PowerShell table format. The header row displays the property names. Each table row represents an object and displays the object's values for each property.


The List value generates a two-column HTML table for each object that resembles the PowerShell list format. The first column displays the property name; the second column displays the property value.`, `String`),
            new Parameter_js_3.Parameter(`Body`, `Specifies the text to add after the opening <BODY> tag. By default, there is no text in that position.`, `String[]`),
            new Parameter_js_3.Parameter(`Charset`, `Specifies text to add to the opening <charset> tag. By default, there is no text in that position.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`CssUri`, `Specifies the Uniform Resource Identifier (URI) of the cascading style sheet (CSS) that is applied to the HTML file. The URI is included in a style sheet link in the output.`, `Uri`),
            new Parameter_js_3.Parameter(`Fragment`, `Generates only an HTML table. The HTML, HEAD, TITLE, and BODY tags are omitted.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Head`, `Specifies the content of the <HEAD> tag. The default is <title>HTML TABLE</title>. If you use the Head parameter, the Title parameter is ignored.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be represented in HTML. Enter a variable that contains the objects or type a command or expression that gets the objects.


If you use this parameter to submit multiple objects, such as all of the services on a computer, ConvertTo-Html creates a table that displays the properties of a collection or of an array of objects ( System.Object []). To create a table of the individual objects, use the pipeline operator to pipe the objects to ConvertTo-Html .`, `PSObject`),
            new Parameter_js_3.Parameter(`Meta`, `Specifies text to add to the opening <meta> tag. By default, there is no text in that position.


This parameter was introduced in PowerShell 6.0.`, `Hashtable`),
            new Parameter_js_3.Parameter(`PostContent`, `Specifies text to add after the closing </TABLE> tag. By default, there is no text in that position.`, `String[]`),
            new Parameter_js_3.Parameter(`PreContent`, `Specifies text to add before the opening <TABLE> tag. By default, there is no text in that position.`, `String[]`),
            new Parameter_js_3.Parameter(`Property`, `Includes the specified properties of the objects in the HTML. The value of the Property parameter can be a new calculated property. To create a calculated property, use a hash table. Valid keys are:


- Label <string> (unlike with Select-Object or Format-Table, the Name key is not supported)


- Expression <string> or <script block>`, `Object[]`),
            new Parameter_js_3.Parameter(`Title`, `Specifies a title for the HTML file, that is, the text that appears between the <TITLE> tags.`, `String`),
            new Parameter_js_3.Parameter(`Transitional`, `Changes the DOCTYPE to XHTML Transitional DTD Default DOCTYPE is XHTML Strict DTD


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
        ], `Converts Microsoft .NET Framework objects into HTML that can be displayed in a Web browser.`, `ConvertTo-Html [[-Property] <Object[]>] [[-Head] <String[]>] [[-Title] <String>] [[-Body] <String[]>] [-As {Table | List}] [-Charset <String>] [-CssUri <Uri>] [-InputObject <PSObject>] [-Meta <Hashtable>] [-PostContent <String[]>] [-PreContent <String[]>] [-Transitional] [<CommonParameters>]

ConvertTo-Html [[-Property] <Object[]>] [-As {Table | List}] [-Fragment] [-InputObject <PSObject>] [-PostContent <String[]>] [-PreContent <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertTo-Json`, [
            new Parameter_js_3.Parameter(`AsArray`, `Outputs the object in array brackets, even if the input is a single object.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Compress`, `Omits white space and indented formatting in the output string.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Depth`, `Specifies how many levels of contained objects are included in the JSON representation. The default value is 2.`, `Int32`),
            new Parameter_js_3.Parameter(`EnumsAsStrings`, `Provides an alternative serialization option that converts all enumerations to their string representation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`EscapeHandling`, `Controls how certain characters are escaped in the resulting JSON output. By default, only control characters (like newline) are escaped.


Acceptable values are:


- Default - Only control characters are escaped.


- EscapeNonAscii - All non-ASCII and control characters are escaped.


- EscapeHtml - HTML ("<", ">", "&", "'", """) and control characters are escaped.




This parameter was introduced in PowerShell 6.2.`, `StringEscapeHandling`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to convert to JSON format. Enter a variable that contains the objects, or type a command or expression that gets the objects. You can also pipe an object to "ConvertTo-Json".


The InputObject parameter is required, but its value can be null ("$null") or an empty string. When the input object is "$null", "ConvertTo-Json" does not generate any output. When the input object is an empty string, "ConvertTo-Json" returns an empty string.`, `Object`),
        ], `Converts an object to a JSON-formatted string.`, `ConvertTo-Json [-InputObject] <Object> [-AsArray] [-Compress] [-Depth <Int32>] [-EnumsAsStrings] [-EscapeHandling <StringEscapeHandling>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertTo-ProcessMitigationPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertTo-SecureString`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertTo-TpmOwnerAuth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ConvertTo-Xml`, [
            new Parameter_js_3.Parameter(`As`, `Determines the output format. The acceptable values for this parameter are:


- String. Returns a single string. - Stream. Returns an array of strings. - Document. Returns an XmlDocument object.


The default value is Document.`, `String`),
            new Parameter_js_3.Parameter(`Depth`, `Specifies how many levels of contained objects are included in the XML representation. The default value is 1.


For example, if the object's properties also contain objects, to save an XML representation of the properties of the contained objects, you must specify a depth of 2.


The default value can be overridden for the object type in the Types.ps1xml files. For more information, see about_Types.ps1xml.`, `Int32`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object to be converted. Enter a variable that contains the objects, or type a command or expression that gets the objects. You can also pipe objects to ConvertTo-XML .`, `PSObject`),
            new Parameter_js_3.Parameter(`NoTypeInformation`, `Omits the Type attribute from the object nodes.`, `SwitchParameter`),
        ], `Creates an XML-based representation of an object.`, `ConvertTo-Xml [-InputObject] <PSObject> [-As {Stream | String | Document}] [-Depth <Int32>] [-NoTypeInformation] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-Item`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Container`, `Indicates that this cmdlet preserves container objects during the copy operation. By default, the Container parameter is set to True .`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Destination`, `Specifies the path to the new location. The default is the current directory.


To rename the item being copied, specify a new name in the value of the Destination parameter.`, `String`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they're retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet copies items that can't otherwise be changed, such as copying over a read-only file or alias.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FromSession`, `Specifies the PSSession object from which a remote file is being copied. When you use this parameter, the Path and LiteralPath parameters refer to the local path on the remote machine.`, `PSSession`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it's typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the item with which you're working. By default, this cmdlet doesn't generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies, as a string array, the path to the items to copy. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Recurse`, `Indicates that this cmdlet does a recursive copy.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ToSession`, `Specifies the PSSession object to which a remote file is being copied. When you use this parameter, the Destination parameter refers to the local path on the remote machine.`, `PSSession`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Copies an item from one location to another.`, `Copy-Item [[-Destination] <String>] [-Confirm] [-Container] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-FromSession <PSSession>] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Recurse] [-ToSession <PSSession>] [-WhatIf] [<CommonParameters>]

Copy-Item [-Path] <String[]> [[-Destination] <String>] [-Confirm] [-Container] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-FromSession <PSSession>] [-Include <String[]>] [-PassThru] [-Recurse] [-ToSession <PSSession>] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Copy-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Destination`, `Specifies the path to the destination location.`, `String`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation. Implementation varies from provider to provider.


For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the property to be copied.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies, as a string array, the path to the property to be copied. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Copies a property and value from a specified location to another location.`, `Copy-ItemProperty [-Destination] <String> [-Name] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Copy-ItemProperty [-Path] <String[]> [-Destination] <String> [-Name] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Debug-Job`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies the ID number of a running job. To get the ID number of a job, run the Get-Job cmdlet.`, `Int32`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies the instance ID GUID of a running job. To get the InstanceId of a job, run the Get-Job cmdlet, piping the results into a Format- * cmdlet, as shown in the following example:


"Get-Job | Format-List -Property Id,Name,InstanceId,State"`, `Guid`),
            new Parameter_js_3.Parameter(`Job`, `Specifies a running job object. The simplest way to use this parameter is to save the results of a Get-Job command that returns the running job that you want to debug in a variable, and then specify the variable as the value of this parameter.`, `Job`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a job by the friendly name of the job. When you start a job, you can specify a job name by adding the JobName parameter, in cmdlets such as Invoke-Command and Start-Job.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Debugs a running background, remote, or PowerShell Workflow job.`, `Debug-Job [-Id] <Int32> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Job [-InstanceId] <Guid> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Job [-Job] <Job> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Job [-Name] <String> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Debug-Process`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies the process IDs of the processes to be debugged. The Id parameter name is optional.


To find the process ID of a process, type "Get-Process".`, `Int32[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the process objects that represent processes to be debugged. Enter a variable that contains the process objects or a command that gets the process objects, such as the Get-Process cmdlet. You can also pipe process objects to this cmdlet.`, `Process[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of the processes to be debugged. If there is more than one process with the same name, this cmdlet attaches a debugger to all processes with that name. The Name parameter is optional.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Debugs one or more processes running on the local computer.`, `Debug-Process [-Id] <Int32[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Process -InputObject <Process[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Process [-Name] <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Debug-Runspace`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies the ID number of a runspace. You can run "Get-Runspace" to show runspace IDs.`, `Int32`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies a runspace by its instance ID, a GUID that you can show by running "Get-Runspace".`, `Guid`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a runspace by its name. You can run "Get-Runspace" to show the names of runspaces.`, `String`),
            new Parameter_js_3.Parameter(`Runspace`, `Specifies a runspace object. The simplest way to provide a value for this parameter is to specify a variable that contains the results of a filtered "Get-Runspace" command.`, `Runspace`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Starts an interactive debugging session with a runspace.`, `Debug-Runspace [-Id] <Int32> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Runspace [-InstanceId] <Guid> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Runspace [-Name] <String> [-Confirm] [-WhatIf] [<CommonParameters>]

Debug-Runspace [-Runspace] <Runspace> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Delete-DeliveryOptimizationCache`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-AppBackgroundTaskDiagnosticLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-ExperimentalFeature`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `The name or names of the experimental features to disable.`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Determines which "powershell.config.json" to update whether it affects all users or just the current user.`, `ConfigScope`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Disable an experimental feature on startup of new instance of PowerShell.`, `Disable-ExperimentalFeature [-Name] <String[]> [-Confirm] [-Scope {AllUsers | CurrentUser}] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-JobTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-LocalUser`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PSBreakpoint`, [
            new Parameter_js_3.Parameter(`Breakpoint`, `Specifies the breakpoints to disable. Enter a variable that contains breakpoint objects or a command that gets breakpoint objects, such as a Get-PSBreakpoint command. You can also pipe breakpoint objects to the Disable-PSBreakpoint cmdlet.`, `Breakpoint[]`),
            new Parameter_js_3.Parameter(`Id`, `Disables the breakpoints with the specified breakpoint IDs. Enter the IDs or a variable that contains the IDs. You cannot pipe IDs to Disable-PSBreakpoint .`, `Int32[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the enabled breakpoints. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Disables the breakpoints in the current console.`, `Disable-PSBreakpoint [-Breakpoint] <Breakpoint[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Disable-PSBreakpoint [-Id] <Int32[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PSRemoting`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Prevents PowerShell endpoints from receiving remote connections.`, `Disable-PSRemoting [-Confirm] [-Force] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-PSSessionConfiguration`, [
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies an array of names of session configurations to disable. Enter one or more configuration names. Wildcard characters are permitted. You can also pipe a string that contains a configuration name or a session configuration object to "Disable-PSSessionConfiguration".


If you omit this parameter, "Disable-PSSessionConfiguration" disables the Microsoft.PowerShell session configuration.`, `String[]`),
            new Parameter_js_3.Parameter(`NoServiceRestart`, `Used to prevent the restart of the WSMan service. It is not necessary to restart the service to disable the configuration.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Disables session configurations on the local computer.`, `Disable-PSSessionConfiguration [[-Name] <String[]>] [-Force] [-NoServiceRestart] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-RunspaceDebug`, [
            new Parameter_js_3.Parameter(`AppDomainName`, ``, `String[]`),
            new Parameter_js_3.Parameter(`ProcessName`, ``, `String`),
            new Parameter_js_3.Parameter(`Runspace`, ``, `Runspace[]`),
            new Parameter_js_3.Parameter(`RunspaceId`, ``, `Int32[]`),
            new Parameter_js_3.Parameter(`RunspaceInstanceId`, ``, `Guid[]`),
            new Parameter_js_3.Parameter(`RunspaceName`, ``, `String[]`),
        ], `Disables debugging on one or more runspaces, and releases any pending debugger stop.`, `Disable-RunspaceDebug [[-ProcessName] <String>] [[-AppDomainName] <String[]>] [<CommonParameters>]

Disable-RunspaceDebug [-Runspace] <Runspace[]> [<CommonParameters>]

Disable-RunspaceDebug [-RunspaceId] <Int32[]> [<CommonParameters>]

Disable-RunspaceDebug [-RunspaceInstanceId] <Guid[]> [<CommonParameters>]

Disable-RunspaceDebug [[-RunspaceName] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-ScheduledJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-TlsCipherSuite`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-TlsEccCurve`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-TlsSessionTicketKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-TpmAutoProvisioning`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-WindowsErrorReporting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-WindowsOptionalFeature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disable-WSManCredSSP`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disconnect-PSSession`, [
            new Parameter_js_3.Parameter(`Id`, `Disconnects from sessions with the specified session ID. Type one or more IDs (separated by commas), or use the range operator (..) to specify a range of IDs.


To get the ID of a session, use the "Get-PSSession" cmdlet. The instance ID is stored in the ID property of the session.`, `Int32[]`),
            new Parameter_js_3.Parameter(`IdleTimeoutSec`, `Changes the idle timeout value of the disconnected PSSession. Enter a value in seconds. The minimum value is 60 (1 minute).


The idle timeout determines how long the disconnected PSSession is maintained on the remote computer. When the timeout expires, the PSSession is deleted.


Disconnected PSSessions are considered to be idle from the moment that they are disconnected, even if commands are running in the disconnected session.


The default value for the idle timeout of a session is set by the value of the IdleTimeoutMs property of the session configuration. The default value is 7200000 milliseconds (2 hours).


The value of this parameter takes precedence over the value of the IdleTimeout property of the $PSSessionOption preference variable and the default idle timeout value in the session configuration. However, this value cannot exceed the value of the MaxIdleTimeoutMs property of the session configuration. The default value of MaxIdleTimeoutMs is 12 hours (43200000 milliseconds).`, `Int32`),
            new Parameter_js_3.Parameter(`InstanceId`, `Disconnects from sessions with the specified instance IDs.


The instance ID is a GUID that uniquely identifies a session on a local or remote computer. The instance ID is unique, even across multiple sessions on multiple computers.


To get the instance ID of a session, use the "Get-PSSession" cmdlet. The instance ID is stored in the InstanceID property of the session.`, `Guid[]`),
            new Parameter_js_3.Parameter(`Name`, `Disconnects from sessions with the specified friendly names. Wildcards are permitted.


To get the friendly name of a session, use the "Get-PSSession" cmdlet. The friendly name is stored in the Name property of the session.`, `String[]`),
            new Parameter_js_3.Parameter(`Session`, `Disconnects from the specified PSSessions. Enter PSSession objects, such as those that the "New-PSSession" cmdlet returns. You can also pipe a PSSession object to "Disconnect-PSSession".


The "Get-PSSession" cmdlet can get all PSSessions that terminate at a remote computer, including PSSessions that are disconnected and PSSessions that are connected to other sessions on other computers. "Disconnect-PSSession" disconnects only PSSession that are connected to the current session. If you pipe other PSSessions to "Disconnect-PSSession", the "Disconnect-PSSession" command fails.`, `PSSession[]`),
            new Parameter_js_3.Parameter(`ThrottleLimit`, `Sets the throttle limit for the "Disconnect-PSSession" command.


The throttle limit is the maximum number of concurrent connections that can be established to run this command. If you omit this parameter or enter a value of 0, the default value, 32, is used.


The throttle limit applies only to the current command, not to the session or to the computer.`, `Int32`),
            new Parameter_js_3.Parameter(`OutputBufferingMode`, `Determines how command output is managed in the disconnected session when the output buffer is full. The default value is Block .


If the command in the disconnected session is returning output and the output buffer fills, the value of this parameter effectively determines whether the command continues to run while the session is disconnected. A value of Block suspends the command until the session is reconnected. A value of Drop allows the command to complete, although data might be lost. When using the Drop value, redirect the command output to a file on disk.


Valid values are:


- Block : When the output buffer is full, execution is suspended until the buffer is clear. - Drop : When the output buffer is full, execution continues. As new output is saved, the oldest   output is discarded. - None : No output buffering mode is specified. The value of the OutputBufferingMode property   of the session configuration is used for the disconnected session.`, `OutputBufferingMode`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Disconnects from a session.`, `Disconnect-PSSession [-Id] <Int32[]> [-IdleTimeoutSec <Int32>] [-ThrottleLimit <Int32>] [-OutputBufferingMode <OutputBufferingMode>] [-Confirm] [-WhatIf] [<CommonParameters>]

Disconnect-PSSession [-IdleTimeoutSec <Int32>] -InstanceId <Guid[]> [-ThrottleLimit <Int32>] [-OutputBufferingMode <OutputBufferingMode>] [-Confirm] [-WhatIf] [<CommonParameters>]

Disconnect-PSSession [-IdleTimeoutSec <Int32>] -Name <String[]> [-ThrottleLimit <Int32>] [-OutputBufferingMode <OutputBufferingMode>] [-Confirm] [-WhatIf] [<CommonParameters>]

Disconnect-PSSession [-Session] <PSSession[]> [-IdleTimeoutSec <Int32>] [-ThrottleLimit <Int32>] [-OutputBufferingMode <OutputBufferingMode>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Disconnect-WSMan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Dismount-AppxVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Dismount-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Edit-CIPolicyRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-AppBackgroundTaskDiagnosticLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-ExperimentalFeature`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `The name or names of the experimental features to enable.`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Determines which "powershell.config.json" to update whether it affects all users or just the current user.`, `ConfigScope`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Enable an experimental feature on startup of new instance of PowerShell.`, `Enable-ExperimentalFeature [-Name] <String[]> [-Confirm] [-Scope {AllUsers | CurrentUser}] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-JobTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-LocalUser`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PSBreakpoint`, [
            new Parameter_js_3.Parameter(`Breakpoint`, `Specifies the breakpoints to enable. Provide a variable containing breakpoints or a command that gets breakpoint objects, such as "Get-PSBreakpoint". You can also pipe breakpoint objects to "Enable-PSBreakpoint".`, `Breakpoint[]`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the Id numbers of the breakpoints to enable. The default value is all breakpoints. Provide the Id by number or in a variable. You can't pipe Id numbers to "Enable-PSBreakpoint". To find the Id of a breakpoint, use the "Get-PSBreakpoint" cmdlet.`, `Int32[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the breakpoint being enabled. By default, this cmdlet doesn't generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Enables the breakpoints in the current console.`, `Enable-PSBreakpoint [-Breakpoint] <Breakpoint[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Enable-PSBreakpoint [-Id] <Int32[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PSRemoting`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipNetworkProfileCheck`, `Indicates that this cmdlet enables remoting on client versions of the Windows operating system when the computer is on a public network. This parameter enables a firewall rule for public networks that allows remote access only from computers in the same local subnet.


This parameter does not affect server versions of the Windows operating system, which, by default, have a local subnet firewall rule for public networks. If the local subnet firewall rule is disabled on a server version, "Enable-PSRemoting" re-enables it, regardless of the value of this parameter.


To remove the local subnet restriction and enable remote access from all locations on public networks, use the "Set-NetFirewallRule" cmdlet in the NetSecurity module.


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Configures the computer to receive remote commands.`, `Enable-PSRemoting [-Confirm] [-Force] [-SkipNetworkProfileCheck] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-PSSessionConfiguration`, [
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet does not prompt you for confirmation, and restarts the WinRM service without prompting. Restarting the service makes the configuration change effective.


To prevent a restart and suppress the restart prompt, use the NoServiceRestart parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of session configurations to enable. Enter one or more configuration names. Wildcard characters are permitted.


You can also pipe a string that contains a configuration name or a session configuration object to "Enable-PSSessionConfiguration".


If you omit this parameter, "Enable-PSSessionConfiguration" enables the Microsoft.PowerShell session configuration.`, `String[]`),
            new Parameter_js_3.Parameter(`NoServiceRestart`, `Indicates that the cmdlet does not restart the service.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SecurityDescriptorSddl`, `Specifies a security descriptor with which this cmdlet replaces the security descriptor on the session configuration.


If you omit this parameter, "Enable-PSSessionConfiguration" only deletes the deny all item from the security descriptor.`, `String`),
            new Parameter_js_3.Parameter(`SkipNetworkProfileCheck`, `Indicates that this cmdlet enables the session configuration when the computer is on a public network. This parameter enables a firewall rule for public networks that allows remote access only from computers in the same local subnet. By default, "Enable-PSSessionConfiguration" fails on a public network.


This parameter is designed for client versions of the Windows operating system. Server versions of the Windows operating system have a local subnet firewall rule for public networks. However, if the local subnet firewall rule is disabled on a server version of the Windows operating system, this parameter re-enables it.


To remove the local subnet restriction and enable remote access from all locations on public networks, use the "Set-NetFirewallRule" cmdlet in the NetSecurity module. For more information, see "Enable-PSRemoting".


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Enables the session configurations on the local computer.`, `Enable-PSSessionConfiguration [[-Name] <String[]>] [-Force] [-NoServiceRestart] [-SecurityDescriptorSddl <String>] [-SkipNetworkProfileCheck] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-RunspaceDebug`, [
            new Parameter_js_3.Parameter(`AppDomainName`, ``, `String[]`),
            new Parameter_js_3.Parameter(`BreakAll`, ``, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ProcessName`, ``, `String`),
            new Parameter_js_3.Parameter(`Runspace`, ``, `Runspace[]`),
            new Parameter_js_3.Parameter(`RunspaceId`, ``, `Int32[]`),
            new Parameter_js_3.Parameter(`RunspaceInstanceId`, ``, `Guid[]`),
            new Parameter_js_3.Parameter(`RunspaceName`, ``, `String[]`),
        ], `Enables debugging on runspaces where any breakpoint is preserved until a debugger is attached.`, `Enable-RunspaceDebug [[-ProcessName] <String>] [[-AppDomainName] <String[]>] [<CommonParameters>]

Enable-RunspaceDebug [[-RunspaceName] <String[]>] [[-BreakAll]] [<CommonParameters>]

Enable-RunspaceDebug [-Runspace] <Runspace[]> [[-BreakAll]] [<CommonParameters>]

Enable-RunspaceDebug [-RunspaceId] <Int32[]> [[-BreakAll]] [<CommonParameters>]

Enable-RunspaceDebug [-RunspaceInstanceId] <Guid[]> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-ScheduledJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-TlsCipherSuite`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-TlsEccCurve`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-TlsSessionTicketKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-TpmAutoProvisioning`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-WindowsErrorReporting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-WindowsOptionalFeature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enable-WSManCredSSP`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enter-PSHostProcess`, [
            new Parameter_js_3.Parameter(`AppDomainName`, `Specifies an application domain name to connect to if omitted, uses DefaultAppDomain . Use "Get-PSHostProcessInfo" to display the application domain names.`, `String`),
            new Parameter_js_3.Parameter(`HostProcessInfo`, `Specifies a PSHostProcessInfo object that can be connected to with PowerShell. Use "Get-PSHostProcessInfo" to get the object.`, `PSHostProcessInfo`),
            new Parameter_js_3.Parameter(`Id`, `Specifies a process by the process ID. To get a process ID, run the "Get-Process" cmdlet.`, `Int32`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a process by the process name. To get a process name, run the "Get-Process" cmdlet. You can also get process names from the Properties dialog box of a process in Task Manager.`, `String`),
            new Parameter_js_3.Parameter(`Process`, `Specifies a process by the process object. The simplest way to use this parameter is to save the results of a "Get-Process" command that returns process that you want to enter in a variable, and then specify the variable as the value of this parameter.`, `Process`),
            new Parameter_js_3.Parameter(`CustomPipeName`, `Gets or sets the custom named pipe name to connect to. This is usually used in conjunction with "pwsh -CustomPipeName".


This parameter was introduced in PowerShell 6.2.`, `String`),
        ], `Connects to and enters into an interactive session with a local process.`, `Enter-PSHostProcess [-Id] <Int32> [[-AppDomainName] <String>] [<CommonParameters>]

Enter-PSHostProcess [-Process] <Process> [[-AppDomainName] <String>] [<CommonParameters>]

Enter-PSHostProcess [-Name] <String> [[-AppDomainName] <String>] [<CommonParameters>]

Enter-PSHostProcess [-HostProcessInfo] <PSHostProcessInfo> [[-AppDomainName] <String>] [<CommonParameters>]

Enter-PSHostProcess -CustomPipeName <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Enter-PSSession`, [
            new Parameter_js_3.Parameter(`AllowRedirection`, `Allows redirection of this connection to an alternate Uniform Resource Identifier (URI). By default, redirection is not allowed.


When you use the ConnectionURI parameter, the remote destination can return an instruction to redirect to a different URI. By default, PowerShell does not redirect connections, but you can use this parameter to allow it to redirect the connection.


You can also limit the number of times the connection is redirected by changing the MaximumConnectionRedirectionCount session option value. Use the MaximumRedirection parameter of the New-PSSessionOption cmdlet or set the MaximumConnectionRedirectionCount property of the $PSSessionOption preference variable. The default value is 5.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ApplicationName`, `Specifies the application name segment of the connection URI. Use this parameter to specify the application name when you are not using the ConnectionURI parameter in the command.


The default value is the value of the $PSSessionApplicationName preference variable on the local computer. If this preference variable is not defined, the default value is WSMAN. This value is appropriate for most uses. For more information, see about_Preference_Variables (About/about_Preference_Variables.md).


The WinRM service uses the application name to select a listener to service the connection request. The value of this parameter should match the value of the URLPrefix property of a listener on the remote computer.`, `String`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:


- Default


- Basic


- Credssp


- Digest


- Kerberos


- Negotiate


- NegotiateWithImplicitCredential




The default value is Default.


CredSSP authentication is available only in Windows Vista, Windows Server 2008, and later versions of the Windows operating system.


For more information about the values of this parameter, see AuthenticationMechanism Enum (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).

Caution: Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.


Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.


To get a certificate, use the Get-Item or Get-ChildItem command in the PowerShell Cert: drive.`, `String`),
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies a computer name. This cmdlet starts an interactive session with the specified remote computer. Enter only one computer name. The default is the local computer.


Type the NetBIOS name, the IP address, or the fully qualified domain name of the computer. You can also pipe a computer name to Enter-PSSession .


To use an IP address in the value of the ComputerName parameter, the command must include the Credential parameter. Also, the computer must be configured for HTTPS transport or the IP address of the remote computer must be included in the WinRM TrustedHosts list on the local computer. For instructions for adding a computer name to the TrustedHosts list, see "How to Add a Computer to the Trusted Host List" in about_Remote_Troubleshooting (About/about_Remote_Troubleshooting.md).


Note: In Windows Vista and later versions of the Windows operating system, to include the local computer in the value of the ComputerName parameter, you must start PowerShell with the Run as administrator option.`, `String`),
            new Parameter_js_3.Parameter(`ConfigurationName`, `Specifies the session configuration that is used for the interactive session.


Enter a configuration name or the fully qualified resource URI for a session configuration. If you specify only the configuration name, the following schema URI is prepended: "https://schemas.microsoft.com/powershell".


When used with SSH, this specifies the subsystem to use on the target as defined in sshd_config. The default value for SSH is the "powershell" subsystem.


The session configuration for a session is located on the remote computer. If the specified session configuration does not exist on the remote computer, the command fails.


The default value is the value of the $PSSessionConfigurationName preference variable on the local computer. If this preference variable is not set, the default is Microsoft.PowerShell. For more information, see about_Preference_Variables (About/about_Preference_Variables.md).`, `String`),
            new Parameter_js_3.Parameter(`ConnectionUri`, `Specifies a URI that defines the connection endpoint for the session. The URI must be fully qualified. The format of this string is as follows:


<Transport>://<ComputerName>:<Port>/<ApplicationName>


The default value is as follows:


"http://localhost:5985/WSMAN"


If you do not specify a ConnectionURI , you can use the UseSSL , ComputerName , Port , and ApplicationName parameters to specify the ConnectionURI values.


Valid values for the Transport segment of the URI are HTTP and HTTPS. If you specify a connection URI with a Transport segment, but do not specify a port, the session is created by using standards ports: 80 for HTTP and 443 for HTTPS. To use the default ports for PowerShell remoting, specify port 5985 for HTTP or 5986 for HTTPS.


If the destination computer redirects the connection to a different URI, PowerShell prevents the redirection unless you use the AllowRedirection parameter in the command.`, `Uri`),
            new Parameter_js_3.Parameter(`ContainerId`, `Specifies the ID of a container.`, `String`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to perform this action. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`EnableNetworkAccess`, `Indicates that this cmdlet adds an interactive security token to loopback sessions. The interactive token lets you run commands in the loopback session that get data from other computers. For example, you can run a command in the session that copies XML files from a remote computer to the local computer.


A loopback session is a PSSession that originates and ends on the same computer. To create a loopback session, omit the ComputerName parameter or set its value to . (dot), localhost, or the name of the local computer.


By default, loopback sessions are created by using a network token, which might not provide sufficient permission to authenticate to remote computers.


The EnableNetworkAccess parameter is effective only in loopback sessions. If you use EnableNetworkAccess when you create a session on a remote computer, the command succeeds, but the parameter is ignored.


You can also allow remote access in a loopback session by using the CredSSP value of the Authentication parameter, which delegates the session credentials to other computers.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`HostName`, `Specifies a computer name for a Secure Shell (SSH) based connection. This is similar to the ComputerName parameter except that the connection to the remote computer is made using SSH rather than Windows WinRM. This parameter supports specifying the user name and/or port as part of the host name parameter value using the form "user@hostname:port". The user name and/or port specified as part of the host name takes precedence over the "-UserName" and "-Port" parameters, if specified. This allows passing multiple computer names to this parameter where some have specific user names and/or ports, while others use the user name and/or port from the "-UserName" and "-Port" parameters.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the ID of an existing session. Enter-PSSession uses the specified session for the interactive session.


To find the ID of a session, use the Get-PSSession cmdlet.`, `Int32`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies the instance ID of an existing session. Enter-PSSession uses the specified session for the interactive session.


The instance ID is a GUID. To find the instance ID of a session, use the Get-PSSession cmdlet. You can also use the Session , Name , or ID parameters to specify an existing session. Or, you can use the ComputerName parameter to start a temporary session.`, `Guid`),
            new Parameter_js_3.Parameter(`KeyFilePath`, `Specifies a key file path used by Secure Shell (SSH) to authenticate a user on a remote computer.


SSH allows user authentication to be performed via private/public keys as an alternative to basic password authentication. If the remote computer is configured for key authentication then this parameter can be used to provide the key that identifies the user.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the friendly name of an existing session. Enter-PSSession uses the specified session for the interactive session.


If the name that you specify matches more than one session, the command fails. You can also use the Session , InstanceID , or ID parameters to specify an existing session. Or, you can use the ComputerName parameter to start a temporary session.


To establish a friendly name for a session, use the Name parameter of the New-PSSession cmdlet.`, `String`),
            new Parameter_js_3.Parameter(`Port`, `Specifies the network port on the remote computer that is used for this command.


In PowerShell 6.0 this parameter was inlcuded in the HostName parameter set which supports Secure Shell (SSH) connections. WinRM (ComputerName parameter set) To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985, which is the WinRM port for HTTP, and 5986, which is the WinRM port for HTTPS.


Before using an alternate port, you must configure the WinRM listener on the remote computer to listen at that port. Use the following commands to configure the listener:


"1. winrm delete winrm/config/listener?Address=*+Transport=HTTP"


"2. winrm create winrm/config/listener?Address=*+Transport=HTTP @{Port="<port-number>"}"


Do not use the Port parameter unless you must. The port setting in the command applies to all computers or sessions on which the command runs. An alternate port setting might prevent the command from running on all computers. SSH (HostName parameter set) To connect to a remote computer, the remote computer must be configured with the SSH service (SSHD) and must be listening on the port that the connection uses. The default port for SSH is 22.`, `Int32`),
            new Parameter_js_3.Parameter(`RunAsAdministrator`, `Indicates that the PSSession runs as administrator.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Session`, `Specifies a PowerShell session ( PSSession ) to use for the interactive session. This parameter takes a session object. You can also use the Name , InstanceID , or ID parameters to specify a PSSession .


Enter a variable that contains a session object or a command that creates or gets a session object, such as a New-PSSession or Get-PSSession command. You can also pipe a session object to Enter-PSSession . You can submit only one PSSession by using this parameter. If you enter a variable that contains more than one PSSession , the command fails.


When you use Exit-PSSession or the EXIT keyword, the interactive session ends, but the PSSession that you created remains open and available for use.`, `PSSession`),
            new Parameter_js_3.Parameter(`SessionOption`, `Sets advanced options for the session. Enter a SessionOption object, such as one that you create by using the New-PSSessionOption cmdlet, or a hash table in which the keys are session option names and the values are session option values.


The default values for the options are determined by the value of the $PSSessionOption preference variable, if it is set. Otherwise, the default values are established by options set in the session configuration.


The session option values take precedence over default values for sessions set in the $PSSessionOption preference variable and in the session configuration. However, they do not take precedence over maximum values, quotas or limits set in the session configuration.


For a description of the session options, including the default values, see New-PSSessionOption . For information about the $PSSessionOption preference variable, see about_Preference_Variables (About/about_Preference_Variables.md). For more information about session configurations, see about_Session_Configurations (About/about_Session_Configurations.md).`, `PSSessionOption`),
            new Parameter_js_3.Parameter(`SSHTransport`, `Indicates that the remote connection is established using Secure Shell (SSH).


By default PowerShell uses Windows WinRM to connect to a remote computer. This switch forces PowerShell to use the HostName parameter set for establishing an SSH based remote connection.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Subsystem`, `Specifies the SSH subsystem used for the new PSSession .


This specifies the subsystem to use on the target as defined in sshd_config. The subsystem starts a specific version of PowerShell with predefined parameters. If the specified subsystem does not exist on the remote computer, the command fails.


If this parameter is not used, the default is the 'powershell' subsystem.`, `String`),
            new Parameter_js_3.Parameter(`UserName`, `Specifies the user name for the account used to create a session on the remote computer. User authentication method will depend on how Secure Shell (SSH) is configured on the remote computer.


If SSH is configured for basic password authentication then you will be prompted for the user password.


If SSH is configured for key based user authentication then a key file path can be provided via the KeyFilePath parameter and no password prompt will occur. Note that if the client user key file is located in an SSH known location then the KeyFilePath parameter is not needed for key based authentication, and user authentication will occur automatically based on the user name. See SSH documentation about key based user authentication for more information.


This is not a required parameter.  If no UserName parameter is specified then the current log on user name is used for the connection.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`UseSSL`, `Indicates that this cmdlet uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL is not used.


WS-Management encrypts all PowerShell content transmitted over the network. The UseSSL parameter is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection.


If you use this parameter, but SSL is not available on the port that is used for the command, the command fails.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`VMId`, `Specifies the ID of a virtual machine.`, `Guid`),
            new Parameter_js_3.Parameter(`VMName`, `Specifies the name of a virtual machine.`, `String`),
        ], `Starts an interactive session with a remote computer.`, `Enter-PSSession [[-ConnectionUri] <Uri>] [[-Credential] <PSCredential>] [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-EnableNetworkAccess] [-SessionOption <PSSessionOption>] [<CommonParameters>]

Enter-PSSession [-ComputerName] <String> [[-Credential] <PSCredential>] [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-EnableNetworkAccess] [-Port <Int32>] [-SessionOption <PSSessionOption>] [-UseSSL] [<CommonParameters>]

Enter-PSSession [-VMId] <Guid> [[-Credential] <PSCredential>] [-ConfigurationName <String>] [<CommonParameters>]

Enter-PSSession [-VMName] <String> [[-Credential] <PSCredential>] [-ConfigurationName <String>] [<CommonParameters>]

Enter-PSSession [-ContainerId] <String> [-ConfigurationName <String>] [-RunAsAdministrator] [<CommonParameters>]

Enter-PSSession [-HostName] <String> [-KeyFilePath <String>] [-Port <Int32>] [-SSHTransport {true}] [-Subsystem <String>] [-UserName <String>] [<CommonParameters>]

Enter-PSSession [[-Id] <Int32>] [<CommonParameters>]

Enter-PSSession [-InstanceId <Guid>] [<CommonParameters>]

Enter-PSSession [-Name <String>] [<CommonParameters>]

Enter-PSSession [[-Session] <PSSession>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Exit-PSHostProcess`, [], `Closes an interactive session with a local process.`, `Exit-PSHostProcess [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Exit-PSSession`, [], `Ends an interactive session with a remote computer.`, `Exit-PSSession [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Expand-WindowsCustomDataImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Expand-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-Alias`, [
            new Parameter_js_3.Parameter(`Append`, `Indicates that this cmdlet appends the output to the specified file, rather than overwriting the existing contents of that file.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`As`, `Specifies the output format. CSV is the default. The acceptable values for this parameter are:


- CSV. Comma-separated value (CSV) format. - Script. Creates a "Set-Alias" command for each exported alias. If you name the output file with a .ps1 file name extension, you can run it as a script to add the aliases to any session.`, `ExportAliasFormat`),
            new Parameter_js_3.Parameter(`Description`, `Specifies the description of the exported file. The description appears as a comment at the top of the file, following the header information.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.


Overwrites the output file, even if the read-only attribute is set on the file.


By default, "Export-Alias" overwrites files without warning, unless the read-only or hidden attribute is set or the NoClobber parameter is used in the command. The NoClobber parameter takes precedence over the Force parameter when both are used in a command.


The Force parameter cannot force "Export-Alias" to overwrite files with the hidden attribute.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the output file. Unlike Path , the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names as an array of the aliases to export. Wildcards are permitted.


By default, "Export-Alias" exports all aliases in the session or scope.`, `String[]`),
            new Parameter_js_3.Parameter(`NoClobber`, `Indicates that this cmdlet prevents "Export-Alias" from overwriting any files, even if the Force parameter is used in the command.


If the NoClobber parameter is omitted, "Export-Alias" will overwrite an existing file without warning, unless the read-only attribute is set on the file. NoClobber takes precedence over the Force parameter, which permits "Export-Alias" to overwrite a file with the read-only attribute. NoClobber does not prevent the Append parameter from adding content to an existing file.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the output file. Wildcards are permitted, but the resulting path value must resolve to a single file name.`, `String`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope from which the aliases should be exported. The acceptable values for this parameter are:


- Global


- Local


- Script


- A number relative to the current scope (0 through the number of scopes where 0 is the current scope and 1 is its parent)




The default value is Local. For more information, see about_Scopes.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Exports information about currently defined aliases to a file.`, `Export-Alias [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Description <String>] [-Force] -LiteralPath <String> [-NoClobber] [-PassThru] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]

Export-Alias [-Path] <String> [[-Name] <String[]>] [-Append] [-As {Csv | Script}] [-Description <String>] [-Force] [-NoClobber] [-PassThru] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-BinaryMiLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-Certificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-Clixml`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Depth`, `Specifies how many levels of contained objects are included in the XML representation. The default value is "2".


The default value can be overridden for the object type in the "Types.ps1xml" files. For more information, see about_Types.ps1xml (../Microsoft.PowerShell.Core/About/about_Types.ps1xml.md).`, `Int32`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.


Causes the cmdlet to clear the read-only attribute of the output file if necessary. The cmdlet will attempt to reset the read-only attribute when the command completes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object to be converted. Enter a variable that contains the objects, or type a command or expression that gets the objects. You can also pipe objects to "Export-Clixml".`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the file where the XML representation of the object will be stored. Unlike Path , the value of the LiteralPath parameter is used exactly as it's typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`NoClobber`, `Indicates that the cmdlet doesn't overwrite the contents of an existing file. By default, if a file exists in the specified path, "Export-Clixml" overwrites the file without warning.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the file where the XML representation of the object will be stored.`, `String`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Creates an XML-based representation of an object or objects and stores it in a file.`, `Export-Clixml [-Confirm] [-Depth <Int32>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Force] -InputObject <PSObject> -LiteralPath <String> [-NoClobber] [-WhatIf] [<CommonParameters>]

Export-Clixml [-Path] <String> [-Confirm] [-Depth <Int32>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Force] -InputObject <PSObject> [-NoClobber] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-Counter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-Csv`, [
            new Parameter_js_3.Parameter(`Append`, `Use this parameter so that "Export-CSV" adds CSV output to the end of the specified file. Without this parameter, "Export-CSV" replaces the file contents without warning.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Delimiter`, `Specifies a delimiter to separate the property values. The default is a comma (","). Enter a character, such as a colon (":"). To specify a semicolon (";"), enclose it in quotation marks.`, `Char`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the encoding for the exported CSV file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Force`, `This parameter allows "Export-Csv" to overwrite files with the Read Only attribute.


When Force and Append parameters are combined, objects that contain mismatched properties can be written to a CSV file. Only the properties that match are written to the file. The mismatched properties are discarded.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IncludeTypeInformation`, `When this parameter is used the first line of the CSV output contains #TYPE followed by the fully qualified name of the object type. For example, #TYPE System.Diagnostics.Process .


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to export as CSV strings. Enter a variable that contains the objects or type a command or expression that gets the objects. You can also pipe objects to "Export-CSV".`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the CSV output file. Unlike Path , the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, use single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`NoClobber`, `Use this parameter so that "Export-CSV" does not overwrite an existing file. By default, if the file exists in the specified path, "Export-CSV" overwrites the file without warning.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NoTypeInformation`, `Removes the #TYPE information header from the output. This parameter became the default in PowerShell 6.0 and is included for backwards compatibility.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `A required parameter that specifies the location to save the CSV output file.`, `String`),
            new Parameter_js_3.Parameter(`UseCulture`, `Uses the list separator for the current culture as the item delimiter. To find the list separator for a culture, use the following command: "(Get-Culture).TextInfo.ListSeparator".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Prevents the cmdlet from being processed or making changes. The output shows what would happen if the cmdlet were run.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`QuoteFields`, `Specifies the names of the columns that should be quoted. When this parameter is used, only the specified columns are quoted.`, `String[]`),
            new Parameter_js_3.Parameter(`UseQuotes`, `Specifies when quotes are used in the CSV files. Possible values are:


- Never - don't quote anything


- Always - quote everything (default behavior)


- AsNeeded - only quote fields that contain a delimiter character`, `QuoteKind`),
        ], `Converts objects into a series of comma-separated value (CSV) strings and saves the strings to a file.`, `Export-Csv [[-Path] <String>] [[-Delimiter] <Char>] [-Append] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Force] [-IncludeTypeInformation] -InputObject <PSObject> [-LiteralPath <String>] [-NoClobber] [-NoTypeInformation] [-Confirm] [-WhatIf] [-QuoteFields <String[]>] [-UseQuotes <QuoteKind>] [<CommonParameters>]

Export-Csv [[-Path] <String>] [-Append] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Force] [-IncludeTypeInformation] -InputObject <PSObject> [-LiteralPath <String>] [-NoClobber] [-NoTypeInformation] [-UseCulture] [-Confirm] [-WhatIf] [-QuoteFields <String[]>] [-UseQuotes <QuoteKind>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-FormatData`, [
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IncludeScriptBlock`, `Indicates whether script blocks in the format data are exported.


Because script blocks contain code and can be used maliciously, they are not exported by default.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the format data objects to be exported. Enter a variable that contains the objects or a command that gets the objects, such as a Get-FormatData command. You can also pipe the objects from Get-FormatData to Export-FormatData .`, `ExtendedTypeDefinition[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a location for the output file. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`NoClobber`, `Indicates that the cmdlet does not overwrite existing files. By default, Export-FormatData overwrites files without warning unless the file has the read-only attribute.


To direct Export-FormatData to overwrite read-only files, use the Force parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies a location for the output file. Enter a path (optional) and file name with a format.ps1xml file name extension. If you omit the path, Export-FormatData creates the file in the current directory.


If you use a file name extension other than .ps1xml, the Update-FormatData cmdlet will not recognize the file.


If you specify an existing file, Export-FormatData overwrites the file without warning, unless the file has the read-only attribute. To overwrite a read-only file, use the Force parameter. To prevent files from being overwritten, use the NoClobber parameter.`, `String`),
        ], `Saves formatting data from the current session in a formatting file.`, `Export-FormatData [-Force] [-IncludeScriptBlock] -InputObject <ExtendedTypeDefinition[]> -LiteralPath <String> [-NoClobber] [<CommonParameters>]

Export-FormatData [-Force] [-IncludeScriptBlock] -InputObject <ExtendedTypeDefinition[]> [-NoClobber] -Path <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-ModuleMember`, [
            new Parameter_js_3.Parameter(`Alias`, `Specifies the aliases that are exported from the script module file. Enter the alias names. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Cmdlet`, `Specifies the cmdlets that are exported from the script module file. Enter the cmdlet names. Wildcard characters are permitted.


You cannot create cmdlets in a script module file, but you can import cmdlets from a binary module into a script module and re-export them from the script module.`, `String[]`),
            new Parameter_js_3.Parameter(`Function`, `Specifies the functions that are exported from the script module file. Enter the function names. Wildcard characters are permitted. You can also pipe function name strings to Export-ModuleMember .`, `String[]`),
            new Parameter_js_3.Parameter(`Variable`, `Specifies the variables that are exported from the script module file. Enter the variable names, without a dollar sign. Wildcard characters are permitted.`, `String[]`),
        ], `Specifies the module members that are exported.`, `Export-ModuleMember [[-Function] <String[]>] [-Alias <String[]>] [-Cmdlet <String[]>] [-Variable <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-PfxCertificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-ProvisioningPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-PSSession`, [
            new Parameter_js_3.Parameter(`AllowClobber`, `Exports the specified commands, even if they have the same names as commands in the current session.


If you export a command with the same name as a command in the current session, the exported command hides or replaces the original commands. For more information, see about_Command_Precedence (../Microsoft.PowerShell.Core/About/about_Command_Precedence.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ArgumentList`, `Exports the variant of the command that results from using the specified arguments (parameter values).


For example, to export the variant of the "Get-Item" command in the certificate (Cert:) drive in the PSSession in "$S", type "Export-PSSession -Session $S -Command Get-Item -ArgumentList cert:".`, `Object[]`),
            new Parameter_js_3.Parameter(`Certificate`, `Specifies the client certificate that is used to sign the format files (*.Format.ps1xml) or script module files (.psm1) in the module that "Export-PSSession" creates. Enter a variable that contains a certificate or a command or expression that gets the certificate.


To find a certificate, use the "Get-PfxCertificate" cmdlet or use the "Get-ChildItem" cmdlet in the Certificate (Cert:) drive. If the certificate is not valid or does not have sufficient authority, the command fails.`, `X509Certificate2`),
            new Parameter_js_3.Parameter(`CommandName`, `Exports only the commands with the specified names or name patterns. Wildcards are permitted. Use CommandName or its alias, Name .


By default, "Export-PSSession" exports all commands from the PSSession except for commands that have the same names as commands in the current session. This prevents commands from being hidden or replaced by commands in the current session. To export all commands, even those that hide or replace other commands, use the AllowClobber parameter.


If you use the CommandName parameter, the formatting files for the commands are not exported unless you use the FormatTypeName parameter. Similarly, if you use the FormatTypeName parameter, no commands are exported unless you use the CommandName parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`CommandType`, `Exports only the specified types of command objects. Use CommandType or its alias, Type .


The acceptable values for this parameter are as follows:


- Alias. All PowerShell aliases in the current session.


- All. All command types. It is the equivalent of "Get-Command -Name *".


- Application. All files other than PowerShell files in paths listed in the Path environment


variable ("$env:path"), including .txt, .exe, and .dll files. - Cmdlet. The cmdlets in the current session. Cmdlet is the default.


- Configuration. A PowerShell configuration. For more information, see about_Session_Configurations (../Microsoft.PowerShell.Core/About/about_Session_Configurations.md). - ExternalScript. All .ps1 files in the paths listed in the Path environment variable   ("$env:path"). - Filter and Function. All PowerShell functions.


- Script. Script blocks in the current session.


- Workflow. A PowerShell workflow. For more information, see about_Workflows (/powershell/module/psworkflow/about/about_workflows?view=powershell-5.1).`, `CommandTypes`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Force`, `Overwrites one or more existing output files, even if the file has the read-only attribute.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FormatTypeName`, `Exports formatting instructions only for the specified Microsoft .NET Framework types. Enter the type names. By default, "Export-PSSession" exports formatting instructions for all .NET Framework types that are not in the System.Management.Automation namespace.


The value of this parameter must be the name of a type that is returned by a "Get-FormatData" command in the session from which the commands are being imported. To get all of the formatting data in the remote session, type "*".


If you use the FormatTypeName parameter, no commands are exported unless you use the CommandName parameter.


If you use the CommandName parameter, the formatting files for the commands are not exported unless you use the FormatTypeName parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`FullyQualifiedModule`, `Specifies modules with names that are specified in the form of ModuleSpecification objects. See the Remarks section of ModuleSpecification Constructor (Hashtable) (https://msdn.microsoft.com/library/jj136290).


For example, the FullyQualifiedModule parameter accepts a module name that is specified in either of these formats:


"@{ModuleName = "modulename"; ModuleVersion = "version_number"}"


"@{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"}" ModuleName and ModuleVersion are required, but Guid is optional. You cannot specify the FullyQualifiedModule parameter in the same command as a Module parameter; the two parameters are mutually exclusive.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`Module`, `Exports only the commands in the specified PowerShell snap-ins and modules. Enter the snap-in and module names. Wildcards are not permitted.


For more information, see "Import-Module" and about_PSSnapins (/powershell/module/microsoft.powershell.core/about/about_pssnapins?view=powershell-5.1).`, `String[]`),
            new Parameter_js_3.Parameter(`OutputModule`, `Specifies an optional path and name for the module created by "Export-PSSession". The default path is "$home\\Documents\\WindowsPowerShell\\Modules". This parameter is required.


If the module subdirectory or any of the files that "Export-PSSession" creates already exist, the command fails. To overwrite existing files, use the Force parameter.`, `String`),
            new Parameter_js_3.Parameter(`Session`, `Specifies the PSSession from which the commands are exported. Enter a variable that contains a session object or a command that gets a session object, such as a "Get-PSSession" command. This parameter is required.`, `PSSession`),
        ], `Exports commands from another session and saves them in a PowerShell module.`, `Export-PSSession [-Session] <PSSession> [-OutputModule] <String> [[-CommandName] <String[]>] [[-FormatTypeName] <String[]>] [-AllowClobber] [-ArgumentList <Object[]>] [-Certificate <X509Certificate2>] [-CommandType {Alias | All | Application | Cmdlet | Configuration | ExternalScript | Filter | Function | Script | Workflow}] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Force] [-FullyQualifiedModule <ModuleSpecification[]>] [-Module <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-StartLayout`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-StartLayoutEdgeAssets`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-TlsSessionTicketKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-Trace`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-WindowsCapabilitySource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-WindowsDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Export-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-Package`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Find-PackageProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`ForEach-Object`, [
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies an array of arguments to a method call.


This parameter was introduced in Windows PowerShell 3.0.`, `Object[]`),
            new Parameter_js_3.Parameter(`Begin`, `Specifies a script block that runs before this cmdlet processes any input objects.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`End`, `Specifies a script block that runs after this cmdlet processes all input objects.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the input objects. "ForEach-Object" runs the script block or operation statement on each input object. Enter a variable that contains the objects, or type a command or expression that gets the objects.


When you use the InputObject parameter with "ForEach-Object", instead of piping command results to "ForEach-Object", the InputObject value is treated as a single object. This is true even if the value is a collection that is the result of a command, such as "-InputObject (Get-Process)". Because InputObject cannot return individual properties from an array or collection of objects, we recommend that if you use "ForEach-Object" to perform operations on a collection of objects for those objects that have specific values in defined properties, you use "ForEach-Object" in the pipeline, as shown in the examples in this topic.`, `PSObject`),
            new Parameter_js_3.Parameter(`MemberName`, `Specifies the property to get or the method to call.


Wildcard characters are permitted, but work only if the resulting string resolves to a unique value. If, for example, you run "Get-Process | ForEach -MemberName *Name", and more than one member exists with a name that contains the string Name, such as the ProcessName and Name properties, the command fails.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Process`, `Specifies the operation that is performed on each input object. Enter a script block that describes the operation.`, `ScriptBlock[]`),
            new Parameter_js_3.Parameter(`RemainingScripts`, `Specifies all script blocks that are not taken by the Process parameter.


This parameter was introduced in Windows PowerShell 3.0.`, `ScriptBlock[]`),
            new Parameter_js_3.Parameter(`Parallel`, `Specifies the script block to be used for parallel processing of input objects. Enter a script block that describes the operation.


This parameter was introduced in PowerShell 7.0.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`ThrottleLimit`, `Specifies the number of script blocks that will run at a time. Input objects will be blocked until the running script block count falls below the ThrottleLimit . The default value is "5".


This parameter was introduced in PowerShell 7.0.`, `int`),
            new Parameter_js_3.Parameter(`TimeoutSeconds`, `Specifies the number of seconds to wait for all input to be processed in parallel. After the specified timeout time, all running scripts are stopped. And any remaining input objects to be processed are ignored. Default value of "0" disables the timeout, and "ForEach-Object -Parallel" can run indefinitely. Typing <kbd>Ctrl</kbd>+<kbd>C</kbd> at the command line stops a running "ForEach-Object -Parallel" command. This parameter cannot be used along with the "-AsJob" parameter.


This parameter was introduced in PowerShell 7.0.`, `int`),
            new Parameter_js_3.Parameter(`AsJob`, `Causes the parallel invocation to run as a PowerShell job. A single job object is returned instead of output from the running script blocks. The job object contains child jobs for each parallel script block that runs. The job object can be used by all PowerShell job cmdlets, to monitor running state and retrieve data.


This parameter was introduced in PowerShell 7.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Performs an operation against each item in a collection of input objects.`, `ForEach-Object [-MemberName] <String> [-ArgumentList <Object[]>] [-InputObject <PSObject>] [-Confirm] [-WhatIf] [<CommonParameters>]

ForEach-Object [-Process] <ScriptBlock[]> [-Begin <ScriptBlock>] [-End <ScriptBlock>] [-InputObject <PSObject>] [-RemainingScripts <ScriptBlock[]>] [-Confirm] [-WhatIf] [<CommonParameters>]

ForEach-Object [-InputObject <PSObject>] -Parallel <ScriptBlock> [-ThrottleLimit <int>] [-TimeoutSeconds <int>] [-AsJob] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Format-Custom`, [
            new Parameter_js_3.Parameter(`Depth`, `Specifies the number of columns in the display.`, `Int32`),
            new Parameter_js_3.Parameter(`DisplayError`, `Displays errors at the command line. This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a "Format-Custom" command, and the expressions do not appear to be working.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Expand`, `Formats the collection object, as well as the objects in the collection. This parameter is designed to format objects that support the ICollection (System.Collections) interface. The default value is EnumOnly .


Valid values are:


- EnumOnly: Displays the properties of the objects in the collection.


- CoreOnly: Displays the properties of the collection object.


- Both: Displays the properties of the collection object and the properties of objects in the collection.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Directs the cmdlet to display all of the error information. Use with the DisplayError or ShowError parameters. By default, when an error object is written to the error or display streams, only some of the error information is displayed.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`GroupBy`, `Formats the output in groups based on a shared property or value. Enter an expression or a property of the output.


The value of the GroupBy parameter can be a new calculated property. To create a calculated, property, use a hash table. Valid keys are:


- Name (or Label) <string>


- Expression <string> or <script block>


- FormatString <string>`, `Object`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be formatted. Enter a variable that contains the objects or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the object properties that appear in the display and the order in which they appear. Wildcards are permitted.


If you omit this parameter, the properties that appear in the display depend on the object being displayed. The parameter name ("Property") is optional. You cannot use the Property and View parameters in the same command.


The value of the Property parameter can be a new calculated property. To create a calculated property, use a hash table. Valid keys are:


- Expression <string> or <script block>


- Depth <int32>`, `Object[]`),
            new Parameter_js_3.Parameter(`ShowError`, `Sends errors through the pipeline. This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a "Format-Custom" command, and the expressions do not appear to be working.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`View`, `Specifies the name of an alternate format or "view." If you omit this parameter, "Format-Custom" uses a default custom view. You cannot use the Property and View parameters in the same command.`, `String`),
        ], `Uses a customized view to format the output.`, `Format-Custom [[-Property] <Object[]>] [-Depth <Int32>] [-DisplayError] [-Expand {CoreOnly | EnumOnly | Both}] [-Force] [-GroupBy <Object>] [-InputObject <PSObject>] [-ShowError] [-View <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Format-Hex`, [
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the encoding of the output. This only applies to "[string]" input. The parameter has no effect on numeric types. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`InputObject`, `Used for pipeline input. Pipeline input supports only certain scalar types and "[system.io.fileinfo]" instances for piping from "Get-ChildItem".


The supported scalar types are:


- "[string]", "[char]"


- "[byte]", "[sbyte]"


- "[int16]", "[uint16]", "[short]", "[ushort]"


- "[int]", "[uint]", "[int32]", "[uint32]",


- "[long]", "[ulong]", "[int64]", "[uint64]"


- "[single]", "[float]", "[double]"


- "[boolean]"




Prior to PowerShell 6.2, "Format-Hex" would handle a Pipeline input with multiple input types by grouping all like objects together. Now, it handles each individual object as it passes through the Pipeline and won't group objects together unless like objects are adjacent.`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the complete path to a file. The value of LiteralPath is used exactly as it is typed. This parameter does not accept wildcard characters. To specify multiple paths to files, separate the paths with a comma. If the LiteralPath parameter includes escape characters, enclose the path in single quotation marks. PowerShell does not interpret any characters in a single quoted string as escape sequences. For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to files. Use a dot (".") to specify the current location. The wildcard character (" ") is accepted and can be used to specify all the items in a location. If the Path * parameter includes escape characters, enclose the path in single quotation marks. To specify multiple paths to files, separate the paths with a comma.`, `String[]`),
            new Parameter_js_3.Parameter(`Raw`, `This parameter no longer does anything. It is retained for script compatibility.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Offset`, `This represents the number of bytes to skip from being part of the hex output.


This parameter was introduced in PowerShell 6.2.`, `Int64`),
            new Parameter_js_3.Parameter(`Count`, `This represents the number of bytes to include in the hex output.


This parameter was introduced in PowerShell 6.2.`, `Int64`),
        ], `Displays a file or other input as hexadecimal.`, `Format-Hex [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] -InputObject <PSObject> [-Raw] [-Offset <Int64>] [-Count <Int64>] [<CommonParameters>]

Format-Hex -LiteralPath <String[]> [-Offset <Int64>] [-Count <Int64>] [<CommonParameters>]

Format-Hex [-Path] <String[]> [-Offset <Int64>] [-Count <Int64>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Format-List`, [
            new Parameter_js_3.Parameter(`DisplayError`, `Indicates that this cmdlet displays errors at the command line. This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a "Format-List" command, and the expressions do not appear to be working.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Expand`, `Specifies the formatted collection object, as well as the objects in the collection. This parameter is designed to format objects that support the ICollection (System.Collections) interface. The default value is EnumOnly. The acceptable values for this parameter are:


- EnumOnly. Displays the properties of the objects in the collection. - CoreOnly. Displays the properties of the collection object.


- Both. Displays the properties of the collection object and the properties of objects in the  collection.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet displays all of the error information. Use with the DisplayError or ShowError parameter. By default, when an error object is written to the error or display streams, only some of the error information is displayed.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`GroupBy`, `Specifies the output in groups based on a shared property or value. Enter an expression or a property of the output.


The value of the GroupBy parameter can be a new calculated property. To create a calculated, property, use a hash table. Valid keys are:


- Name (or Label) <string>


- Expression <string> or <script block>


- FormatString <string>`, `Object`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be formatted. Enter a variable that contains the objects or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the object properties that appear in the display and the order in which they appear. Wildcards are permitted.


If you omit this parameter, the properties that appear in the display depend on the object being displayed. The parameter name "Property" is optional. You cannot use the Property and View parameters in the same command.


The value of the Property parameter can be a new calculated property. To create a calculated property, use a hash table. Valid keys are:


- Name (or Label) <string>


- Expression <string> or <script block>


- FormatString <string>`, `Object[]`),
            new Parameter_js_3.Parameter(`ShowError`, `Indicates that the cmdlet sends errors through the pipeline. This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a "Format-List" command, and the expressions do not appear to be working.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`View`, `Specifies the name of an alternate list format or view. You cannot use the Property and View parameters in the same command.`, `String`),
        ], `Formats the output as a list of properties in which each property appears on a new line.`, `Format-List [[-Property] <Object[]>] [-DisplayError] [-Expand {CoreOnly | EnumOnly | Both}] [-Force] [-GroupBy <Object>] [-InputObject <PSObject>] [-ShowError] [-View <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Format-SecureBootUEFI`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Format-Table`, [
            new Parameter_js_3.Parameter(`AutoSize`, `Indicates that the cmdlet adjusts the column size and number of columns based on the width of the data. By default, the column size and number are determined by the view.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`DisplayError`, `Indicates that the cmdlet displays errors on the command line. This parameter can be used as a debugging aid when you're formatting expressions in a "Format-Table" command and need to troubleshoot the expressions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Expand`, `Specifies the format of the collection object and the objects in the collection. This parameter is designed to format objects that support the ICollection (/dotnet/api/system.collections.icollection)( System.Collections (/dotnet/api/system.collections))interface. The default value is EnumOnly . The acceptable values for this parameter are as follows:


- EnumOnly : Displays the properties of the objects in the collection. - CoreOnly : Displays the properties of the collection object. - Both : Displays the properties of the collection object and the properties of objects in the   collection.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet directs the cmdlet to display all the error information. Use with the DisplayError or ShowError parameter. By default, when an error object is written to the error or display streams, only some of the error information is displayed.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`GroupBy`, `Specifies sorted output in separate tables based on a property value. For example, you can use GroupBy to list services in separate tables based on their status.


Enter an expression or a property. The GroupBy parameter expects that the objects are sorted. Use the "Sort-Object" cmdlet before using "Format-Table" to group the objects.


The value of the GroupBy parameter can be a new calculated property. To create a calculated, property, use a hash table. The valid keys are as follows:


- Name (or Label) = "<string>"


- Expression = "<string>" or "<script block>"


- FormatString = "<string>"`, `Object`),
            new Parameter_js_3.Parameter(`HideTableHeaders`, `Omits the column headings from the table.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to format. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the object properties that appear in the display and the order in which they appear. Type one or more property names, separated by commas, or use a hash table to display a calculated property. Wildcards are permitted.


If you omit this parameter, the properties that appear in the display depend on the first object's properties. For example, if the first object has PropertyA and PropertyB but subsequent objects have PropertyA , PropertyB , and PropertyC , then only the PropertyA and PropertyB headers will display.


The Property parameter is optional. You can't use the Property and View parameters in the same command.


The value of the Property parameter can be a new calculated property. To create a calculated property, use a hash table. The valid keys are as follows:


- Name (or Label) = "<string>"


- Expression = "<string>" or "<script block>"


- FormatString = "<string>"


- Width = "<int32>"


- Alignment = value can be Left, Center, or Right`, `Object[]`),
            new Parameter_js_3.Parameter(`RepeatHeader`, `Repeats displaying the header of a table after every screen full. The repeated header is useful when the output is piped to a pager such as "less" or "more" or paging with a screen reader.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ShowError`, `This parameter sends errors through the pipeline. This parameter can be used as a debugging aid when you're formatting expressions in a "Format-Table" command and need to troubleshoot the expressions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`View`, `Beginning in PowerShell 6, the default views are defined in PowerShell "C#" source code. The "*.format.ps1xml" files from PowerShell 5.1 and earlier versions don't exist in PowerShell 6 and later versions.


The View parameter lets you specify an alternate format or custom view for the table. You can use the default PowerShell views or create custom views. For more information about how to create a custom view, see about_Format.ps1xml (../Microsoft.PowerShell.Core/About/about_Format.ps1xml.md).


The alternate and custom views for the View parameter must use the table format, otherwise, "Format-Table" fails. If the alternate view is a list, use the "Format-List" cmdlet. If the alternate view isn't a list or a table, use the "Format-Custom" cmdlet.


You can't use the Property and View parameters in the same command.`, `String`),
            new Parameter_js_3.Parameter(`Wrap`, `Displays text that exceeds the column width on the next line. By default, text that exceeds the column width is truncated.`, `SwitchParameter`),
        ], `Formats the output as a table.`, `Format-Table [[-Property] <Object[]>] [-AutoSize] [-DisplayError] [-Expand {CoreOnly | EnumOnly | Both}] [-Force] [-GroupBy <Object>] [-HideTableHeaders] [-InputObject <PSObject>] [-RepeatHeader] [-ShowError] [-View <String>] [-Wrap] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Format-Wide`, [
            new Parameter_js_3.Parameter(`AutoSize`, `Adjusts the column size and number of columns based on the width of the data. By default, the column size and number are determined by the view. You cannot use the AutoSize and Column parameters in the same command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Column`, `Specifies the number of columns in the display. You cannot use the AutoSize and Column parameters in the same command.`, `Int32`),
            new Parameter_js_3.Parameter(`DisplayError`, `Displays errors at the command line. This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a "Format-Wide" command, and the expressions do not appear to be working.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Expand`, `Formats the collection object, as well as the objects in the collection. This parameter is designed to format objects that support the ICollection (System.Collections) interface. The default value is EnumOnly .


Valid values are:


- EnumOnly: Displays the properties of the objects in the collection.


- CoreOnly: Displays the properties of the collection object.


- Both: Displays the properties of the collection object and the properties of objects in the


collection.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet overrides restrictions that prevent the command from succeeding, just so the changes do not compromise security. For example, Force will override the read-only attribute or create directories to complete a file path, but it will not attempt to change file permissions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`GroupBy`, `Formats the output in groups based on a shared property or value. Enter an expression or a property of the output.


The value of the GroupBy parameter can be a new calculated property. To create a calculated, property, use a hash table. The acceptable values for this parameter are:


- Name (or Label) <string>


- Expression <string> or <script block>


- FormatString <string>`, `Object`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to format. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the object properties that appear in the display and the order in which they appear. Wildcards are permitted.


If you omit this parameter, the properties that appear in the display depend on the object being displayed. The parameter name "Property" is optional. You cannot use the Property and View parameters in the same command.


The value of the Property parameter can be a new calculated property. To create a calculated property, use a hash table. Valid keys are:


- Expression <string> or <script block>


- FormatString <string>`, `Object`),
            new Parameter_js_3.Parameter(`ShowError`, `Sends errors through the pipeline. This parameter is rarely used, but can be used as a debugging aid when you are formatting expressions in a "Format-Wide" command, and the expressions do not appear to be working.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`View`, `Specifies the name of an alternate table format or view. You cannot use the Property and View parameters in the same command.`, `String`),
        ], `Formats objects as a wide table that displays only one property of each object.`, `Format-Wide [[-Property] <Object>] [-AutoSize] [-Column <Int32>] [-DisplayError] [-Expand {CoreOnly | EnumOnly | Both}] [-Force] [-GroupBy <Object>] [-InputObject <PSObject>] [-ShowError] [-View <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Acl`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Alias`, [
            new Parameter_js_3.Parameter(`Definition`, `Gets the aliases for the specified item. Enter the name of a cmdlet, function, script, file, or executable file.


This parameter is called Definition , because it searches for the item name in the Definition property of the alias object.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Omits the specified items. The value of this parameter qualifies the Name and Definition parameters. Enter a name, a definition, or a pattern, such as "s*". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the aliases that this cmdlet gets. Wildcards are permitted. By default, "Get-Alias" retrieves all aliases defined for the current session. The parameter name Name is optional. You can also pipe alias names to "Get-Alias".`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope for which this cmdlet gets aliases. The acceptable values for this parameter are:


- Global


- Local


- Script


- A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent)




Local is the default. For more information, see about_Scopes.`, `String`),
        ], `Gets the aliases for the current session.`, `Get-Alias [-Definition <String[]>] [-Exclude <String[]>] [-Scope <String>] [<CommonParameters>]

Get-Alias [[-Name] <String[]>] [-Exclude <String[]>] [-Scope <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppLockerFileInformation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppLockerPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppxDefaultVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppxPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppxPackageManifest`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppxProvisionedPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AppxVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-AuthenticodeSignature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-BitsTransfer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Certificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CertificateAutoEnrollmentPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CertificateEnrollmentPolicyServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CertificateNotificationTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ChildItem`, [
            new Parameter_js_3.Parameter(`Attributes`, `Gets files and folders with the specified attributes. This parameter supports all attributes and lets you specify complex combinations of attributes.


For example, to get non-system files (not directories) that are encrypted or compressed, type:


"Get-ChildItem -Attributes !Directory+!System+Encrypted, !Directory+!System+Compressed"


To find files and folders with commonly used attributes, use the Attributes parameter. Or, the parameters Directory , File , Hidden , ReadOnly , and System .


The Attributes parameter supports the following properties:


- Archive - Compressed - Device - Directory - Encrypted - Hidden - IntegrityStream - Normal - NoScrubData - NotContentIndexed - Offline - ReadOnly - ReparsePoint - SparseFile - System - Temporary For a description of these attributes, see the FileAttributes Enumeration (/dotnet/api/system.io.fileattributes).


To combine attributes, use the following operators:


- "!" (NOT)


- "+" (AND)


- "," (OR)




Do not use spaces between an operator and its attribute. Spaces are accepted after commas.


For common attributes, use the following abbreviations:


- "D" (Directory)


- "H" (Hidden)


- "R" (Read-only)

- "S" (System)`, `System.Management.Automation.FlagsExpression^1[System.IO.FileAttributes]`),
            new Parameter_js_3.Parameter(`Depth`, `This parameter was added in PowerShell 5.0 and enables you to control the depth of recursion. By default, "Get-ChildItem" displays the contents of the parent directory. The Depth parameter determines the number of subdirectory levels that are included in the recursion and displays the contents.


For example, "Depth 2" includes the Path parameter's directory, first level of subdirectories, and second level of subdirectories. By default directory names and file names are included in the output.


> [!NOTE] > On a Windows computer from PowerShell or cmd.exe , you can display a graphical view of a > directory structure with the tree.com command.`, `UInt32`),
            new Parameter_js_3.Parameter(`Directory`, `To get a list of directories, use the Directory parameter or the Attributes parameter with the Directory property. You can use the Recurse parameter with Directory .`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, a property or property that this cmdlet excludes from the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt" or "A ". Wildcard characters are accepted.


A trailing asterisk (" ") in the Path * parameter is optional. For example, "-Path C:\\Test\\Logs" or "-Path C:\\Test\\Logs\ ". If a trailing asterisk (" ") is included, the command recurses into the Path parameter's subdirectories. Without the asterisk (" "), the contents of the Path * parameter are displayed. More details are included in Example 5 and the Notes section.`, `String[]`),
            new Parameter_js_3.Parameter(`File`, `To get a list of files, use the File parameter. You can use the Recurse parameter with File .`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved. The filter string is passed to the .NET API to enumerate files. That API only supports "*" and "?" wildcards.`, `String`),
            new Parameter_js_3.Parameter(`FollowSymlink`, `By default, the "Get-ChildItem" cmdlet displays symbolic links to directories found during recursion, but does not recurse into them. Use the FollowSymlink parameter to search the directories that target those symbolic links. The FollowSymlink is a dynamic parameter and is supported only in the FileSystem provider.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Force`, `Allows the cmdlet to get items that cannot otherwise not be accessed by the user, such as hidden or system files. The Force parameter does not override security restrictions. Implementation varies among providers. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Hidden`, `To get only hidden items, use the Hidden parameter or the Attributes parameter with the Hidden property. By default, "Get-ChildItem" does not display hidden items. Use the Force parameter to get hidden items.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Gets only the names of the items in the location. The output is a string object that can be sent down the pipeline to other commands. Wildcards are permitted.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies a path to one or more locations. Wildcards are accepted. The default location is the current directory (".").`, `String[]`),
            new Parameter_js_3.Parameter(`ReadOnly`, `To get only read-only items, use the ReadOnly parameter or the Attributes parameter ReadOnly property.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Recurse`, `Gets the items in the specified locations and in all child items of the locations.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`System`, `Gets only system files and directories. To get only system files and folders, use the System parameter or Attributes parameter System property.`, `SwitchParameter`),
        ], `Gets the items and child items in one or more specified locations.`, `Get-ChildItem [[-Filter] <String>] [-Attributes {Archive | Compressed | Device | Directory | Encrypted | Hidden | IntegrityStream | Normal | NoScrubData | NotContentIndexed | Offline | ReadOnly | ReparsePoint | SparseFile | System | Temporary}] [-Depth <UInt32>] [-Directory] [-Exclude <String[]>] [-File] [-FollowSymlink] [-Force] [-Hidden] [-Include <String[]>] -LiteralPath <String[]> [-Name] [-ReadOnly] [-Recurse] [-System] [<CommonParameters>]

Get-ChildItem [[-Path] <String[]>] [[-Filter] <String>] [-Attributes {Archive | Compressed | Device | Directory | Encrypted | Hidden | IntegrityStream | Normal | NoScrubData | NotContentIndexed | Offline | ReadOnly | ReparsePoint | SparseFile | System | Temporary}] [-Depth <UInt32>] [-Directory] [-Exclude <String[]>] [-File] [-FollowSymlink] [-Force] [-Hidden] [-Include <String[]>] [-Name] [-ReadOnly] [-Recurse] [-System] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CimAssociatedInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CimClass`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CimInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CimSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CIPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CIPolicyIdInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CIPolicyInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Clipboard`, [
            new Parameter_js_3.Parameter(`Raw`, `Indicates that this cmdlet ignores newline characters and gets the entire contents of the clipboard.`, `SwitchParameter`),
        ], `Gets the contents of the clipboard.`, `Get-Clipboard [-Raw] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-CmsMessage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Command`, [
            new Parameter_js_3.Parameter(`All`, `Indicates that this cmdlet gets all commands, including commands of the same type that have the same name. By default, "Get-Command" gets only the commands that run when you type the command name.


For more information about the method that PowerShell uses to select the command to run when multiple commands have the same name, see about_Command_Precedence (About/about_Command_Precedence.md). For information about module-qualified command names and running commands that do not run by default because of a name conflict, see about_Modules (About/about_Modules.md).


This parameter was introduced in Windows PowerShell 3.0.


In Windows PowerShell 2.0, "Get-Command" gets all commands by default.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies an array of arguments. This cmdlet gets information about a cmdlet or function when it is used with the specified parameters ("arguments"). The alias for ArgumentList is Args .


To detect dynamic parameters that are available only when certain other parameters are used, set the value of ArgumentList to the parameters that trigger the dynamic parameters.


To detect the dynamic parameters that a provider adds to a cmdlet, set the value of the ArgumentList parameter to a path in the provider drive, such as WSMan:, HKLM:, or Cert:. When the command is a PowerShell provider cmdlet, enter only one path in each command. The provider cmdlets return only the dynamic parameters for the first path the value of ArgumentList . For information about the provider cmdlets, see about_Providers (About/about_Providers.md).`, `Object[]`),
            new Parameter_js_3.Parameter(`CommandType`, `Specifies the types of commands that this cmdlet gets. Enter one or more command types. Use CommandType or its alias, Type . By default, "Get-Command" gets all cmdlets, functions, and aliases.


The acceptable values for this parameter are:


- Alias. Gets the aliases of all PowerShell commands. For more information, see about_Aliases (About/about_Aliases.md). - All. Gets all command types. This parameter value is the equivalent of "Get-Command *".


- Application. Gets non-PowerShell files in paths listed in the Path environment   variable ($env:path), including .txt, .exe, and .dll files. For more information about the Path environment variable, see about_Environment_Variables. - Cmdlet. Gets all cmdlets.


- ExternalScript. Gets all .ps1 files in the paths listed in the Path environment variable   ($env:path). - Filter and Function. Gets all PowerShell advanced and simple functions and filters.


- Script. Gets all script blocks. To get PowerShell scripts (.ps1 files), use the ExternalScript


value.`, `CommandTypes`),
            new Parameter_js_3.Parameter(`FullyQualifiedModule`, `Specifies modules with names that are specified in the form of ModuleSpecification objects, described in the Remarks section of ModuleSpecification Constructor (Hashtable) (/dotnet/api/microsoft.powershell.commands.modulespecification.-ctor?view=powershellsdk-1.1.0#Microsoft_PowerShell_Commands_ModuleSpecification__ctor_System_Collections_Hashtable_). For example, the FullyQualifiedModule parameter accepts a module name that is specified in one of the following formats:


- "@{ModuleName = "modulename"; ModuleVersion = "version_number"}" - "@{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"}" ModuleName and ModuleVersion are required, but Guid is optional.


You cannot specify the FullyQualifiedModule parameter in the same command as a Module parameter. The two parameters are mutually exclusive.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`ListImported`, `Indicates that this cmdlet gets only commands in the current session.


Starting in PowerShell 3.0, by default, "Get-Command" gets all installed commands, including, but not limited to, the commands in the current session. In PowerShell 2.0, it gets only commands in the current session.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Module`, `Specifies an array of modules. This cmdlet gets the commands that came from the specified modules. Enter the names of modules or module objects.


This parameter takes string values, but the value of this parameter can also be a PSModuleInfo object, such as the objects that the "Get-Module" and "Import-PSSession" cmdlets return.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies an array of names. This cmdlet gets only commands that have the specified name. Enter a name or name pattern. Wildcard characters are permitted.


To get commands that have the same name, use the All parameter. When two commands have the same name, by default, "Get-Command" gets the command that runs when you type the command name.`, `String[]`),
            new Parameter_js_3.Parameter(`Noun`, `Specifies an array of command nouns. This cmdlet gets commands, which include cmdlets, functions, and aliases, that have names that include the specified noun. Enter one or more nouns or noun patterns. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`ParameterName`, `Specifies an array of parameter names. This cmdlet gets commands in the session that have the specified parameters. Enter parameter names or parameter aliases. Wildcard characters are supported.


The ParameterName and ParameterType parameters search only commands in the current session.


This parameter was introduced in Windows PowerShell 3.0.`, `String[]`),
            new Parameter_js_3.Parameter(`ParameterType`, `Specifies an array of parameter names. This cmdlet gets commands in the session that have parameters of the specified type. Enter the full name or partial name of a parameter type. Wildcard characters are supported.


The ParameterName and ParameterType parameters search only commands in the current session.


This parameter was introduced in Windows PowerShell 3.0.`, `PSTypeName[]`),
            new Parameter_js_3.Parameter(`ShowCommandInfo`, `Indicates that this cmdlet displays command information.


This parameter was introduced in Windows PowerShell 5.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Syntax`, `Indicates that this cmdlet gets only the following specified data about the command:


- Aliases. Gets the standard name.


- Cmdlets. Gets the syntax.


- Functions and filters. Gets the function definition.


- Scripts and applications or files. Gets the path and filename.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`TotalCount`, `Specifies the number of commands to get. You can use this parameter to limit the output of a command.`, `Int32`),
            new Parameter_js_3.Parameter(`UseAbbreviationExpansion`, `Indicates using matching of the characters in the command to find with uppercase characters in a command. For example, "i-psdf" would match "Import-PowerShellDataFile" as each of the characters to find matches an uppercase character in the result. When using this type of match, any wildcards will result in no matches.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UseFuzzyMatching`, `Indicates using a fuzzy matching algorithm when finding commands. The order of the output is from closest match to least likely match. Wildcards should not be used with fuzzy matching as it will attempt to match commands that may contain those wildcard characters.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Verb`, `Specifies an array of command verbs. This cmdlet gets commands, which include cmdlets, functions, and aliases, that have names that include the specified verb. Enter one or more verbs or verb patterns. Wildcard characters are permitted.`, `String[]`),
        ], `Gets all commands.`, `Get-Command [[-Name] <String[]>] [[-ArgumentList] <Object[]>] [-All] [-CommandType {Alias | Function | Filter | Cmdlet | ExternalScript | Application | Script | Workflow | Configuration | All}] [-FullyQualifiedModule <ModuleSpecification[]>] [-ListImported] [-Module <String[]>] [-ParameterName <String[]>] [-ParameterType <PSTypeName[]>] [-ShowCommandInfo] [-Syntax] [-TotalCount <Int32>] [-UseAbbreviationExpansion] [-UseFuzzyMatching] [<CommonParameters>]

Get-Command [-Noun <String[]>] [-Verb <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ComputerInfo`, [
            new Parameter_js_3.Parameter(`Property`, `Specifies, as a string array, the computer properties in which this cmdlet displays.`, `String[]`),
        ], `Gets a consolidated object of system and operating system properties.`, `Get-ComputerInfo [[-Property] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Content`, [
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to an item where "Get-Content" gets the content. Wildcard characters are permitted. The paths must be paths to items, not to containers. For example, you must specify a path to one or more files, not a path to a directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`ReadCount`, `Specifies how many lines of content are sent through the pipeline at a time. The default value is 1. A value of 0 (zero) sends all of the content at one time.


This parameter does not change the content displayed, but it does affect the time it takes to display the content. As the value of ReadCount increases, the time it takes to return the first line increases, but the total time for the operation decreases. This can make a perceptible difference in large items.`, `Int64`),
            new Parameter_js_3.Parameter(`TotalCount`, `Specifies the number of lines from the beginning of a file or other item. The default is -1 (all lines).


You can use the TotalCount parameter name or its aliases, First or Head .`, `Int64`),
            new Parameter_js_3.Parameter(`Tail`, `Specifies the number of lines from the end of a file or other item. You can use the Tail parameter name or its alias, Last . This parameter was introduced in PowerShell 3.0.`, `Int32`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter.


Enter a path element or pattern, such as "*.txt". Wildcard characters are permitted.


The Exclude parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Force will override a read-only attribute or create directories to complete a file path. The Force parameter does not attempt to change file permissions or override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Delimiter`, `Specifies the delimiter that "Get-Content" uses to divide the file into objects while it reads. The default is "\\n", the end-of-line character. When reading a text file, "Get-Content" returns a collection of string objects, each of which ends with an end-of-line character. When you enter a delimiter that does not exist in the file, "Get-Content" returns the entire file as a single, undelimited object.


You can use this parameter to split a large file into smaller files by specifying a file separator, as the delimiter. The delimiter is preserved (not discarded) and becomes the last item in each file section. Delimiter is a dynamic parameter that the FileSystem provider adds to the "Get-Content" cmdlet. This parameter works only in file system drives.


> [!NOTE] > Currently, when the value of the Delimiter parameter is an empty string, "Get-Content" does > not return anything. This is a known issue. To force "Get-Content" to return the entire file as > a single, undelimited string. Enter a value that does not exist in the file.`, `String`),
            new Parameter_js_3.Parameter(`Wait`, `Keeps the file open after all existing lines have been output. While waiting, "Get-Content" checks the file once each second and outputs new lines if present. You can interrupt Wait by pressing CTRL+C . Waiting also ends if the file gets deleted, in which case a non-terminating error is reported. Wait is a dynamic parameter that the FileSystem provider adds to the "Get-Content" cmdlet. This parameter works only in file system drives. Wait cannot be combined with Raw .`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Raw`, `Ignores newline characters and returns the entire contents of a file in one string with the newlines preserved. By default, newline characters in a file are used as delimiters to separate the input into an array of strings. This parameter was introduced in PowerShell 3.0. Raw is a dynamic parameter that the FileSystem provider adds to the "Get-Content" cmdlet This parameter works only in file system drives.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Encoding is a dynamic parameter that the FileSystem provider adds to the "Get-Content" cmdlet. This parameter is available only in file system drives.


When reading from and writing to binary files, use the AsByteStream parameter and a value of 0 for the ReadCount parameter. A ReadCount value of 0 reads the entire file in a single read operation. The default ReadCount value, 1, reads one byte in each read operation and converts each byte into a separate object, which causes errors when you use the "Set-Content" cmdlet to write the bytes to a file unless you use AsByteStream parameter.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Stream`, `Gets the contents of the specified alternate NTFS file stream from the file. Enter the stream name. Wildcards are not supported. Stream is a dynamic parameter that the FileSystem provider adds to the "Get-Content" cmdlet. This parameter works only in file system drives on Windows systems. This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`AsByteStream`, `Specifies that the content should be read as a stream of bytes. The AsByteStream parameter was introduced in Windows PowerShell 6.0.


A warning occurs when you use the AsByteStream parameter with the Encoding parameter. The AsByteStream parameter ignores any encoding and the output is returned as a stream of bytes.`, `SwitchParameter`),
        ], `Gets the content of the item at the specified location.`, `Get-Content [-Path] <String[]> [-ReadCount <Int64>] [-TotalCount <Int64>] [-Tail <Int32>] [-Filter <String>] [-Include <String[]>] [-Exclude <String[]>] [-Force] [-Credential <PSCredential>] [-Delimiter <String>] [-Wait] [-Raw] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Stream <String>] [-AsByteStream] [<CommonParameters>]

Get-Content -LiteralPath <String[]> [-ReadCount <Int64>] [-TotalCount <Int64>] [-Tail <Int32>] [-Filter <String>] [-Include <String[]>] [-Exclude <String[]>] [-Force] [-Credential <PSCredential>] [-Delimiter <String>] [-Wait] [-Raw] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Stream <String>] [-AsByteStream] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Counter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Credential`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Culture`, [
            new Parameter_js_3.Parameter(`ListAvailable`, `Retrieves all cultures supported by the current operating system.


This parameter was introduced in PowerShell 6.2.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Retrieve a specific culture based on the name.


This parameter was introduced in PowerShell 6.2.`, `String[]`),
            new Parameter_js_3.Parameter(`NoUserOverrides`, `Ignore user changes for current culture.


This parameter was introduced in PowerShell 6.2.`, `SwitchParameter`),
        ], `Gets the current culture set in the operating system.`, `Get-Culture [-ListAvailable] [<CommonParameters>]

Get-Culture [-Name <String[]>] [-NoUserOverrides] [<CommonParameters>]

Get-Culture [-NoUserOverrides] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DAPolicyChange`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Date`, [
            new Parameter_js_3.Parameter(`Date`, `Specifies a date and time. Time is optional and if not specified, returns 00:00:00.


Enter the date and time in a format that is standard for the system locale.


For example, in US English:


"Get-Date -Date "6/25/2019 12:30:22"" returns Tuesday, June 25, 2019 12:30:22`, `DateTime`),
            new Parameter_js_3.Parameter(`Day`, `Specifies the day of the month that is displayed. Enter a value from 1 to 31.


If the specified value is greater than the number of days in a month, PowerShell adds the number of days to the month. For example, "Get-Date -Month 2 -Day 31" displays March 3 , not February 31 .`, `Int32`),
            new Parameter_js_3.Parameter(`DisplayHint`, `Determines which elements of the date and time are displayed.


The accepted values are as follows:


- Date : displays only the date - Time : displays only the time - DateTime : displays the date and time`, `DisplayHintType`),
            new Parameter_js_3.Parameter(`Format`, `Displays the date and time in the Microsoft .NET Framework format indicated by the format specifier. The Format parameter outputs a String object.


For a list of available .NET format specifiers, see Custom date and time format strings (/dotnet/standard/base-types/custom-date-and-time-format-strings?view=netframework-4.8).


When the Format parameter is used, "Get-Date" only gets the DateTime object's properties necessary to display the date. As a result, some of the properties and methods of DateTime objects might not be available.


Starting in PowerShell 5.0, you can use the following additional formats as values for the Format parameter.


- FileDate . A file or path-friendly representation of the current date in local time. The format   is "yyyyMMdd" (case-sensitive, using a 4-digit year, 2-digit month, and 2-digit day). For example:   20190627.


- FileDateUniversal . A file or path-friendly representation of the current date in universal   time (UTC). The format is "yyyyMMddZ" (case-sensitive, using a 4-digit year, 2-digit month,   2-digit day, and the letter "Z" as the UTC indicator). For example: 20190627Z.


- FileDateTime . A file or path-friendly representation of the current date and time in local   time, in 24-hour format. The format is "yyyyMMddTHHmmssffff" (case-sensitive, using a 4-digit   year, 2-digit month, 2-digit day, the letter "T" as a time separator, 2-digit hour, 2-digit   minute, 2-digit second, and 4-digit millisecond). For example: 20190627T0840107271.


- FileDateTimeUniversal . A file or path-friendly representation of the current date and time in   universal time (UTC), in 24-hour format. The format is "yyyyMMddTHHmmssffffZ" (case-sensitive,   using a 4-digit year, 2-digit month, 2-digit day, the letter "T" as a time separator, 2-digit   hour, 2-digit minute, 2-digit second, 4-digit millisecond, and the letter "Z" as the UTC   indicator). For example: 20190627T1540500718Z.`, `String`),
            new Parameter_js_3.Parameter(`Hour`, `Specifies the hour that is displayed. Enter a value from 0 to 23.`, `Int32`),
            new Parameter_js_3.Parameter(`Millisecond`, `Specifies the milliseconds in the date. Enter a value from 0 to 999.


This parameter was introduced in PowerShell 3.0.`, `Int32`),
            new Parameter_js_3.Parameter(`Minute`, `Specifies the minute that is displayed. Enter a value from 0 to 59.`, `Int32`),
            new Parameter_js_3.Parameter(`Month`, `Specifies the month that is displayed. Enter a value from 1 to 12.`, `Int32`),
            new Parameter_js_3.Parameter(`Second`, `Specifies the second that is displayed. Enter a value from 0 to 59.`, `Int32`),
            new Parameter_js_3.Parameter(`UFormat`, `Displays the date and time in UNIX format. The UFormat parameter outputs a string object. UFormat specifiers are preceded by a percent sign ("%"), for example, "%m", "%d", and "%Y". The Notes (#notes)section contains a table of valid UFormat specifiers .


When the UFormat parameter is used, "Get-Date" only gets the DateTime object's properties necessary to display the date. As a result, some of the properties and methods of DateTime objects might not be available.`, `String`),
            new Parameter_js_3.Parameter(`Year`, `Specifies the year that is displayed. Enter a value from 1 to 9999.`, `Int32`),
        ], `Gets the current date and time.`, `Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Format <String>] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32>] [-Year <Int32>] [<CommonParameters>]

Get-Date [[-Date] <DateTime>] [-Day <Int32>] [-DisplayHint {Date | Time | DateTime}] [-Hour <Int32>] [-Millisecond <Int32>] [-Minute <Int32>] [-Month <Int32>] [-Second <Int32>] [-UFormat <String>] [-Year <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DeliveryOptimizationLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DeliveryOptimizationPerfSnap`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DeliveryOptimizationPerfSnapThisMonth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DeliveryOptimizationStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DOConfig`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DODownloadMode`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DOPercentageMaxBackgroundBandwidth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-DOPercentageMaxForegroundBandwidth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Error`, [
            new Parameter_js_3.Parameter(`Newest`, `Specifies the number of errors to display that have occurred in the current session.`, `PSExtendedError`),
        ], `Gets and displays the most recent error messages from the current session.`, `Get-Error [[-Newest] <PSExtendedError>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Event`, [
            new Parameter_js_3.Parameter(`EventIdentifier`, `Specifies the event identifiers for which this cmdlet gets events.`, `Int32`),
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies source identifiers for which this cmdlet gets events. The default is all events in the event queue. Wildcards are not permitted.`, `String`),
        ], `Gets the events in the event queue.`, `Get-Event [-EventIdentifier] <Int32> [<CommonParameters>]

Get-Event [[-SourceIdentifier] <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-EventSubscriber`, [
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet gets all event subscribers, including subscribers for events that are hidden by using the SupportEvent parameter of Register-ObjectEvent, Register-WmiEvent, and Register-EngineEvent.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies the SourceIdentifier property value that gets only the event subscribers. By default, Get-EventSubscriber gets all event subscribers in the session. Wildcards are not permitted. This parameter is case-sensitive.`, `String`),
            new Parameter_js_3.Parameter(`SubscriptionId`, `Specifies the subscription identifier that this cmdlet gets. By default, Get-EventSubscriber gets all event subscribers in the session.`, `Int32`),
        ], `Gets the event subscribers in the current session.`, `Get-EventSubscriber [[-SourceIdentifier] <String>] [[-Force]] [<CommonParameters>]

Get-EventSubscriber [-SubscriptionId] <Int32> [[-Force]] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ExecutionPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ExperimentalFeature`, [
            new Parameter_js_3.Parameter(`Name`, `Name or names of specific experimental features to return.`, `String[]`),
        ], `Gets experimental features.`, `Get-ExperimentalFeature [[-Name] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-FileHash`, [
            new Parameter_js_3.Parameter(`Algorithm`, `Specifies the cryptographic hash function to use for computing the hash value of the contents of the specified file or stream. A cryptographic hash function has the property that it is infeasible to find two different files with the same hash value. Hash functions are commonly used with digital signatures and for data integrity. The acceptable values for this parameter are:


- SHA1


- SHA256


- SHA384


- SHA512


- MD5




If no value is specified, or if the parameter is omitted, the default value is SHA256.

For security reasons, MD5 and SHA1, which are no longer considered secure, should only be used for simple change validation, and should not be used to generate hash values for files that require protection from attack or tampering.`, `String`),
            new Parameter_js_3.Parameter(`InputStream`, `Specifies the input stream.`, `Stream`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to a file. Unlike the Path parameter, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose the path in single quotation marks. Single quotation marks instruct PowerShell not to interpret characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to one or more files as an array. Wildcard characters are permitted.`, `String[]`),
        ], `Computes the hash value for a file by using a specified hash algorithm.`, `Get-FileHash [-InputStream] <Stream> [[-Algorithm] {SHA1 | SHA256 | SHA384 | SHA512 | MD5}] [<CommonParameters>]

Get-FileHash [-LiteralPath] <String[]> [[-Algorithm] {SHA1 | SHA256 | SHA384 | SHA512 | MD5}] [<CommonParameters>]

Get-FileHash [-Path] <String[]> [[-Algorithm] {SHA1 | SHA256 | SHA384 | SHA512 | MD5}] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-FormatData`, [
            new Parameter_js_3.Parameter(`PowerShellVersion`, `Specify the version of PowerShell this cmdlet gets for the formatting data. Enter a two digit number separated by a period.


This parameter was added in PowerShell 5.1 to improve compatibility when remoting computers running older versions of PowerShell.`, `Version`),
            new Parameter_js_3.Parameter(`TypeName`, `Specifies the type names that this cmdlet gets for the formatting data. Enter the type names. Wildcards are permitted.`, `String[]`),
        ], `Gets the formatting data in the current session.`, `Get-FormatData [[-TypeName] <String[]>] [-PowerShellVersion <Version>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Help`, [
            new Parameter_js_3.Parameter(`Category`, `Displays help only for items in the specified category and their aliases. Conceptual articles are in the HelpFile category.


The acceptable values for this parameter are as follows:


- Alias


- Cmdlet


- Provider


- General


- FAQ


- Glossary


- HelpFile


- ScriptCommand


- Function


- Filter


- ExternalScript


- All


- DefaultHelp


- Workflow


- DscResource


- Class


- Configuration`, `String[]`),
            new Parameter_js_3.Parameter(`Component`, `Displays commands with the specified component value, such as Exchange . Enter a component name. Wildcard characters are permitted. This parameter has no effect on displays of conceptual ( About_ ) help.`, `String[]`),
            new Parameter_js_3.Parameter(`Detailed`, `Adds parameter descriptions and examples to the basic help display. This parameter is effective only when the help files are installed on the computer. It has no effect on displays of conceptual ( About_ ) help.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Examples`, `Displays only the name, synopsis, and examples. To display only the examples, type "(Get-Help <cmdlet-name>).Examples".


This parameter is effective only when the help files are installed on the computer. It has no effect on displays of conceptual ( About_ ) help.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Full`, `Displays the entire help article for a cmdlet. Full includes parameter descriptions and attributes, examples, input and output object types, and additional notes.


This parameter is effective only when the help files are installed on the computer. It has no effect on displays of conceptual ( About_ ) help.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Functionality`, `Displays help for items with the specified functionality. Enter the functionality. Wildcard characters are permitted. This parameter has no effect on displays of conceptual ( About_ ) help.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Gets help about the specified command or concept. Enter the name of a cmdlet, function, provider, script, or workflow, such as "Get-Member", a conceptual article name, such as "about_Objects", or an alias, such as "ls". Wildcard characters are permitted in cmdlet and provider names, but you can't use wildcard characters to find the names of function help and script help articles.


To get help for a script that isn't located in a path that's listed in the "$env:Path" environment variable, type the script's path and file name.


If you enter the exact name of a help article, "Get-Help" displays the article contents.


If you enter a word or word pattern that appears in several help article titles, "Get-Help" displays a list of the matching titles.


If you enter a word that doesn't match any help article titles, "Get-Help" displays a list of articles that include that word in their contents.


The names of conceptual articles, such as "about_Objects", must be entered in English, even in non-English versions of PowerShell.`, `String`),
            new Parameter_js_3.Parameter(`Online`, `Displays the online version of a help article in the default browser. This parameter is valid only for cmdlet, function, workflow, and script help articles. You can't use the Online parameter with "Get-Help" in a remote session.


For information about supporting this feature in help articles that you write, see about_Comment_Based_Help (./About/about_Comment_Based_Help.md), and Supporting Online Help (/powershell/scripting/developer/module/supporting-online-help), and Writing Help for PowerShell Cmdlets (/powershell/scripting/developer/help/writing-help-for-windows-powershell-cmdlets).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Parameter`, `Displays only the detailed descriptions of the specified parameters. Wildcards are permitted. This parameter has no effect on displays of conceptual ( About_ ) help.`, `String`),
            new Parameter_js_3.Parameter(`Path`, `Gets help that explains how the cmdlet works in the specified provider path. Enter a PowerShell provider path.


This parameter gets a customized version of a cmdlet help article that explains how the cmdlet works in the specified PowerShell provider path. This parameter is effective only for help about a provider cmdlet and only when the provider includes a custom version of the provider cmdlet help article in its help file. To use this parameter, install the help file for the module that includes the provider.


To see the custom cmdlet help for a provider path, go to the provider path location and enter a "Get-Help" command or, from any path location, use the Path parameter of "Get-Help" to specify the provider path. You can also find custom cmdlet help online in the provider help section of the help articles.


For more information about PowerShell providers, see about_Providers (./About/about_Providers.md).`, `String`),
            new Parameter_js_3.Parameter(`Role`, `Displays help customized for the specified user role. Enter a role. Wildcard characters are permitted.


Enter the role that the user plays in an organization. Some cmdlets display different text in their help files based on the value of this parameter. This parameter has no effect on help for the core cmdlets.`, `String[]`),
            new Parameter_js_3.Parameter(`ShowWindow`, `Displays the help topic in a window for easier reading. The window includes a Find search feature and a Settings box that lets you set options for the display, including options to display only selected sections of a help topic.


The ShowWindow parameter supports help topics for commands (cmdlets, functions, CIM commands, scripts) and conceptual About articles. It does not support provider help.


This parameter was reintroduced in PowerShell 7.0.`, `SwitchParameter`),
        ], `Displays information about PowerShell commands and concepts.`, `Get-Help [[-Name] <String>] [-Category {Alias | Cmdlet | Provider | General | FAQ | Glossary | HelpFile | ScriptCommand | Function | Filter | ExternalScript | All | DefaultHelp | Workflow | DscResource | Class | Configuration}] [-Component <String[]>] -Detailed [-Functionality <String[]>] [-Path <String>] [-Role <String[]>] [<CommonParameters>]

Get-Help [[-Name] <String>] [-Category {Alias | Cmdlet | Provider | General | FAQ | Glossary | HelpFile | ScriptCommand | Function | Filter | ExternalScript | All | DefaultHelp | Workflow | DscResource | Class | Configuration}] [-Component <String[]>] -Examples [-Functionality <String[]>] [-Path <String>] [-Role <String[]>] [<CommonParameters>]

Get-Help [[-Name] <String>] [-Category {Alias | Cmdlet | Provider | General | FAQ | Glossary | HelpFile | ScriptCommand | Function | Filter | ExternalScript | All | DefaultHelp | Workflow | DscResource | Class | Configuration}] [-Component <String[]>] [-Full] [-Functionality <String[]>] [-Path <String>] [-Role <String[]>] [<CommonParameters>]

Get-Help [[-Name] <String>] [-Category {Alias | Cmdlet | Provider | General | FAQ | Glossary | HelpFile | ScriptCommand | Function | Filter | ExternalScript | All | DefaultHelp | Workflow | DscResource | Class | Configuration}] [-Component <String[]>] [-Functionality <String[]>] -Online [-Path <String>] [-Role <String[]>] [<CommonParameters>]

Get-Help [[-Name] <String>] [-Category {Alias | Cmdlet | Provider | General | FAQ | Glossary | HelpFile | ScriptCommand | Function | Filter | ExternalScript | All | DefaultHelp | Workflow | DscResource | Class | Configuration}] [-Component <String[]>] [-Functionality <String[]>] -Parameter <String> [-Path <String>] [-Role <String[]>] [<CommonParameters>]

Get-Help [[-Name] <String>] [-Category {Alias | Cmdlet | Provider | General | FAQ | Glossary | HelpFile | ScriptCommand | Function | Filter | ExternalScript | All | DefaultHelp | Workflow | DscResource | Class | Configuration}] [-Component <String[]>] [-Functionality <String[]>] [-Path <String>] [-Role <String[]>] -ShowWindow [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-History`, [
            new Parameter_js_3.Parameter(`Count`, `Specifies the number of the most recent history entries that this cmdlet gets. By, default, Get-History gets all entries in the session history. If you use both the Count and Id parameters in a command, the display ends with the command that is specified by the Id parameter.


In Windows PowerShell 2.0, by default, Get-History gets the 32 most recent entries.`, `Int32`),
            new Parameter_js_3.Parameter(`Id`, `Specifies an array of the IDs of entries in the session history. Get-History gets only specified entries. If you use both the Id and Count parameters in a command, Get-History gets the most recent entries ending with the entry specified by the Id parameter.`, `Int64[]`),
        ], `Gets a list of the commands entered during the current session.`, `Get-History [[-Id] <Int64[]>] [[-Count] <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Host`, [], `Gets an object that represents the current host program.`, `Get-Host [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-HotFix`, [
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies a remote computer. Type the NetBIOS name, an Internet Protocol (IP) address, or a fully qualified domain name (FQDN) of a remote computer.


When the ComputerName parameter isn't specified, "Get-Hotfix" runs on the local computer.


The ComputerName parameter doesn't rely on Windows PowerShell remoting. If your computer isn't configured to run remote commands, use the ComputerName parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to access the computer and run commands. The default is the current user


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Description`, `"Get-HotFix" uses the Description parameter to specify hotfix types. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Id`, `Filters the "Get-HotFix" results for specific hotfix Ids. Wildcards aren't accepted.`, `String[]`),
        ], `Gets the hotfixes that are installed on local or remote computers.`, `Get-HotFix [-ComputerName <String[]>] [-Credential <PSCredential>] [-Description <String[]>] [<CommonParameters>]

Get-HotFix [[-Id] <String[]>] [-ComputerName <String[]>] [-Credential <PSCredential>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Item`, [
            new Parameter_js_3.Parameter(`Stream`, `Gets the specified alternate NTFS file stream from the file. Enter the stream name. Wildcards are supported. To get all streams, use an asterisk ("*"). This parameter is not valid on folders. Stream is a dynamic parameter that the FileSystem provider adds to the "Get-Item" cmdlet. This parameter works only in file system drives.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet gets items that cannot otherwise be accessed, such as hidden items. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md). Even using the Force parameter, the cmdlet cannot override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to an item. This cmdlet gets the item at the specified location. Wildcard characters are permitted. This parameter is required, but the parameter name Path is optional.


Use a dot (".") to specify the current location. Use the wildcard character ("*") to specify all the items in the current location.`, `String[]`),
        ], `Gets the item at the specified location.`, `Get-Item [-Stream <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [<CommonParameters>]

Get-Item [-Path] <String[]> [-Stream <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the property or properties to retrieve. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the item or items. Wildcard characters are permitted.`, `String[]`),
        ], `Gets the properties of a specified item.`, `Get-ItemProperty [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [<CommonParameters>]

Get-ItemProperty [-Path] <String[]> [[-Name] <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ItemPropertyValue`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the property or properties to retrieve. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the item or items. Wildcard characters are permitted.`, `String[]`),
        ], `Gets the value for one or more properties of a specified item.`, `Get-ItemPropertyValue [-Name] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [<CommonParameters>]

Get-ItemPropertyValue [[-Path] <String[]>] [-Name] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Job`, [
            new Parameter_js_3.Parameter(`After`, `Gets completed jobs that ended after the specified date and time. Enter a DateTime object, such as one returned by the Get-Date cmdlet or a string that can be converted to a DateTime object, such as "Dec 1, 2012 2:00 AM" or "11/06".


This parameter works only on custom job types, such as workflow jobs and scheduled jobs, that have an EndTime property. It does not work on standard background jobs, such as those created by using the Start-Job cmdlet. For information about support for this parameter, see the help topic for the job type.


This parameter was introduced in Windows PowerShell 3.0.`, `DateTime`),
            new Parameter_js_3.Parameter(`Before`, `Gets completed jobs that ended before the specified date and time. Enter a DateTime object.


This parameter works only on custom job types, such as workflow jobs and scheduled jobs, that have an EndTime property. It does not work on standard background jobs, such as those created by using the Start-Job cmdlet. For information about support for this parameter, see the help topic for the job type.


This parameter was introduced in Windows PowerShell 3.0.`, `DateTime`),
            new Parameter_js_3.Parameter(`ChildJobState`, `Gets only the child jobs that have the specified state. The acceptable values for this parameter are:


- NotStarted


-  Running


-  Completed


- Failed


- Stopped


- Blocked


- Suspended


- Disconnected


- Suspending


- Stopping




By default, Get-Job does not get child jobs. By using the IncludeChildJob parameter, Get-Job gets all child jobs. If you use the ChildJobState parameter, the IncludeChildJob parameter has no effect.

This parameter was introduced in Windows PowerShell 3.0.`, `JobState`),
            new Parameter_js_3.Parameter(`Command`, `Specifies an array of commands as strings. This cmdlet gets the jobs that include the specified commands. The default is all jobs. You can use wildcard characters to specify a command pattern.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a hash table of conditions. This cmdlet gets jobs that satisfy all of the conditions. Enter a hash table where the keys are job properties and the values are job property values.


This parameter works only on custom job types, such as workflow jobs and scheduled jobs. It does not work on standard background jobs, such as those created by using the Start-Job cmdlet. For information about support for this parameter, see the help topic for the job type.


This parameter was introduced in Windows PowerShell 3.0.`, `Hashtable`),
            new Parameter_js_3.Parameter(`HasMoreData`, `Indicates whether this cmdlet gets only jobs that have the specified HasMoreData property value. The HasMoreData property indicates whether all job results have been received in the current session. To get jobs that have more results, specify a value of $True. To get jobs that do not have more results, specify a value of $False.


To get the results of a job, use the Receive-Job cmdlet.


When you use the Receive-Job cmdlet, it deletes from its in-memory, session-specific storage the results that it returned. When it has returned all results of the job in the current session, it sets the value of the HasMoreData property of the job to $False) to indicate that it has no more results for the job in the current session. Use the Keep parameter of Receive-Job to prevent Receive-Job from deleting results and changing the value of the HasMoreData property. For more information, type "Get-Help Receive-Job".


The HasMoreData property is specific to the current session. If results for a custom job type are saved outside of the session, such as the scheduled job type, which saves job results on disk, you can use the Receive-Job cmdlet in a different session to get the job results again, even if the value of HasMoreData is $False. For more information, see the help topics for the custom job type.


This parameter was introduced in Windows PowerShell 3.0.`, `Boolean`),
            new Parameter_js_3.Parameter(`Id`, `Specifies an array of IDs of jobs that this cmdlet gets.


The ID is an integer that uniquely identifies the job in the current session. It is easier to remember and to type than the instance ID, but it is unique only in the current session. You can type one or more IDs separated by commas. To find the ID of a job, type "Get-Job" without parameters.`, `Int32[]`),
            new Parameter_js_3.Parameter(`IncludeChildJob`, `Indicates that this cmdlet returns child jobs, in addition to parent jobs.


This parameter is especially useful for investigating workflow jobs, for which Get-Job returns a container parent job, and job failures, because the reason for the failure is saved in a property of the child job.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies an array of instance IDs of jobs that this cmdlet gets. The default is all jobs.


An instance ID is a GUID that uniquely identifies the job on the computer. To find the instance ID of a job, use Get-Job .`, `Guid[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies an array of instance friendly names of jobs that this cmdlet gets. Enter a job name, or use wildcard characters to enter a job name pattern. By default, Get-Job gets all jobs in the current session.`, `String[]`),
            new Parameter_js_3.Parameter(`Newest`, `Specifies a number of jobs to get. This cmdlet gets the jobs that ended most recently.


The Newest parameter does not sort or return the newest jobs in end-time order. To sort the output, use the Sort-Object cmdlet.


This parameter was introduced in Windows PowerShell 3.0.`, `Int32`),
            new Parameter_js_3.Parameter(`State`, `Specifies a job state. This cmdlet gets only jobs in the specified state. The acceptable values for this parameter are:


- NotStarted


- Running


- Completed


- Failed


- Stopped


- Blocked


- Suspended


- Disconnected


- Suspending


- Stopping




By default, Get-Job gets all the jobs in the current session.

For more information about job states, see JobState Enumeration (https://msdn.microsoft.com/library/system.management.automation.jobstate)in the MSDN library.`, `JobState`),
        ], `Gets PowerShell background jobs that are running in the current session.`, `Get-Job [[-Id] <Int32[]>] [-After <DateTime>] [-Before <DateTime>] [-ChildJobState {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint}] [-HasMoreData <Boolean>] [-IncludeChildJob] [-Newest <Int32>] [<CommonParameters>]

Get-Job [-InstanceId] <Guid[]> [-After <DateTime>] [-Before <DateTime>] [-ChildJobState {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint}] [-HasMoreData <Boolean>] [-IncludeChildJob] [-Newest <Int32>] [<CommonParameters>]

Get-Job [-Name] <String[]> [-After <DateTime>] [-Before <DateTime>] [-ChildJobState {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint}] [-HasMoreData <Boolean>] [-IncludeChildJob] [-Newest <Int32>] [<CommonParameters>]

Get-Job [-State] {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint} [-After <DateTime>] [-Before <DateTime>] [-ChildJobState {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint}] [-HasMoreData <Boolean>] [-IncludeChildJob] [-Newest <Int32>] [<CommonParameters>]

Get-Job [-After <DateTime>] [-Before <DateTime>] [-ChildJobState {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint}] [-Command <String[]>] [-HasMoreData <Boolean>] [-IncludeChildJob] [-Newest <Int32>] [<CommonParameters>]

Get-Job [-Filter] <Hashtable> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-JobTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-KdsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-KdsRootKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-LocalGroup`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-LocalGroupMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-LocalUser`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Location`, [
            new Parameter_js_3.Parameter(`PSDrive`, `Specifies the current location in the specified PowerShell drive that this cmdlet gets in the operation.


For instance, if you are in the Certificate: drive, you can use this parameter to find your current location in the C: drive.`, `String[]`),
            new Parameter_js_3.Parameter(`PSProvider`, `Specifies the current location in the drive supported by the PowerShell provider that this cmdlet gets in the operation.


If the specified provider supports more than one drive, this cmdlet returns the location on the most recently accessed drive.


For example, if you are in the C: drive, you can use this parameter to find your current location in the drives of the PowerShellRegistry provider.`, `String[]`),
            new Parameter_js_3.Parameter(`Stack`, `Indicates that this cmdlet displays the locations in the current location stack.


To display the locations in a different location stack, use the StackName parameter. For information about location stacks, see the Notes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`StackName`, `Specifies, as a string array, the named location stacks. Enter one or more location stack names.


To display the locations in the current location stack, use the Stack parameter. To make a location stack the current location stack, use the Set-Location parameter. For information about location stacks, see the Notes.


This cmdlet cannot display the locations in the unnamed default stack unless it is the current stack.`, `String[]`),
        ], `Gets information about the current working location or a location stack.`, `Get-Location [-PSDrive <String[]>] [-PSProvider <String[]>] [<CommonParameters>]

Get-Location [-Stack] [-StackName <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-MarkdownOption`, [], `Returns the current colors and styles used for rendering Markdown content in the console.`, `Get-MarkdownOption [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Member`, [
            new Parameter_js_3.Parameter(`Force`, `Adds the intrinsic members (PSBase, PSAdapted, PSObject, PSTypeNames) and the compiler-generated get_ and set_ methods to the display. By default, Get-Member gets these properties in all views other than Base and Adapted, but it does not display them.


The following list describes the properties that are added when you use the Force parameter:


- PSBase:  The original properties of the .NET Framework object without extension or adaptation. These are the properties defined for the object class and listed in MSDN.


- PSAdapted. The properties and methods defined in the PowerShell extended type system.


- PSExtended. The properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.


- PSObject. The adapter that converts the base object to a PowerShell PSObject object. - PSTypeNames. A list of object types that describe the object, in order of specificity. When formatting the object, PowerShell searches for the types in the Format.ps1xml files in the PowerShell installation directory ($pshome). It uses the formatting definition for the first type that it finds.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object whose members are retrieved.


Using the InputObject parameter is not the same as piping an object to Get-Member . The differences are as follows:


- When you pipe a collection of objects to Get-Member , Get-Member gets the members of the individual objects in the collection, such as the properties of each string in an array of strings. - When you use InputObject to submit a collection of objects, Get-Member gets the members of the collection, such as the properties of the array in an array of strings.`, `PSObject`),
            new Parameter_js_3.Parameter(`MemberType`, `Specifies the member type that this cmdlet gets. The default is All.


The acceptable values for this parameter are:


- AliasProperty


- CodeProperty


- Property


- NoteProperty


- ScriptProperty


- Properties


- PropertySet


- Method


- CodeMethod


- ScriptMethod


- Methods


- ParameterizedProperty


- MemberSet


- Event


- Dynamic


- All




For information about these values, see PSMemberTypes Enumeration (https://msdn.microsoft.com/library/system.management.automation.psmembertypes)in the MSDN library.


Not all objects have every type of member. If you specify a member type that the object does not have, PowerShell returns a null value.

To get related types of members, such as all extended members, use the View parameter. If you use the MemberType parameter with the Static or View parameters, Get-Member gets the members that belong to both sets.`, `PSMemberTypes`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of one or more properties or methods of the object. Get-Member gets only the specified properties and methods.


If you use the Name parameter with the MemberType , View , or Static parameter, Get-Member gets only the members that satisfy the criteria of all parameters.


To get a static member by name, use the Static parameter with the Name parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`Static`, `Indicates that this cmdlet gets only the static properties and methods of the object.


Static properties and methods are defined on the class of objects, not on any particular instance of the class.


If you use the Static parameter with the View parameter, the View parameter is ignored. If you use the Static parameter with the MemberType parameter, Get-Member gets only the members that belong to both sets.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`View`, `Specifies that this cmdlet gets only particular types properties and methods. Specify one or more of the values. The default is Adapted, Extended.


The acceptable values for this parameter are:


- Base.  Gets only the original properties and methods of the .NET Framework object (without extension or adaptation).


- Adapted.  Gets only the properties and methods defined in the PowerShell extended type system.


- Extended. Gets only the properties and methods that were added in the Types.ps1xml files or by using the Add-Member cmdlet.


- All. Gets the members in the Base, Adapted, and Extended views.




The View parameter determines the members retrieved, not just the display of those members.

To get particular member types, such as script properties, use the MemberType parameter. If you use the MemberType and View parameters in the same command, Get-Member gets the members that belong to both sets. If you use the Static and View parameters in the same command, the View parameter is ignored.`, `PSMemberViewTypes`),
        ], `Gets the properties and methods of objects.`, `Get-Member [[-Name] <String[]>] [-Force] [-InputObject <PSObject>] [-MemberType {AliasProperty | CodeProperty | Property | NoteProperty | ScriptProperty | Properties | PropertySet | Method | CodeMethod | ScriptMethod | Methods | ParameterizedProperty | MemberSet | Event | Dynamic | All}] [-Static] [-View {Extended | Adapted | Base | All}] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Module`, [
            new Parameter_js_3.Parameter(`All`, `Indicates that this cmdlet gets all modules in each module folder, including nested modules, manifest (.psd1) files, script module (.psm1) files, and binary module (.dll) files. Without this parameter, "Get-Module" gets only the default module in each module folder.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CimNamespace`, `Specifies the namespace of an alternate CIM provider that exposes CIM modules. The default value is the namespace of the Module Discovery WMI provider.


Use this parameter to get CIM modules from computers and devices that are not running the Windows operating system.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`CimResourceUri`, `Specifies an alternate location for CIM modules. The default value is the resource URI of the Module Discovery WMI provider on the remote computer.


Use this parameter to get CIM modules from computers and devices that are not running the Windows operating system.


This parameter was introduced in Windows PowerShell 3.0.`, `Uri`),
            new Parameter_js_3.Parameter(`CimSession`, `Specifies a CIM session on the remote computer. Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CimSession (https://docs.microsoft.com/powershell/module/cimcmdlets/get-cimsession)command.


"Get-Module" uses the CIM session connection to get modules from the remote computer. When you import the module by using the "Import-Module" cmdlet and use the commands from the imported module in the current session, the commands actually run on the remote computer.


You can use this parameter to get modules from computers and devices that are not running the Windows operating system, and computers that have PowerShell, but do not have PowerShell remoting enabled.


The CimSession parameter gets all modules in the CIMSession . However, you can import only CIM-based and Cmdlet Definition XML (CDXML)-based modules.`, `CimSession`),
            new Parameter_js_3.Parameter(`FullyQualifiedName`, `Specifies names of modules in the form of ModuleSpecification objects. These objects are described in the Remarks section of ModuleSpecification Constructor (Hashtable) (https://msdn.microsoft.com/library/jj136290)in the MSDN library. For example, the FullyQualifiedName parameter accepts a module name that is specified in the following formats:


- @{ModuleName = "modulename"; ModuleVersion = "version_number"}


- @{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"} ModuleName and ModuleVersion are required, but Guid is optional.


You cannot specify the FullyQualifiedName parameter in the same command as a Name parameter.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`ListAvailable`, `Indicates that this cmdlet gets all installed modules. "Get-Module" gets modules in paths listed in the PSModulePath environment variable. Without this parameter, "Get-Module" gets only the modules that are both listed in the PSModulePath environment variable, and that are loaded in the current session. ListAvailable does not return information about modules that are not found in the PSModulePath environment variable, even if those modules are loaded in the current session.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies names or name patterns of modules that this cmdlet gets. Wildcard characters are permitted. You can also pipe the names to "Get-Module". You cannot specify the FullyQualifiedName parameter in the same command as a Name parameter. Name cannot accept a module GUID as a value. To return modules by specifying a GUID, use FullyQualifiedName instead.`, `String[]`),
            new Parameter_js_3.Parameter(`PSSession`, `Gets the modules in the specified user-managed PowerShell session ( PSSession ). Enter a variable that contains the session, a command that gets the session, such as a "Get-PSSession" command, or a command that creates the session, such as a "New-PSSession" command.


When the session is connected to a remote computer, you must specify the ListAvailable parameter.


A "Get-Module" command that uses the PSSession parameter is equivalent to using the "Invoke-Command" cmdlet to run a "Get-Module -ListAvailable" command in a PSSession .


This parameter was introduced in Windows PowerShell 3.0.`, `PSSession`),
            new Parameter_js_3.Parameter(`Refresh`, `Indicates that this cmdlet refreshes the cache of installed commands. The command cache is created when the session starts. It enables the "Get-Command" cmdlet to get commands from modules that are not imported into the session.


This parameter is designed for development and testing scenarios in which the contents of modules have changed since the session started.


When you specify the Refresh parameter in a command, you must specify ListAvailable .


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PSEdition`, `Gets the modules that support specified edition of PowerShell.


The acceptable values for this parameter are:


- Desktop


- Core




The Get-Module cmdlet checks CompatiblePSEditions property of PSModuleInfo object for the specified value and returns only those modules that have it set.

> [!NOTE] > - Desktop Edition: Built on .NET Framework, applies to Windows PowerShell 5.1 and below on > most Windows editions. > - Core Edition: Built on .NET Core, applies to PowerShell Core 6.0 and above, as well as some > editions of Windows PowerShell 5.1 built for Windows IoT and Windows Nanoserver. > > The edition of the current PowerShell session can be found with the "$PSEdition" variable.`, `String`),
            new Parameter_js_3.Parameter(`SkipEditionCheck`, `Skips the check of the "CompatiblePSEditions" field.


By default, Get-Module will omit modules in the "%windir%\\System32\\WindowsPowerShell\\v1.0\\Modules" directory that do not specify "Core" in the "CompatiblePSEditions" field. When this switch is set, modules without "Core" will be included, so that modules under the Windows PowerShell module path that are incompatible with PowerShell Core will be returned.


On macOS and Linux, this parameter does nothing.


See about_PowerShell_Editions (About/about_PowerShell_Editions.md)for more information.`, `SwitchParameter`),
        ], `Gets the modules that have been imported or that can be imported into the current session.`, `Get-Module [[-Name] <String[]>] [-All] [-FullyQualifiedName <ModuleSpecification[]>] [<CommonParameters>]

Get-Module [[-Name] <String[]>] [-All] [-FullyQualifiedName <ModuleSpecification[]>] [-ListAvailable] [-Refresh] [-PSEdition <String>] [-SkipEditionCheck] [<CommonParameters>]

Get-Module [[-Name] <String[]>] [-CimNamespace <String>] [-CimResourceUri <Uri>] -CimSession <CimSession> [-FullyQualifiedName <ModuleSpecification[]>] [-ListAvailable] [-Refresh] [-SkipEditionCheck] [<CommonParameters>]

Get-Module [[-Name] <String[]>] [-FullyQualifiedName <ModuleSpecification[]>] [-ListAvailable] -PSSession <PSSession> [-Refresh] [-PSEdition <String>] [-SkipEditionCheck] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-NonRemovableAppsPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Package`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PackageProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PackageSource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PfxCertificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PfxData`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PmemDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PmemPhysicalDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PmemUnusedRegion`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Process`, [
            new Parameter_js_3.Parameter(`FileVersionInfo`, `Indicates that this cmdlet gets the file version information for the program that runs in the process.


On Windows Vista and later versions of Windows, you must open PowerShell with the Run as administrator option to use this parameter on processes that you do not own.


To get file version information for a process on a remote computer, use the "Invoke-Command" cmdlet.


Using this parameter is equivalent to getting the MainModule.FileVersionInfo property of each process object. When you use this parameter, "Get-Process" returns a FileVersionInfo object System.Diagnostics.FileVersionInfo , not a process object. So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as "Stop-Process".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Id`, `Specifies one or more processes by process ID (PID). To specify multiple IDs, use commas to separate the IDs. To find the PID of a process, type "Get-Process".`, `Int32[]`),
            new Parameter_js_3.Parameter(`IncludeUserName`, `Indicates that the UserName value of the Process object is returned with results of the command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies one or more process objects. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `Process[]`),
            new Parameter_js_3.Parameter(`Module`, `Indicates that this cmdlet gets the modules that have been loaded by the processes.


On Windows Vista and later versions of Windows, you must open PowerShell with the Run as administrator option to use this parameter on processes that you do not own.


To get the modules that have been loaded by a process on a remote computer, use the "Invoke-Command" cmdlet.


This parameter is equivalent to getting the Modules property of each process object. When you use this parameter, this cmdlet returns a ProcessModule object System.Diagnostics.ProcessModule , not a process object. So, you cannot pipe the output of the command to a cmdlet that expects a process object, such as "Stop-Process".


When you use both the Module and FileVersionInfo parameters in the same command, this cmdlet returns a FileVersionInfo object with information about the file version of all modules.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies one or more processes by process name. You can type multiple process names (separated by commas) and use wildcard characters. The parameter name ("Name") is optional.`, `String[]`),
        ], `Gets the processes that are running on the local computer.`, `Get-Process [[-Name] <String[]>] [-FileVersionInfo] [-Module] [<CommonParameters>]

Get-Process [-FileVersionInfo] -Id <Int32[]> [-Module] [<CommonParameters>]

Get-Process [-FileVersionInfo] -InputObject <Process[]> [-Module] [<CommonParameters>]

Get-Process -Id <Int32[]> -IncludeUserName [<CommonParameters>]

Get-Process [[-Name] <String[]>] -IncludeUserName [<CommonParameters>]

Get-Process -IncludeUserName -InputObject <Process[]> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ProcessMitigation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ProvisioningPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSBreakpoint`, [
            new Parameter_js_3.Parameter(`Command`, `Specifies an array of command breakpoints that are set on the specified command names. Enter the command names, such as the name of a cmdlet or function.`, `String[]`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the breakpoint IDs that this cmdlet gets. Enter the IDs in a comma-separated list. You can also pipe breakpoint IDs to Get-PSBreakpoint .`, `Int32[]`),
            new Parameter_js_3.Parameter(`Script`, `Specifies an array of scripts that contain the breakpoints. Enter the path (optional) and names of one or more script files. If you omit the path, the default location is the current directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Type`, `Specifies an array of breakpoint types that this cmdlet gets. Enter one or more types. The acceptable values for this parameter are:


- Line


- Command


- Variable




You can also pipe breakpoint types to Get-PSBreakPoint .`, `BreakpointType[]`),
            new Parameter_js_3.Parameter(`Variable`, `Specifies an array of variable breakpoints that are set on the specified variable names. Enter the variable names without dollar signs.`, `String[]`),
        ], `Gets the breakpoints that are set in the current session.`, `Get-PSBreakpoint -Command <String[]> [-Script <String[]>] [<CommonParameters>]

Get-PSBreakpoint [-Id] <Int32[]> [<CommonParameters>]

Get-PSBreakpoint [-Script <String[]>] [<CommonParameters>]

Get-PSBreakpoint [-Script <String[]>] -Variable <String[]> [<CommonParameters>]

Get-PSBreakpoint [-Type] {Line | Variable | Command} [-Script <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSCallStack`, [], `Displays the current call stack.`, `Get-PSCallStack [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSDrive`, [
            new Parameter_js_3.Parameter(`LiteralName`, `Specifies the name of the drive.


The value of LiteralName is used exactly as it is typed. No characters are interpreted as wildcards. If the name includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies, as a string array, the name or name of drives that this cmdlet gets in the operation. Type the drive name or letter without a colon (:).`, `String[]`),
            new Parameter_js_3.Parameter(`PSProvider`, `Specifies, as a string array, the PowerShell provider. This cmdlet gets only the drives supported by this provider. Type the name of a provider, such as FileSystem, Registry, or Certificate.`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope in which this cmdlet gets the drives.


The acceptable values for this parameter are:


- Global


- Local


- Script


- a number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent).


"Local" is the default. For more information, see about_Scopes (../Microsoft.PowerShell.Core/about/about_Scopes.md).`, `String`),
        ], `Gets drives in the current session.`, `Get-PSDrive [-LiteralName] <String[]> [-PSProvider <String[]>] [-Scope <String>] [<CommonParameters>]

Get-PSDrive [[-Name] <String[]>] [-PSProvider <String[]>] [-Scope <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSHostProcessInfo`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies a process by the process ID. To get a process ID, run the "Get-Process" cmdlet.`, `Int32[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a process by the process name. To get a process name, run the "Get-Process" cmdlet.`, `String[]`),
            new Parameter_js_3.Parameter(`Process`, `Specifies a process by the process object. The simplest way to use this parameter is to save the results of a "Get-Process" command that returns process that you want to enter in a variable, and then specify the variable as the value of this parameter.`, `Process[]`),
        ], `Gets process information about the PowerShell host.`, `Get-PSHostProcessInfo [-Id] <Int32[]> [<CommonParameters>]

Get-PSHostProcessInfo [[-Name] <String[]>] [<CommonParameters>]

Get-PSHostProcessInfo [-Process] <Process[]> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSProvider`, [
            new Parameter_js_3.Parameter(`PSProvider`, `Specifies the name or names of the PowerShell providers about which this cmdlet gets information.`, `String[]`),
        ], `Gets information about the specified PowerShell provider.`, `Get-PSProvider [[-PSProvider] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSReadLineKeyHandler`, [
            new Parameter_js_3.Parameter(`Bound`, `Include functions that are bound.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Unbound`, `Include functions that are unbound.`, `SwitchParameter`),
        ], `Gets the key bindings for the PSReadLine module.`, `Get-PSReadLineKeyHandler [-Bound] [-Unbound] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSReadLineOption`, [], `Returns the values for the options that can be configured.`, `Get-PSReadLineOption [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSSession`, [
            new Parameter_js_3.Parameter(`AllowRedirection`, `Indicates that this cmdlet allows redirection of this connection to an alternate Uniform Resource Identifier (URI). By default, PowerShell does not redirect connections.


This parameter configures the temporary connection that is created to run a Get-PSSession command with the ConnectionUri parameter.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ApplicationName`, `Specifies the name of an application. This cmdlet connects only to sessions that use the specified application.


Enter the application name segment of the connection URI. For example, in the following connection URI, the application name is WSMan: "http://localhost:5985/WSMAN". The application name of a session is stored in the Runspace.ConnectionInfo.AppName property of the session.


The value of this parameter is used to select and filter sessions. It does not change the application that the session uses.`, `String`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the mechanism that is used to authenticate credentials for the session in which the Get-PSSession command runs.


This parameter configures the temporary connection that is created to run a Get-PSSession command with the ComputerName or ConnectionUri parameter.


The acceptable values for this parameter are:


- Default


- Basic


- Credssp


- Digest


- Kerberos


- Negotiate


- NegotiateWithImplicitCredential.




The default value is Default.


For more information about the values of this parameter, see AuthenticationMechanism Enumeration (https://msdn.microsoft.com/library/system.management.automation.runspaces.authenticationmechanism)in the MSDN library.


CAUTION: Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are passed to a remote computer to be authenticated, is designed for commands that require authentication on more than one resource, such as accessing a remote network share. This mechanism increases the security risk of the remote operation. If the remote computer is compromised, the credentials that are passed to it can be used to control the network session.

This parameter was introduced in Windows PowerShell 3.0.`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to create the session in which the Get-PSSession command runs. Enter the certificate thumbprint of the certificate.


This parameter configures the temporary connection that is created to run a Get-PSSession command with the ComputerName or ConnectionUri parameter.


Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.


To get a certificate thumbprint, use a Get-Item or Get-ChildItem command in the PowerShell Cert: drive.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies an array of names of computers. Gets the sessions that connect to the specified computers. Wildcard characters are not permitted. There is no default value.


Beginning in Windows PowerShell 3.0, PSSession objects are stored on the computers at the remote end of each connection. To get the sessions on the specified computers, PowerShell creates a temporary connection to each computer and runs a Get-PSSession command.


Type the NetBIOS name, an IP address, or a fully-qualified domain name of one or more computers. To specify the local computer, type the computer name, localhost, or a dot (.).


Note: This parameter gets sessions only from computers that run Windows PowerShell 3.0 or later versions of PowerShell. Earlier versions do not store sessions.`, `String[]`),
            new Parameter_js_3.Parameter(`ConfigurationName`, `Specifies the name of a configuration. This cmdlet gets only to sessions that use the specified session configuration.


Enter a configuration name or the fully qualified resource URI for a session configuration. If you specify only the configuration name, the following schema URI is prepended: https://schemas.microsoft.com/powershell. The configuration name of a session is stored in the ConfigurationName property of the session.


The value of this parameter is used to select and filter sessions. It does not change the session configuration that the session uses.


For more information about session configurations, see about_Session_Configurations (About/about_Session_Configurations.md).`, `String`),
            new Parameter_js_3.Parameter(`ConnectionUri`, `Specifies a URI that defines the connection endpoint for the temporary session in which the Get-PSSession command runs. The URI must be fully qualified.


This parameter configures the temporary connection that is created to run a Get-PSSession command with the ConnectionUri parameter.


The format of this string is:


<Transport>://<ComputerName>:<Port>/<ApplicationName>


The default value is: http://localhost:5985/WSMAN.


If you do not specify a ConnectionUri , you can use the UseSSL , ComputerName , Port , and ApplicationName parameters to specify the ConnectionURI values. Valid values for the Transport segment of the URI are HTTP and HTTPS. If you specify a connection URI with a Transport segment, but do not specify a port, the session is created with standards ports: 80 for HTTP and 443 for HTTPS. To use the default ports for PowerShell remoting, specify port 5985 for HTTP or 5986 for HTTPS.


If the destination computer redirects the connection to a different URI, PowerShell prevents the redirection unless you use the AllowRedirection parameter in the command.


This parameter was introduced in Windows PowerShell 3.0.


This parameter gets sessions only from computers that run Windows PowerShell 3.0 or later versions of Windows PowerShell or PowerShell Core. Earlier versions do not store sessions.`, `Uri[]`),
            new Parameter_js_3.Parameter(`ContainerId`, `Specifies an array of IDs of containers. This cmdlet starts an interactive session with each of the specified containers. Use the "docker ps" command to get a list of container IDs. For more information, see the help for the docker ps (https://docs.docker.com/engine/reference/commandline/ps/)command.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user credential. This cmdlet runs the command with the permissions of the specified user. Specify a user account that has permission to connect to the remote computer and run a "Get-PSSession" command. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).


This parameter configures to the temporary connection that is created to run a "Get-PSSession" command with the ComputerName or ConnectionUri parameter.


This parameter was introduced in Windows PowerShell 3.0.`, `PSCredential`),
            new Parameter_js_3.Parameter(`Id`, `Specifies an array of session IDs. This cmdlet gets only the sessions with the specified IDs. Type one or more IDs, separated by commas, or use the range operator (..) to specify a range of IDs. You cannot use the ID parameter together with the ComputerName parameter.


An ID is an integer that uniquely identifies the user-managed sessions in the current session. It is easier to remember and type than the InstanceId , but it is unique only within the current session. The ID of a session is stored in the ID property of the session.`, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies an array of instance IDs of sessions. This cmdlet gets only the sessions with the specified instance IDs.


The instance ID is a GUID that uniquely identifies a session on a local or remote computer. The InstanceID is unique, even when you have multiple sessions running in PowerShell.


The instance ID of a session is stored in the InstanceID property of the session.`, `Guid[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies an array of session names. This cmdlet gets only the sessions that have the specified friendly names. Wildcard characters are permitted.


The friendly name of a session is stored in the Name property of the session.`, `String[]`),
            new Parameter_js_3.Parameter(`Port`, `Specifies the specified network port that is used for the temporary connection in which the Get-PSSession command runs. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985, which is the WinRM port for HTTP, and 5986, which is the WinRM port for HTTPS.


Before using an alternate port, you must configure the WinRM listener on the remote computer to listen at that port. To configure the listener, type the following two commands at the PowerShell prompt:


"Remove-Item -Path WSMan:\\Localhost\\listener\\listener* -Recurse"


"New-Item -Path WSMan:\\Localhost\\listener -Transport http -Address * -Port <port-number>"


This parameter configures to the temporary connection that is created to run a Get-PSSession command with the ComputerName or ConnectionUri parameter.


Do not use the Port parameter unless you must. The Port set in the command applies to all computers or sessions on which the command runs. An alternate port setting might prevent the command from running on all computers.


This parameter was introduced in Windows PowerShell 3.0.`, `Int32`),
            new Parameter_js_3.Parameter(`SessionOption`, `Specifies advanced options for the session. Enter a SessionOption object, such as one that you create by using the New-PSSessionOption cmdlet, or a hash table in which the keys are session option names and the values are session option values.


The default values for the options are determined by the value of the $PSSessionOption preference variable, if it is set. Otherwise, the default values are established by options set in the session configuration.


The session option values take precedence over default values for sessions set in the $PSSessionOption preference variable and in the session configuration. However, they do not take precedence over maximum values, quotas or limits set in the session configuration.


For a description of the session options, including the default values, see "New-PSSessionOption". For information about the "$PSSessionOption" preference variable, see about_Preference_Variables (About/about_Preference_Variables.md). For more information about session configurations, see about_Session_Configurations (About/about_Session_Configurations.md).`, `PSSessionOption`),
            new Parameter_js_3.Parameter(`State`, `Specifies a session state. This cmdlet gets only sessions in the specified state. The acceptable values for this parameter are: All, Opened, Disconnected, Closed, and Broken. The default value is All.


The session state value is relative to the current sessions. Sessions that were not created in the current sessions and are not connected to the current session have a state of Disconnected even when they are connected to a different session.


The state of a session is stored in the State property of the session.


This parameter was introduced in Windows PowerShell 3.0.`, `SessionFilterState`),
            new Parameter_js_3.Parameter(`ThrottleLimit`, `Specifies the maximum number of concurrent connections that can be established to run the Get-PSSession command. If you omit this parameter or enter a value of 0 (zero), the default value, 32, is used. The throttle limit applies only to the current command, not to the session or to the computer.


This parameter was introduced in Windows PowerShell 3.0.`, `Int32`),
            new Parameter_js_3.Parameter(`UseSSL`, `Indicates that this cmdlet uses the Secure Sockets Layer (SSL) protocol to establish the connection in which the Get-PSSession command runs. By default, SSL is not used. If you use this parameter, but SSL is not available on the port used for the command, the command fails.


This parameter configures the temporary connection that is created to run a Get-PSSession command with the ComputerName parameter.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`VMId`, `Specifies an array of ID of virtual machines. This cmdlet starts an interactive session with each of the specified virtual machines. To see the virtual machines that are available to you, use the following command:


"Get-VM | Select-Object -Property Name, ID"`, `Guid[]`),
            new Parameter_js_3.Parameter(`VMName`, `Specifies an array of names of virtual machines. This cmdlet starts an interactive session with each of the specified virtual machines. To see the virtual machines that are available to you, use the Get-VM cmdlet.`, `String[]`),
        ], `Gets the PowerShell sessions on local and remote computers.`, `Get-PSSession [-ConnectionUri] <Uri[]> [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-Name <String[]>] [-SessionOption <PSSessionOption>] [-State {All | Opened | Disconnected | Closed | Broken}] [-ThrottleLimit <Int32>] [<CommonParameters>]

Get-PSSession [-ConnectionUri] <Uri[]> [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-InstanceId <Guid[]>] [-SessionOption <PSSessionOption>] [-State {All | Opened | Disconnected | Closed | Broken}] [-ThrottleLimit <Int32>] [<CommonParameters>]

Get-PSSession [-ComputerName] <String[]> [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-Name <String[]>] [-Port <Int32>] [-SessionOption <PSSessionOption>] [-State {All | Opened | Disconnected | Closed | Broken}] [-ThrottleLimit <Int32>] [-UseSSL] [<CommonParameters>]

Get-PSSession [-ComputerName] <String[]> [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-InstanceId <Guid[]>] [-Port <Int32>] [-SessionOption <PSSessionOption>] [-State {All | Opened | Disconnected | Closed | Broken}] [-ThrottleLimit <Int32>] [-UseSSL] [<CommonParameters>]

Get-PSSession [-ConfigurationName <String>] [-InstanceId <Guid[]>] [-State {All | Opened | Disconnected | Closed | Broken}] -VMName <String[]> [<CommonParameters>]

Get-PSSession [-ConfigurationName <String>] -ContainerId <String[]> [-Name <String[]>] [-State {All | Opened | Disconnected | Closed | Broken}] [<CommonParameters>]

Get-PSSession [-ConfigurationName <String>] -ContainerId <String[]> [-InstanceId <Guid[]>] [-State {All | Opened | Disconnected | Closed | Broken}] [<CommonParameters>]

Get-PSSession [-ConfigurationName <String>] [-Name <String[]>] [-State {All | Opened | Disconnected | Closed | Broken}] -VMId <Guid[]> [<CommonParameters>]

Get-PSSession [-ConfigurationName <String>] [-InstanceId <Guid[]>] [-State {All | Opened | Disconnected | Closed | Broken}] -VMId <Guid[]> [<CommonParameters>]

Get-PSSession [-ConfigurationName <String>] [-Name <String[]>] [-State {All | Opened | Disconnected | Closed | Broken}] -VMName <String[]> [<CommonParameters>]

Get-PSSession [-Id] <Int32[]> [<CommonParameters>]

Get-PSSession [-InstanceId <Guid[]>] [<CommonParameters>]

Get-PSSession [-Name <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSSessionCapability`, [
            new Parameter_js_3.Parameter(`ConfigurationName`, `Specifies the constrained session configuration (endpoint) that you are inspecting.`, `String`),
            new Parameter_js_3.Parameter(`Full`, `Indicates that this cmdlet returns the entire initial session state for the specified user at the specified constrained endpoint.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Username`, `Specifies the user whose capabilities you are inspecting.`, `String`),
        ], `Gets the capabilities of a specific user on a constrained session configuration.`, `Get-PSSessionCapability [-ConfigurationName] <String> [-Username] <String> [-Full] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-PSSessionConfiguration`, [
            new Parameter_js_3.Parameter(`Force`, `Suppresses the prompt to restart the WinRM service, if the service is not already running.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Gets only the session configurations with the specified name or name pattern. Enter one or more session configuration names. Wildcards are permitted.`, `String[]`),
        ], `Gets the registered session configurations on the computer.`, `Get-PSSessionConfiguration [[-Name] <String[]>] [-Force] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Random`, [
            new Parameter_js_3.Parameter(`Count`, `Specifies the number of random objects or numbers to return. The default is 1.


When used with "InputObject", if the value of Count exceeds the number of objects in the collection, "Get-Random" returns all of the objects in random order.`, `Int32`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies a collection of objects. "Get-Random" gets randomly selected objects in random order from the collection up to the number specified by Count . Enter the objects, a variable that contains the objects, or a command or expression that gets the objects. You can also pipe a collection of objects to "Get-Random".


Beginning in PowerShell 7, the InputObject parameter accepts arrays that can contain an empty string or "$null". The array can be sent down the pipeline or as an InputObject parameter value.`, `Object[]`),
            new Parameter_js_3.Parameter(`Maximum`, `Specifies a maximum value for the random number. "Get-Random" returns a value that is less than the maximum (not equal). Enter an integer, a double-precision floating-point number, or an object that can be converted to an integer or double, such as a numeric string ("100").


The value of Maximum must be greater than (not equal to) the value of Minimum . If the value of Maximum or Minimum is a floating-point number, "Get-Random" returns a randomly selected floating-point number.


On a 64-bit computer, if the value of Minimum is a 32-bit integer, the default value of Maximum is Int32.MaxValue .


If the value of Minimum is a double (a floating-point number), the default value of Maximum is Double.MaxValue . Otherwise, the default value is Int32.MaxValue .`, `Object`),
            new Parameter_js_3.Parameter(`Minimum`, `Specifies a minimum value for the random number. Enter an integer, a double-precision floating-point number, or an object that can be converted to an integer or double, such as a numeric string ("100"). The default value is 0 (zero).


The value of Minimum must be less than (not equal to) the value of Maximum . If the value of Maximum or Minimum is a floating-point number, "Get-Random" returns a randomly selected floating-point number.`, `Object`),
            new Parameter_js_3.Parameter(`SetSeed`, `Specifies a seed value for the random number generator. This seed value is used for the current command and for all subsequent "Get-Random" commands in the current session until you use SetSeed again or close the session. You can't reset the seed to its default value.


The SetSeed parameter is not required. By default, "Get-Random" uses the RandomNumberGenerator() (/dotnet/api/system.security.cryptography.randomnumbergenerator)method to generate a seed value. Because SetSeed results in non-random behavior, it's typically used only when trying to reproduce behavior, such as when debugging or analyzing a script that includes "Get-Random" commands.`, `Int32`),
        ], `Gets a random number, or selects objects randomly from a collection.`, `Get-Random [-InputObject] <Object[]> [-Count <Int32>] [-SetSeed <Int32>] [<CommonParameters>]

Get-Random [[-Maximum] <Object>] [-Minimum <Object>] [-SetSeed <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Runspace`, [
            new Parameter_js_3.Parameter(`Id`, ``, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, ``, `Guid[]`),
            new Parameter_js_3.Parameter(`Name`, ``, `String[]`),
        ], `Gets active runspaces within a PowerShellhost process.`, `Get-Runspace [-Id] <Int32[]> [<CommonParameters>]

Get-Runspace [-InstanceId] <Guid[]> [<CommonParameters>]

Get-Runspace [[-Name] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-RunspaceDebug`, [
            new Parameter_js_3.Parameter(`AppDomainName`, ``, `String[]`),
            new Parameter_js_3.Parameter(`ProcessName`, ``, `String`),
            new Parameter_js_3.Parameter(`Runspace`, ``, `Runspace[]`),
            new Parameter_js_3.Parameter(`RunspaceId`, ``, `Int32[]`),
            new Parameter_js_3.Parameter(`RunspaceInstanceId`, ``, `Guid[]`),
            new Parameter_js_3.Parameter(`RunspaceName`, ``, `String[]`),
        ], `Shows runspace debugging options.`, `Get-RunspaceDebug [[-ProcessName] <String>] [[-AppDomainName] <String[]>] [<CommonParameters>]

Get-RunspaceDebug [-Runspace] <Runspace[]> [<CommonParameters>]

Get-RunspaceDebug [-RunspaceId] <Int32[]> [<CommonParameters>]

Get-RunspaceDebug [-RunspaceInstanceId] <Guid[]> [<CommonParameters>]

Get-RunspaceDebug [[-RunspaceName] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ScheduledJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-ScheduledJobOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SecureBootPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SecureBootUEFI`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Service`, [
            new Parameter_js_3.Parameter(`DependentServices`, `Indicates that this cmdlet gets only the services that depend upon the specified service.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies, as a string array, the display names of services to be retrieved. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, a service or services that this cmdlet excludes from the operation. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, a service or services that this cmdlet includes in the operation. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies ServiceController objects representing the services to be retrieved. Enter a variable that contains the objects, or type a command or expression that gets the objects. You can pipe a service object to this cmdlet.`, `ServiceController[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service names of services to be retrieved. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`RequiredServices`, `Indicates that this cmdlet gets only the services that this service requires. This parameter gets the value of the ServicesDependedOn property of the service.`, `SwitchParameter`),
        ], `Gets the services on the computer.`, `Get-Service [-DependentServices] -DisplayName <String[]> [-Exclude <String[]>] [-Include <String[]>] [-RequiredServices] [<CommonParameters>]

Get-Service [-DependentServices] [-Exclude <String[]>] [-Include <String[]>] [-InputObject <ServiceController[]>] [-RequiredServices] [<CommonParameters>]

Get-Service [[-Name] <String[]>] [-DependentServices] [-Exclude <String[]>] [-Include <String[]>] [-RequiredServices] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-SystemDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TimeZone`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies, as a string array, the ID or IDs of the time zones that this cmdlet gets.`, `String[]`),
            new Parameter_js_3.Parameter(`ListAvailable`, `Indicates that this cmdlet gets all available time zones.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies, as a string array, the name or names of the time zones that this cmdlet gets.`, `String[]`),
        ], `Gets the current time zone or a list of available time zones.`, `Get-TimeZone -Id <String[]> [<CommonParameters>]

Get-TimeZone -ListAvailable [<CommonParameters>]

Get-TimeZone [[-Name] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TlsCipherSuite`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TlsEccCurve`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Tpm`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TpmEndorsementKeyInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TpmSupportedFeature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TraceSource`, [
            new Parameter_js_3.Parameter(`Name`, `Specifies the trace sources to get. Wildcards are permitted. The parameter name Name is optional.`, `String[]`),
        ], `Gets PowerShell components that are instrumented for tracing.`, `Get-TraceSource [[-Name] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TroubleshootingPack`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TrustedProvisioningCertificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-TypeData`, [
            new Parameter_js_3.Parameter(`TypeName`, `Specifies type data as an array only for the types with the specified names. By default, Get-TypeData gets all types in the session.


Enter type names or a name patterns. Full names, or name patterns with wildcard characters are required, even for types in the System namespace. Wildcards are supported and the parameter name TypeName is optional. You can also pipe type names to Get-TypeData .`, `String[]`),
        ], `Gets the extended type data in the current session.`, `Get-TypeData [[-TypeName] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-UICulture`, [], `Gets the current UI culture settings in the operating system.`, `Get-UICulture [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Unique`, [
            new Parameter_js_3.Parameter(`AsString`, `Indicates that this cmdlet uses the data as a string. Without this parameter, data is treated as an object, so when you submit a collection of objects of the same type to "Get-Unique", such as a collection of files, it returns just one (the first). You can use this parameter to find the unique values of object properties, such as the file names.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies input for "Get-Unique". Enter a variable that contains the objects or type a command or expression that gets the objects.


This cmdlet treats the input submitted by using InputObject as a collection. it does not enumerate individual items in the collection. Because the collection is a single item, input submitted by using InputObject is always returned unchanged.`, `PSObject`),
            new Parameter_js_3.Parameter(`OnType`, `Indicates that this cmdlet returns only one object of each type.`, `SwitchParameter`),
        ], `Returns unique items from a sorted list.`, `Get-Unique [-AsString] [-InputObject <PSObject>] [<CommonParameters>]

Get-Unique [-InputObject <PSObject>] [-OnType] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Uptime`, [
            new Parameter_js_3.Parameter(`Since`, `Cause the cmdlet to return a DateTime object representing the last time that the operating system was booted.`, `SwitchParameter`),
        ], `Get the TimeSpan since last boot.`, `Get-Uptime [-Since] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Variable`, [
            new Parameter_js_3.Parameter(`Exclude`, `Specifies an array of items that this cmdlet excludes from the operation. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Include`, `Specifies an array of items upon which the cmdlet will act, excluding all others. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the variable. Wildcards are permitted. You can also pipe a variable name to "Get-Variable".`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the variables in the scope.The acceptable values for this parameter are:


- Global - Local - Script - A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent) Local is the default. For more information, see about_Scopes (../Microsoft.PowerShell.Core/About/about_Scopes.md).`, `String`),
            new Parameter_js_3.Parameter(`ValueOnly`, `Indicates that this cmdlet gets only the value of the variable.`, `SwitchParameter`),
        ], `Gets the variables in the current console.`, `Get-Variable [[-Name] <String[]>] [-Exclude <String[]>] [-Include <String[]>] [-Scope <String>] [-ValueOnly] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-Verb`, [
            new Parameter_js_3.Parameter(`Verb`, `Gets only the specified verbs. Enter the name of a verb or a name pattern. Wildcards are allowed.`, `String[]`),
            new Parameter_js_3.Parameter(`Group`, `Gets only the specified groups. Enter the name of a group. Wildcards are not allowed.


This parameter was introduced in PowerShell 6.0.`, `String[]`),
        ], `Gets approved PowerShell verbs.`, `Get-Verb [[-Group] <String[]>] [[-Verb] {Common | Communications | Data | Diagnostic | Lifecycle | Other | Security}] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WheaMemoryPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WIMBootEntry`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinAcceptLanguageFromLanguageListOptOut`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinCultureFromLanguageListOptOut`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinDefaultInputMethodOverride`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsCapability`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsDeveloperLicense`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsEdition`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsErrorReporting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsImageContent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsOptionalFeature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WindowsSearchSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinEvent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinHomeLocation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinLanguageBarOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinSystemLocale`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinUILanguageOverride`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WinUserLanguageList`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WSManCredSSP`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Get-WSManInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Group-Object`, [
            new Parameter_js_3.Parameter(`AsHashTable`, `Indicates that this cmdlet returns the group as a hash table. The keys of the hash table are the property values by which the objects are grouped. The values of the hash table are the objects that have that property value.


By itself, the AsHashTable parameter returns each hash table in which each key is an instance of the grouped object. When used with the AsString parameter, the keys in the hash table are strings.


Beginning in PowerShell 7, to create case-sensitive hash tables, include CaseSensitive and AsHashtable in your command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`AsString`, `Indicates that this cmdlet converts the hash table keys to strings. By default, the hash table keys are instances of the grouped object. This parameter is valid only when used with the AsHashTable parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CaseSensitive`, `Indicates that this cmdlet makes the grouping case-sensitive. Without this parameter, the property values of objects in a group might have different cases.


Beginning in PowerShell 7, to create case-sensitive hash tables, include CaseSensitive and AsHashtable in your command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Culture`, `Specifies the culture to use when comparing strings.`, `String`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to group. Enter a variable that contains the objects, or type a command or expression that gets the objects.


When you use the InputObject parameter to submit a collection of objects to "Group-Object", "Group-Object" receives one object that represents the collection. As a result, it creates a single group with that object as its member.


To group the objects in a collection, pipe the objects to "Group-Object".`, `PSObject`),
            new Parameter_js_3.Parameter(`NoElement`, `Indicates that this cmdlet omits the members of a group from the results.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the properties for grouping. The objects are arranged into groups based on the value of the specified property.


The value of the Property parameter can be a new calculated property. To create a calculated, property, create a hash table with an Expression key that specifies a string or script block value.`, `Object[]`),
        ], `Groups objects that contain the same value for specified properties.`, `Group-Object [[-Property] <Object[]>] [-AsHashTable] [-AsString] [-CaseSensitive] [-Culture <String>] [-InputObject <PSObject>] [-NoElement] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-Alias`, [
            new Parameter_js_3.Parameter(`Force`, `Allows the cmdlet to import an alias that is already defined or is read only. You can use the following command to display information about the currently-defined aliases:


"Get-Alias | Select-Object Name, Options"


If the corresponding alias is read-only, it will be displayed in the value of the Options property.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to a file that includes exported alias information. Unlike the Path parameter, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to a file that includes exported alias information. Wildcards are allowed but they must resolve to a single name.`, `String`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope into which the aliases are imported. The acceptable values for this parameter are:


- Global


- Local


- Script


- A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent)




The default is Local. For more information, see about_Scopes.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Imports an alias list from a file.`, `Import-Alias [-Force] -LiteralPath <String> [-PassThru] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]

Import-Alias [-Path] <String> [-Force] [-PassThru] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-BinaryMiLog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-Certificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-Clixml`, [
            new Parameter_js_3.Parameter(`First`, `Gets only the specified number of objects. Enter the number of objects to get.`, `UInt64`),
            new Parameter_js_3.Parameter(`IncludeTotalCount`, `Reports the total number of objects in the data set followed by the selected objects. If the cmdlet can't determine the total count, it displays Unknown total count . The integer has an Accuracy property that indicates the reliability of the total count value. The value of Accuracy ranges from "0.0" to "1.0" where "0.0" means that the cmdlet couldn't count the objects, "1.0" means that the count is exact, and a value between "0.0" and "1.0" indicates an increasingly reliable estimate.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the XML files. Unlike Path , the value of the LiteralPath parameter is used exactly as it's typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the XML files.`, `String[]`),
            new Parameter_js_3.Parameter(`Skip`, `Ignores the specified number of objects and then gets the remaining objects. Enter the number of objects to skip.`, `UInt64`),
        ], `Imports a CLIXML file and creates corresponding objects in PowerShell.`, `Import-Clixml [-First <UInt64>] [-IncludeTotalCount] -LiteralPath <String[]> [-Skip <UInt64>] [<CommonParameters>]

Import-Clixml [-Path] <String[]> [-First <UInt64>] [-IncludeTotalCount] [-Skip <UInt64>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-Counter`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-Csv`, [
            new Parameter_js_3.Parameter(`Delimiter`, `Specifies the delimiter that separates the property values in the CSV file. The default is a comma (,).


Enter a character, such as a colon (:). To specify a semicolon (;) enclose it in single quotation marks.


If you specify a character other than the actual string delimiter in the file, "Import-Csv" cannot create the objects from the CSV strings and will return the CSV strings.`, `Char`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the encoding for the imported CSV file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Header`, `Specifies an alternate column header row for the imported file. The column header determines the property names of the objects created by "Import-Csv".


Enter column headers as a comma-separated list. Do not enclose the header string in quotation marks. Enclose each column header in single quotation marks.


If you enter fewer column headers than there are data columns, the remaining data columns are discarded. If you enter more column headers than there are data columns, the additional column headers are created with empty data columns.


When using the Header parameter, delete the original header row from the CSV file. Otherwise, "Import-Csv" creates an extra object from the items in the header row.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the CSV file to import. Unlike Path , the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the CSV file to import. You can also pipe a path to "Import-Csv".`, `String[]`),
            new Parameter_js_3.Parameter(`UseCulture`, `Uses the list separator for the current culture as the item delimiter. To find the list separator for a culture, use the following command: "(Get-Culture).TextInfo.ListSeparator".`, `SwitchParameter`),
        ], `Creates table-like custom objects from the items in a comma-separated value (CSV) file.`, `Import-Csv [-Path] <String[]> [[-Delimiter] <Char>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Header <String[]>] [<CommonParameters>]

Import-Csv [[-Delimiter] <Char>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Header <String[]>] -LiteralPath <String[]> [<CommonParameters>]

Import-Csv [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Header <String[]>] -LiteralPath <String[]> -UseCulture [<CommonParameters>]

Import-Csv [-Path] <String[]> [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Header <String[]>] -UseCulture [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-LocalizedData`, [
            new Parameter_js_3.Parameter(`BaseDirectory`, `Specifies the base directory where the .psd1 files are located. The default is the directory where the script is located. Import-LocalizedData searches for the .psd1 file for the script in a language-specific subdirectory of the base directory.`, `String`),
            new Parameter_js_3.Parameter(`BindingVariable`, `Specifies the variable into which the text strings are imported. Enter a variable name without a dollar sign ($).


In Windows PowerShell 2.0, this parameter is required. In Windows PowerShell 3.0, this parameter is optional. If you omit this parameter, Import-LocalizedData returns a hash table of the text strings. The hash table is passed down the pipeline or displayed at the command line.


When using Import-LocalizedData to replace default text strings specified in the DATA section of a script, assign the DATA section to a variable and enter the name of the DATA section variable in the value of the BindingVariable parameter. Then, when Import-LocalizedData saves the imported content in the BindingVariable , the imported data will replace the default text strings. If you are not specifying default text strings, you can select any variable name.`, `String`),
            new Parameter_js_3.Parameter(`FileName`, `Specifies the name of the data file (.psd1) to be imported. Enter a file name. You can specify a file name that does not include its .psd1 file name extension, or you can specify the file name including the .psd1 file name extension.


The FileName parameter is required when Import-LocalizedData is not used in a script. Otherwise, the parameter is optional and the default value is the base name of the script. You can use this parameter to direct Import-LocalizedData to search for a different .psd1 file.


For example, if the FileName is omitted and the script name is FindFiles.ps1, Import-LocalizedData searches for the FindFiles.psd1 data file.`, `String`),
            new Parameter_js_3.Parameter(`SupportedCommand`, `Specifies cmdlets and functions that generate only data.


Use this parameter to include cmdlets and functions that you have written or tested. For more information, see about_Script_Internationalization.`, `String[]`),
            new Parameter_js_3.Parameter(`UICulture`, `Specifies an alternate UI culture. The default is the value of the $PsUICulture automatic variable. Enter a UI culture in <language>-<region> format, such as en-US, de-DE, or ar-SA.


The value of the UICulture parameter determines the language-specific subdirectory (within the base directory) from which Import-LocalizedData gets the .psd1 file for the script.


The cmdlet searches for a subdirectory with the same name as the value of the UICulture parameter or the $PsUICulture automatic variable, such as de-DE or ar-SA. If it cannot find the directory, or the directory does not contain a .psd1 file for the script, it searches for a subdirectory with the name of the language code, such as de or ar. If it cannot find the subdirectory or .psd1 file, the command fails and the data is displayed in the default language specified in the script.`, `String`),
        ], `Imports language-specific data into scripts and functions based on the UI culture that is selected for the operating system.`, `Import-LocalizedData [[-BindingVariable] <String>] [[-UICulture] <String>] [-BaseDirectory <String>] [-FileName <String>] [-SupportedCommand <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-Module`, [
            new Parameter_js_3.Parameter(`Alias`, `Specifies the aliases that this cmdlet imports from the module into the current session. Enter a comma-separated list of aliases. Wildcard characters are permitted.


Some modules automatically export selected aliases into your session when you import the module. This parameter lets you select from among the exported aliases.`, `String[]`),
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies an array of arguments, or parameter values, that are passed to a script module during the "Import-Module" command. This parameter is valid only when you're importing a script module.


You can also refer to the ArgumentList parameter by its alias, args . For more information, see about_Aliases (About/about_Aliases.md).`, `Object[]`),
            new Parameter_js_3.Parameter(`AsCustomObject`, `Indicates that this cmdlet returns a custom object with members that represent the imported module members. This parameter is valid only for script modules.


When you use the AsCustomObject parameter, "Import-Module" imports the module members into the session and then returns a PSCustomObject object instead of a PSModuleInfo object. You can save the custom object in a variable and use dot notation to invoke the members.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Assembly`, `Specifies an array of assembly objects. This cmdlet imports the cmdlets and providers implemented in the specified assembly objects. Enter a variable that contains assembly objects or a command that creates assembly objects. You can also pipe an assembly object to "Import-Module".


When you use this parameter, only the cmdlets and providers implemented by the specified assemblies are imported. If the module contains other files, they aren't imported, and you might be missing important members of the module. Use this parameter for debugging and testing the module, or when you're instructed to use it by the module author.`, `Assembly[]`),
            new Parameter_js_3.Parameter(`CimNamespace`, `Specifies the namespace of an alternate CIM provider that exposes CIM modules. The default value is the namespace of the Module Discovery WMI provider.


Use this parameter to import CIM modules from computers and devices that aren't running a Windows operating system.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`CimResourceUri`, `Specifies an alternate location for CIM modules. The default value is the resource URI of the Module Discovery WMI provider on the remote computer.


Use this parameter to import CIM modules from computers and devices that aren't running a Windows operating system.


This parameter was introduced in Windows PowerShell 3.0.`, `Uri`),
            new Parameter_js_3.Parameter(`CimSession`, `Specifies a CIM session on the remote computer. Enter a variable that contains the CIM session or a command that gets the CIM session, such as a Get-CimSession (../CimCmdlets/Get-CimSession.md)command.


"Import-Module" uses the CIM session connection to import modules from the remote computer into the current session. When you use the commands from the imported module in the current session, the commands run on the remote computer.


You can use this parameter to import modules from computers and devices that aren't running the Windows operating system, and Windows computers that have PowerShell, but don't have PowerShell remoting enabled.


This parameter was introduced in Windows PowerShell 3.0.`, `CimSession`),
            new Parameter_js_3.Parameter(`Cmdlet`, `Specifies an array of cmdlets that this cmdlet imports from the module into the current session. Wildcard characters are permitted.


Some modules automatically export selected cmdlets into your session when you import the module. This parameter lets you select from among the exported cmdlets.`, `String[]`),
            new Parameter_js_3.Parameter(`DisableNameChecking`, `Indicates that this cmdlet suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.


By default, when a module that you import exports cmdlets or functions that have unapproved verbs in their names, PowerShell displays the following warning message:


> WARNING: Some imported command names include unapproved verbs which might make them less > discoverable. Use the Verbose parameter for more detail or type Get-Verb to see the list of > approved verbs.


This message is only a warning. The complete module is still imported, including the non-conforming commands. Although the message is displayed to module users, the naming problem should be fixed by the module author.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Force`, `This parameter causes a module to be loaded, or reloaded, over top of the current one.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FullyQualifiedName`, `Specifies the fully qualified name of the module as a hash table. The value can be a combination of strings and hash tables. The hash table has the following keys.


- "ModuleName" - Required Specifies the module name. - "GUID" - Optional Specifies the GUID of the module. - It's also Required to specify one of the three below keys. These keys   can't be used together.   - "ModuleVersion" - Specifies a minimum acceptable version of the module.   - "RequiredVersion" - Specifies an exact, required version of the module.   - "MaximumVersion" - Specifies the maximum acceptable version of the module.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`Function`, `Specifies an array of functions that this cmdlet imports from the module into the current session. Wildcard characters are permitted. Some modules automatically export selected functions into your session when you import the module. This parameter lets you select from among the exported functions.`, `String[]`),
            new Parameter_js_3.Parameter(`Global`, `Indicates that this cmdlet imports modules into the global session state so they are available to all commands in the session.


By default, when "Import-Module" cmdlet is called from the command prompt, script file, or scriptblock, all the commands are imported into the global session state.


When invoked from another module, "Import-Module" cmdlet imports the commands in a module, including commands from nested modules, into the calling module's session state.


> [!TIP] > You should avoid calling "Import-Module" from within a module. Instead, declare the target module > as a nested module in the parent module's manifest. Declaring nested modules improves the > discoverability of dependencies.


The Global parameter is equivalent to the Scope parameter with a value of Global .


To restrict the commands that a module exports, use an "Export-ModuleMember" command in the script module.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`MaximumVersion`, `Specifies a maximum version. This cmdlet imports only a version of the module that is less than or equal to the specified value. If no version qualifies, "Import-Module" returns an error.`, `String`),
            new Parameter_js_3.Parameter(`MinimumVersion`, `Specifies a minimum version. This cmdlet imports only a version of the module that is greater than or equal to the specified value. Use the MinimumVersion parameter name or its alias, Version . If no version qualifies, "Import-Module" generates an error.


To specify an exact version, use the RequiredVersion parameter. You can also use the Module and Version parameters of the #Requires keyword to require a specific version of a module in a script.


This parameter was introduced in Windows PowerShell 3.0.`, `Version`),
            new Parameter_js_3.Parameter(`ModuleInfo`, `Specifies an array of module objects to import. Enter a variable that contains the module objects, or a command that gets the module objects, such as the following command: "Get-Module -ListAvailable". You can also pipe module objects to "Import-Module".`, `PSModuleInfo[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of the modules to import. Enter the name of the module or the name of a file in the module, such as a ".psd1", ".psm1", ".dll", or ".ps1" file. File paths are optional. Wildcard characters aren't permitted. You can also pipe module names and filenames to "Import-Module".


If you omit a path, "Import-Module" looks for the module in the paths saved in the "$env:PSModulePath" environment variable.


Specify only the module name whenever possible. When you specify a file name, only the members that are implemented in that file are imported. If the module contains other files, they aren't imported, and you might be missing important members of the module.`, `String[]`),
            new Parameter_js_3.Parameter(`NoClobber`, `Prevents importing commands that have the same names as existing commands in the current session. By default, "Import-Module" imports all exported module commands.


Commands that have the same names can hide or replace commands in the session. To avoid command name conflicts in a session, use the Prefix or NoClobber parameters. For more information about name conflicts and command precedence, see "Modules and Name Conflicts" in about_Modules (about/about_Modules.md)and about_Command_Precedence (about/about_Command_Precedence.md).


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you're working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Prefix`, `Specifies a prefix that this cmdlet adds to the nouns in the names of imported module members.


Use this parameter to avoid name conflicts that might occur when different members in the session have the same name. This parameter does not change the module, and it does not affect files that the module imports for its own use. These are known as nested modules. This cmdlet affects only the names of members in the current session.


For example, if you specify the prefix UTC and then import a "Get-Date" cmdlet, the cmdlet is known in the session as "Get-UTCDate", and it is not confused with the original "Get-Date" cmdlet.


The value of this parameter takes precedence over the DefaultCommandPrefix property of the module, which specifies the default prefix.`, `String`),
            new Parameter_js_3.Parameter(`PSSession`, `Specifies a PowerShell user-managed session ( PSSession ) from which this cmdlet imports modules into the current session. Enter a variable that contains a PSSession or a command that gets a PSSession , such as a "Get-PSSession" command.


When you import a module from a different session into the current session, you can use the cmdlets from the module in the current session, just as you would use cmdlets from a local module. Commands that use the remote cmdlets run in the remote session, but the remoting details are managed in the background by PowerShell.


This parameter uses the Implicit Remoting feature of PowerShell. It is equivalent to using the "Import-PSSession" cmdlet to import particular modules from a session.


"Import-Module" cannot import PowerShell Core modules from another session. The PowerShell Core modules have names that begin with Microsoft.PowerShell.


This parameter was introduced in Windows PowerShell 3.0.`, `PSSession`),
            new Parameter_js_3.Parameter(`RequiredVersion`, `Specifies a version of the module that this cmdlet imports. If the version is not installed, "Import-Module" generates an error.


By default, "Import-Module" imports the module without checking the version number.


To specify a minimum version, use the MinimumVersion parameter. You can also use the Module and Version parameters of the #Requires keyword to require a specific version of a module in a script.


This parameter was introduced in Windows PowerShell 3.0.


Scripts that use RequiredVersion to import modules that are included with existing releases of the Windows operating system don't automatically run in future releases of the Windows operating system. This is because PowerShell module version numbers in future releases of the Windows operating system are higher than module version numbers in existing releases of the Windows operating system.`, `Version`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies a scope into which this cmdlet imports the module.


The acceptable values for this parameter are:


- Global . Available to all commands in the session. Equivalent to the Global parameter. - Local . Available only in the current scope.


By default, when "Import-Module" cmdlet is called from the command prompt, script file, or scriptblock, all the commands are imported into the global session state. You can use the -Scope parameter with the value of Local to import module content into the script or scriptblock scope.


When invoked from another module, "Import-Module" cmdlet imports the commands in a module, including commands from nested modules, into the caller's session state. Specifying "-Scope Global" or "-Global" indicates that this cmdlet imports modules into the global session state so they are available to all commands in the session.


The Global parameter is equivalent to the Scope parameter with a value of Global.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Variable`, `Specifies an array of variables that this cmdlet imports from the module into the current session. Enter a list of variables. Wildcard characters are permitted.


Some modules automatically export selected variables into your session when you import the module. This parameter lets you select from among the exported variables.`, `String[]`),
            new Parameter_js_3.Parameter(`SkipEditionCheck`, `Skips the check on the "CompatiblePSEditions" field.


Allows loading a module from the ""$($env:windir)\\System32\\WindowsPowerShell\\v1.0\\Modules"" module directory into PowerShell Core when that module does not specify "Core" in the "CompatiblePSEditions" manifest field.


When importing a module from another path, this switch does nothing, since the check is not performed. On Linux and macOS, this switch does nothing.


For more information, see about_PowerShell_Editions (About/about_PowerShell_Editions.md).


> [!WARNING] > "Import-Module -SkipEditionCheck" is still likely to fail to import a module. Even if it does > succeed, invoking a command from the module may later fail when it tries to use an > incompatible API.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UseWindowsPowerShell`, `Loads module using Windows PowerShell Compatibility functionality. See about_Windows_PowerShell_Compatibility (About/about_Windows_PowerShell_Compatibility.md)for more information.`, `SwitchParameter`),
        ], `Adds modules to the current session.`, `Import-Module [-Assembly] <Assembly[]> [-Alias <String[]>] [-ArgumentList <Object[]>] [-AsCustomObject] [-Cmdlet <String[]>] [-DisableNameChecking] [-Force] [-Function <String[]>] [-Global] [-NoClobber] [-PassThru] [-Prefix <String>] [-Scope {Local | Global}] [-Variable <String[]>] [-SkipEditionCheck] [-UseWindowsPowerShell] [<CommonParameters>]

Import-Module [-Name] <String[]> [-Alias <String[]>] [-ArgumentList <Object[]>] [-AsCustomObject] [-CimNamespace <String>] [-CimResourceUri <Uri>] -CimSession <CimSession> [-Cmdlet <String[]>] [-DisableNameChecking] [-Force] [-Function <String[]>] [-Global] [-MaximumVersion <String>] [-MinimumVersion <Version>] [-NoClobber] [-PassThru] [-Prefix <String>] [-RequiredVersion <Version>] [-Scope {Local | Global}] [-Variable <String[]>] [-SkipEditionCheck] [-UseWindowsPowerShell] [<CommonParameters>]

Import-Module [-FullyQualifiedName] <ModuleSpecification[]> [-Alias <String[]>] [-ArgumentList <Object[]>] [-AsCustomObject] [-Cmdlet <String[]>] [-DisableNameChecking] [-Force] [-Function <String[]>] [-Global] [-NoClobber] [-PassThru] [-Prefix <String>] [-Scope {Local | Global}] [-Variable <String[]>] [-SkipEditionCheck] [-UseWindowsPowerShell] [<CommonParameters>]

Import-Module [-FullyQualifiedName] <ModuleSpecification[]> [-Alias <String[]>] [-ArgumentList <Object[]>] [-AsCustomObject] [-Cmdlet <String[]>] [-DisableNameChecking] [-Force] [-Function <String[]>] [-Global] [-NoClobber] [-PassThru] [-Prefix <String>] -PSSession <PSSession> [-Scope {Local | Global}] [-Variable <String[]>] [-SkipEditionCheck] [-UseWindowsPowerShell] [<CommonParameters>]

Import-Module [-Name] <String[]> [-Alias <String[]>] [-ArgumentList <Object[]>] [-AsCustomObject] [-Cmdlet <String[]>] [-DisableNameChecking] [-Force] [-Function <String[]>] [-Global] [-MaximumVersion <String>] [-MinimumVersion <Version>] [-NoClobber] [-PassThru] [-Prefix <String>] [-RequiredVersion <Version>] [-Scope {Local | Global}] [-Variable <String[]>] [-SkipEditionCheck] [-UseWindowsPowerShell] [<CommonParameters>]

Import-Module [-Name] <String[]> [-Alias <String[]>] [-ArgumentList <Object[]>] [-AsCustomObject] [-Cmdlet <String[]>] [-DisableNameChecking] [-Force] [-Function <String[]>] [-Global] [-MaximumVersion <String>] [-MinimumVersion <Version>] [-NoClobber] [-PassThru] [-Prefix <String>] -PSSession <PSSession> [-RequiredVersion <Version>] [-Scope {Local | Global}] [-Variable <String[]>] [-SkipEditionCheck] [-UseWindowsPowerShell] [<CommonParameters>]

Import-Module [-ModuleInfo] <PSModuleInfo[]> [-Alias <String[]>] [-ArgumentList <Object[]>] [-AsCustomObject] [-Cmdlet <String[]>] [-DisableNameChecking] [-Force] [-Function <String[]>] [-Global] [-NoClobber] [-PassThru] [-Prefix <String>] [-Scope {Local | Global}] [-Variable <String[]>] [-SkipEditionCheck] [-UseWindowsPowerShell] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-PackageProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-PfxCertificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-PowerShellDataFile`, [
            new Parameter_js_3.Parameter(`LiteralPath`, `The path to the file being imported. All characters in the path are treated as literal values. Wildcard characters are not processed.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `The path to the file being imported. Wildcards are allowed but only the first matching file is imported.`, `String[]`),
        ], `Imports values from a .PSD1 file without invoking its contents.`, `Import-PowerShellDataFile [-LiteralPath] <String[]> [<CommonParameters>]

Import-PowerShellDataFile [-Path] <String[]> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-PSSession`, [
            new Parameter_js_3.Parameter(`AllowClobber`, `Indicates that this cmdlet imports the specified commands, even if they have the same names as commands in the current session.


If you import a command with the same name as a command in the current session, the imported command hides or replaces the original commands. For more information, see about_Command_Precedence.


By default, Import-PSSession does not import commands that have the same name as commands in the current session.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies an array of commands that results from using the specified arguments (parameter values).


For instance, to import the variant of the Get-Item command in the certificate (Cert:) drive in the PSSession in $S, type "Import-PSSession -Session $S -Command Get-Item -ArgumentList cert:".`, `Object[]`),
            new Parameter_js_3.Parameter(`Certificate`, `Specifies the client certificate that is used to sign the format files ( .Format.ps1xml) or script module files (.psm1) in the temporary module that Import-PSSession * creates.


Enter a variable that contains a certificate or a command or expression that gets the certificate.


To find a certificate, use the Get-PfxCertificate cmdlet or use the Get-ChildItem cmdlet in the Certificate (Cert:) drive. If the certificate is not valid or does not have sufficient authority, the command fails.`, `X509Certificate2`),
            new Parameter_js_3.Parameter(`CommandName`, `Specifies commands with the specified names or name patterns. Wildcards are permitted. Use CommandName or its alias, Name .


By default, Import-PSSession imports all commands from the session, except for commands that have the same names as commands in the current session. This prevents imported commands from hiding or replacing commands in the session. To import all commands, even those that hide or replace other commands, use the AllowClobber parameter.


If you use the CommandName parameter, the formatting files for the commands are not imported unless you use the FormatTypeName parameter. Similarly, if you use the FormatTypeName parameter, no commands are imported unless you use the CommandName parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`CommandType`, `Specifies the type of command objects. The default value is Cmdlet. Use CommandType or its alias, Type . The acceptable values for this parameter are:


- Alias. The PowerShell aliases in the remote session. - All. The cmdlets and functions in the remote session. - Application. All the files other than PowerShell files in the paths that are listed in the Path environment variable ($env:path) in the remote session, including .txt, .exe, and .dll files. - Cmdlet. The cmdlets in the remote session. "Cmdlet" is the default. - ExternalScript. The .ps1 files in the paths listed in the Path environment variable ($env:path) in the remote session. - Filter and Function. The PowerShell functions in the remote session. - Script. The script blocks in the remote session.`, `CommandTypes`),
            new Parameter_js_3.Parameter(`DisableNameChecking`, `Indicates that this cmdlet suppresses the message that warns you when you import a cmdlet or function whose name includes an unapproved verb or a prohibited character.


By default, when a module that you import exports cmdlets or functions that have unapproved verbs in their names, the PowerShell displays the following warning message:


"WARNING: Some imported command names include unapproved verbs which might make them less discoverable. Use the Verbose parameter for more detail or type Get-Verb to see the list of approved verbs."


This message is only a warning. The complete module is still imported, including the non-conforming commands. Although the message is displayed to module users, the naming problem should be fixed by the module author.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FormatTypeName`, `Specifies formatting instructions for the specified Microsoft .NET Framework types. Enter the type names. Wildcards are permitted.


The value of this parameter must be the name of a type that is returned by a Get-FormatData command in the session from which the commands are being imported. To get all of the formatting data in the remote session, type *.


If the command does not include either the CommandName or FormatTypeName parameter, Import-PSSession imports formatting instructions for all .NET Framework types returned by a Get-FormatData command in the remote session.


If you use the FormatTypeName parameter, no commands are imported unless you use the CommandName parameter.


Similarly, if you use the CommandName parameter, the formatting files for the commands are not imported unless you use the FormatTypeName parameter.`, `String[]`),
            new Parameter_js_3.Parameter(`FullyQualifiedModule`, `Specifies modules with names that are specified in the form of ModuleSpecification objects (described in the Remarks section of ModuleSpecification Constructor (Hashtable) (https://msdn.microsoft.com/library/jj136290) in the MSDN library). For example, the FullyQualifiedModule parameter accepts a module name that is specified in the format @{ModuleName = "modulename"; ModuleVersion = "version_number"} or @{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"}. ModuleName and ModuleVersion are required, but Guid is optional.


You cannot specify the FullyQualifiedModule parameter in the same command as a Module parameter; the two parameters are mutually exclusive.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`Module`, `Specifies and array of commands in the PowerShell snap-ins and modules. Enter the snap-in and module names. Wildcards are not permitted. Import-PSSession cannot import providers from a snap-in.


For more information, see about_PSSnapins and about_Modules (../Microsoft.PowerShell.Core/About/about_Modules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Prefix`, `Specifies a prefix to the nouns in the names of imported commands.


Use this parameter to avoid name conflicts that might occur when different commands in the session have the same name.


For instance, if you specify the prefix Remote and then import a Get-Date cmdlet, the cmdlet is known in the session as Get-RemoteDate, and it is not confused with the original Get-Date cmdlet.`, `String`),
            new Parameter_js_3.Parameter(`Session`, `Specifies the PSSession from which the cmdlets are imported. Enter a variable that contains a session object or a command that gets a session object, such as a New-PSSession or Get-PSSession command. You can specify only one session. This parameter is required.`, `PSSession`),
        ], `Imports commands from another session into the current session.`, `Import-PSSession [-Session] <PSSession> [[-CommandName] <String[]>] [[-FormatTypeName] <String[]>] [-AllowClobber] [-ArgumentList <Object[]>] [-Certificate <X509Certificate2>] [-CommandType {Alias | Function | Filter | Cmdlet | ExternalScript | Application | Script | Workflow | Configuration | All}] [-DisableNameChecking] [-FullyQualifiedModule <ModuleSpecification[]>] [-Module <String[]>] [-Prefix <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-StartLayout`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Import-TpmOwnerAuth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Initialize-PmemPhysicalDevice`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Initialize-Tpm`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-Package`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-PackageProvider`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-ProvisioningPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Install-TrustedProvisioningCertificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-CimMethod`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-Command`, [
            new Parameter_js_3.Parameter(`AllowRedirection`, `Allows redirection of this connection to an alternate Uniform Resource Identifier (URI).


When you use the ConnectionURI parameter, the remote destination can return an instruction to redirect to a different URI. By default, PowerShell doesn't redirect connections, but you can use this parameter to allow it to redirect the connection.


You can also limit the number of times the connection is redirected by changing the MaximumConnectionRedirectionCount session option value. Use the MaximumRedirection parameter of the "New-PSSessionOption" cmdlet or set the MaximumConnectionRedirectionCount property of the "$PSSessionOption" preference variable. The default value is 5.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ApplicationName`, `Specifies the application name segment of the connection URI. Use this parameter to specify the application name when you aren't using the ConnectionURI parameter in the command.


The default value is the value of the "$PSSessionApplicationName" preference variable on the local computer. If this preference variable isn't defined, the default value is WSMAN. This value is appropriate for most uses. For more information, see about_Preference_Variables (./About/about_Preference_Variables.md).


The WinRM service uses the application name to select a listener to service the connection request. The value of this parameter should match the value of the URLPrefix property of a listener on the remote computer.`, `String`),
            new Parameter_js_3.Parameter(`ArgumentList`, `Supplies the values of local variables in the command. The variables in the command are replaced by these values before the command is run on the remote computer. Enter the values in a comma-separated list. Values are associated with variables in the order that they're listed. The alias for ArgumentList is Args.


The values in the ArgumentList parameter can be actual values, such as 1024, or they can be references to local variables, such as "$max".


To use local variables in a command, use the following command format:


"{param($<name1>[, $<name2>]...) <command-with-local-variables>} -ArgumentList <value>" -or- "<local-variable>"


The param keyword lists the local variables that are used in the command. ArgumentList supplies the values of the variables, in the order that they're listed.`, `Object[]`),
            new Parameter_js_3.Parameter(`AsJob`, `Indicates that this cmdlet runs the command as a background job on a remote computer. Use this parameter to run commands that take an extensive time to finish.


When you use the AsJob parameter, the command returns an object that represents the job, and then displays the command prompt. You can continue to work in the session while the job finishes. To manage the job, use the "*-Job" cmdlets. To get the job results, use the "Receive-Job" cmdlet.


The AsJob parameter resembles using the "Invoke-Command" cmdlet to run a "Start-Job" cmdlet remotely. However, with AsJob , the job is created on the local computer, even though the job runs on a remote computer. The results of the remote job are automatically returned to the local computer.


For more information about PowerShell background jobs, see about_Jobs (About/about_Jobs.md) and [about_Remote_Jobs](About/about_Remote_Jobs.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the mechanism that's used to authenticate the user's credentials. CredSSP authentication is available only in Windows Vista, Windows Server 2008, and later versions of the Windows operating system.


The acceptable values for this parameter are as follows:


- Default


- Basic


- Credssp


- Digest


- Kerberos


- Negotiate


- NegotiateWithImplicitCredential




The default value is Default.


For more information about the values of this parameter, see AuthenticationMechanism Enumeration (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).

> [!CAUTION] > Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are > passed to a remote computer to be authenticated, is designed for commands that require > authentication on more than one resource, such as accessing a remote network share. This mechanism > increases the security risk of the remote operation. If the remote computer is compromised, the > credentials that are passed to it can be used to control the network session. For more > information, see > Credential Security Support Provider (/windows/win32/secauthn/credential-security-support-provider).`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to connect to the disconnected session. Enter the certificate thumbprint of the certificate.


Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts and they don't work with domain accounts.


To get a certificate thumbprint, use a "Get-Item" or "Get-ChildItem" command in the PowerShell Cert: drive.`, `String`),
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies the computers on which the command runs. The default is the local computer.


When you use the ComputerName parameter, PowerShell creates a temporary connection that's used only to run the specified command and is then closed. If you need a persistent connection, use the Session parameter.


Type the NETBIOS name, IP address, or fully qualified domain name of one or more computers in a comma-separated list. To specify the local computer, type the computer name, localhost, or a dot (".").


To use an IP address in the value of ComputerName , the command must include the Credential parameter. The computer must be configured for the HTTPS transport or the IP address of the remote computer must be included in the local computer's WinRM TrustedHosts list. For instructions to add a computer name to the TrustedHosts list, see [How to Add a Computer to the Trusted Host List](./about/about_remote_troubleshooting.md#how-to-add-a-computer-to-the-trusted-hosts-list).


On Windows Vista and later versions of the Windows operating system, to include the local computer in the value of ComputerName , you must run PowerShell using the Run as administrator option.`, `String[]`),
            new Parameter_js_3.Parameter(`ConfigurationName`, `Specifies the session configuration that is used for the new PSSession .


Enter a configuration name or the fully qualified resource URI for a session configuration. If you specify only the configuration name, the following schema URI is prepended: "https://schemas.microsoft.com/PowerShell".


When used with SSH, this parameter specifies the subsystem to use on the target as defined in "sshd_config". The default value for SSH is the "powershell" subsystem.


The session configuration for a session is located on the remote computer. If the specified session configuration doesn't exist on the remote computer, the command fails.


The default value is the value of the "$PSSessionConfigurationName" preference variable on the local computer. If this preference variable isn't set, the default is Microsoft.PowerShell . For more information, see about_Preference_Variables (about/about_Preference_Variables.md).`, `String`),
            new Parameter_js_3.Parameter(`ConnectionUri`, `Specifies a Uniform Resource Identifier (URI) that defines the connection endpoint of the session. The URI must be fully qualified.


The format of this string is as follows:


"<Transport>://<ComputerName>:<Port>/<ApplicationName>"


The default value is as follows:


"http://localhost:5985/WSMAN"


If you don't specify a connection URI, you can use the UseSSL and Port parameters to specify the connection URI values.


Valid values for the Transport segment of the URI are HTTP and HTTPS. If you specify a connection URI with a Transport segment, but don't specify a port, the session is created with the standards ports: 80 for HTTP and 443 for HTTPS. To use the default ports for PowerShell remoting, specify port 5985 for HTTP or 5986 for HTTPS.


If the destination computer redirects the connection to a different URI, PowerShell prevents the redirection unless you use the AllowRedirection parameter in the command.`, `Uri[]`),
            new Parameter_js_3.Parameter(`ContainerId`, `Specifies an array of container IDs.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to perform this action. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`EnableNetworkAccess`, `Indicates that this cmdlet adds an interactive security token to loopback sessions. The interactive token lets you run commands in the loopback session that get data from other computers. For example, you can run a command in the session that copies XML files from a remote computer to the local computer.


A loopback session is a PSSession that originates and ends on the same computer. To create a loopback session, omit the ComputerName parameter or set its value to dot ("."), localhost, or the name of the local computer.


By default, loopback sessions are created by using a network token, which might not provide sufficient permission to authenticate to remote computers.


The EnableNetworkAccess parameter is effective only in loopback sessions. If you use EnableNetworkAccess when you create a session on a remote computer, the command succeeds, but the parameter is ignored.


You can allow remote access in a loopback session by using the CredSSP value of the Authentication parameter, which delegates the session credentials to other computers.


To protect the computer from malicious access, disconnected loopback sessions that have interactive tokens, which are those created by using EnableNetworkAccess , can be reconnected only from the computer on which the session was created. Disconnected sessions that use CredSSP authentication can be reconnected from other computers. For more information, see "Disconnect-PSSession".


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FilePath`, `Specifies a local script that this cmdlet runs on one or more remote computers. Enter the path and file name of the script, or pipe a script path to "Invoke-Command". The script must reside on the local computer or in a directory that the local computer can access. Use ArgumentList to specify the values of parameters in the script.


When you use this parameter, PowerShell converts the contents of the specified script file to a script block, transmits the script block to the remote computer, and runs it on the remote computer.`, `String`),
            new Parameter_js_3.Parameter(`HideComputerName`, `Indicates that this cmdlet omits the computer name of each object from the output display. By default, the name of the computer that generated the object appears in the display.


This parameter affects only the output display. It doesn't change the object.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`HostName`, `Specifies an array of computer names for a Secure Shell (SSH) based connection. This is similar to the ComputerName parameter except that the connection to the remote computer is made using SSH rather than Windows WinRM.


This parameter was introduced in PowerShell 6.0.`, `String[]`),
            new Parameter_js_3.Parameter(`InDisconnectedSession`, `Indicates that this cmdlet runs a command or script in a disconnected session.


When you use the InDisconnectedSession parameter, "Invoke-Command" creates a persistent session on each remote computer, starts the command specified by the ScriptBlock or FilePath parameter, and then disconnects from the session. The commands continue to run in the disconnected sessions. InDisconnectedSession enables you to run commands without maintaining a connection to the remote sessions. And, because the session is disconnected before any results are returned, InDisconnectedSession makes sure that all command results are returned to the reconnected session, instead of being split between sessions.


You can't use InDisconnectedSession with the Session parameter or the AsJob parameter.


Commands that use InDisconnectedSession return a PSSession object that represents the disconnected session. They don't return the command output. To connect to the disconnected session, use the "Connect-PSSession" or "Receive-PSSession" cmdlets. To get the results of commands that ran in the session, use the "Receive-PSSession" cmdlet. To run commands that generate output in a disconnected session, set the value of the OutputBufferingMode session option to Drop . If you intend to connect to the disconnected session, set the idle time-out in the session so that it provides sufficient time for you to connect before deleting the session.


You can set the output buffering mode and idle time-out in the SessionOption parameter or in the "$PSSessionOption" preference variable. For more information about session options, see "New-PSSessionOption" and about_Preference_Variables (./about/about_preference_variables.md).


For more information about the Disconnected Sessions feature, see about_Remote_Disconnected_Sessions (about/about_Remote_Disconnected_Sessions.md).


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies input to the command. Enter a variable that contains the objects or type a command or expression that gets the objects.


When using the InputObject parameter, use the "$Input" automatic variable in the value of the ScriptBlock parameter to represent the input objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`JobName`, `Specifies a friendly name for the background job. By default, jobs are named "Job<n>", where "<n>" is an ordinal number.


If you use the JobName parameter in a command, the command is run as a job, and "Invoke-Command" returns a job object, even if you don't include AsJob in the command.


For more information about PowerShell background jobs, see about_Jobs (./About/about_Jobs.md).`, `String`),
            new Parameter_js_3.Parameter(`KeyFilePath`, `Specifies a key file path used by Secure Shell (SSH) to authenticate a user on a remote computer.


SSH allows user authentication to be performed via private and public keys as an alternative to basic password authentication. If the remote computer is configured for key authentication, then this parameter can be used to provide the key that identifies the user.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`NoNewScope`, `Indicates that this cmdlet runs the specified command in the current scope. By default, "Invoke-Command" runs commands in their own scope.


This parameter is valid only in commands that are run in the current session, that is, commands that omit both the ComputerName and Session parameters.


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Port`, `Specifies the network port on the remote computer that is used for this command. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985, which is the WinRM port for HTTP, and 5986, which is the WinRM port for HTTPS.


Before using an alternate port, configure the WinRM listener on the remote computer to listen at that port. To configure the listener, type the following two commands at the PowerShell prompt:


"Remove-Item -Path WSMan:\\Localhost\\listener\\listener* -Recurse"


"New-Item -Path WSMan:\\Localhost\\listener -Transport http -Address * -Port <port-number>"


Don't use the Port parameter unless you must. The port that is set in the command applies to all computers or sessions on which the command runs. An alternate port setting might prevent the command from running on all computers.`, `Int32`),
            new Parameter_js_3.Parameter(`RemoteDebug`, `Used to run the invoked command in debug mode in the remote PowerShell session.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`RunAsAdministrator`, `Indicates that this cmdlet invokes a command as an Administrator.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ScriptBlock`, `Specifies the commands to run. Enclose the commands in curly braces "{ }" to create a script block. This parameter is required.


By default, any variables in the command are evaluated on the remote computer. To include local variables in the command, use ArgumentList .`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`Session`, `Specifies an array of sessions in which this cmdlet runs the command. Enter a variable that contains PSSession objects or a command that creates or gets the PSSession objects, such as a "New-PSSession" or "Get-PSSession" command.


When you create a PSSession , PowerShell establishes a persistent connection to the remote computer. Use a PSSession to run a series of related commands that share data. To run a single command or a series of unrelated commands, use the ComputerName parameter. For more information, see about_PSSessions (./About/about_PSSessions.md).`, `PSSession[]`),
            new Parameter_js_3.Parameter(`SessionName`, `Specifies a friendly name for a disconnected session. You can use the name to refer to the session in subsequent commands, such as a "Get-PSSession" command. This parameter is valid only with the InDisconnectedSession parameter.


This parameter was introduced in PowerShell 3.0.`, `String[]`),
            new Parameter_js_3.Parameter(`SessionOption`, `Specifies advanced options for the session. Enter a SessionOption object, such as one that you create by using the "New-PSSessionOption" cmdlet, or a hash table in which the keys are session option names and the values are session option values.


The default values for the options are determined by the value of the "$PSSessionOption" preference variable, if it's set. Otherwise, the default values are established by options set in the session configuration.


The session option values take precedence over default values for sessions set in the "$PSSessionOption" preference variable and in the session configuration. However, they don't take precedence over maximum values, quotas, or limits set in the session configuration.


For a description of the session options that includes the default values, see "New-PSSessionOption". For information about the "$PSSessionOption" preference variable, see about_Preference_Variables (About/about_Preference_Variables.md). For more information about session configurations, see about_Session_Configurations (About/about_Session_Configurations.md).`, `PSSessionOption`),
            new Parameter_js_3.Parameter(`SSHConnection`, `This parameter takes an array of hash tables where each hash table contains one or more connection parameters needed to establish a Secure Shell (SSH) connection (HostName, Port, UserName, KeyFilePath).


The hash table connection parameters are the same as defined for the HostName parameter.


The SSHConnection parameter is useful for creating multiple sessions where each session requires different connection information.


This parameter was introduced in PowerShell 6.0.`, `Hashtable[]`),
            new Parameter_js_3.Parameter(`SSHTransport`, `Indicates that the remote connection is established using Secure Shell (SSH).


By default PowerShell uses Windows WinRM to connect to a remote computer. This switch forces PowerShell to use the HostName parameter for establishing an SSH based remote connection.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ThrottleLimit`, `Specifies the maximum number of concurrent connections that can be established to run this command. If you omit this parameter or enter a value of 0, the default value, 32, is used.


The throttle limit applies only to the current command, not to the session or to the computer.`, `Int32`),
            new Parameter_js_3.Parameter(`UserName`, `Specifies the user name for the account used to run a command on the remote computer. User authentication method will depend on how Secure Shell (SSH) is configured on the remote computer.


If SSH is configured for basic password authentication, then you'll be prompted for the user password.


If SSH is configured for key-based user authentication then a key file path can be provided via the KeyFilePath parameter and no password prompt will occur. If the client user key file is located in an SSH known location, then the KeyFilePath parameter isn't needed for key-based authentication, and user authentication will occur automatically based on the user name. For more information, see your platform's SSH documentation about key-based user authentication.


This isn't a required parameter. If the UserName parameter isn't specified, then the current logged on user name is used for the connection.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`UseSSL`, `Indicates that this cmdlet uses the Secure Sockets Layer (SSL) protocol to establish a connection to the remote computer. By default, SSL isn't used.


WS-Management encrypts all PowerShell content transmitted over the network. The UseSSL parameter is an additional protection that sends the data across an HTTPS, instead of HTTP.


If you use this parameter, but SSL isn't available on the port that's used for the command, the command fails.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`VMId`, `Specifies an array of IDs of virtual machines.`, `Guid[]`),
            new Parameter_js_3.Parameter(`VMName`, `Specifies an array of names of virtual machines.`, `String[]`),
            new Parameter_js_3.Parameter(`Subsystem`, `The name of the ssh subsystem. The default subsystem used is "powershell".`, `String`),
        ], `Runs commands on local and remote computers.`, `Invoke-Command [[-ConnectionUri] <Uri[]>] [-ScriptBlock] <ScriptBlock> [-AllowRedirection] [-ArgumentList <Object[]>] [-AsJob] [-Authentication {Basic | Default | Credssp | Digest | Kerberos | Negotiate | NegotiateWithImplicitCredential}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-EnableNetworkAccess] [-HideComputerName] [-InDisconnectedSession] [-InputObject <PSObject>] [-JobName <String>] [-RemoteDebug] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [[-ConnectionUri] <Uri[]>] [-FilePath] <String> [-AllowRedirection] [-ArgumentList <Object[]>] [-AsJob] [-Authentication {Basic | Default | Credssp | Digest | Kerberos | Negotiate | NegotiateWithImplicitCredential}] [-ConfigurationName <String>] [-Credential <PSCredential>] [-EnableNetworkAccess] [-HideComputerName] [-InDisconnectedSession] [-InputObject <PSObject>] [-JobName <String>] [-RemoteDebug] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [[-ComputerName] <String[]>] [-ScriptBlock] <ScriptBlock> [-ApplicationName <String>] [-ArgumentList <Object[]>] [-AsJob] [-Authentication {Basic | Default | Credssp | Digest | Kerberos | Negotiate | NegotiateWithImplicitCredential}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-EnableNetworkAccess] [-HideComputerName] [-InDisconnectedSession] [-InputObject <PSObject>] [-JobName <String>] [-Port <Int32>] [-RemoteDebug] [-SessionName <String[]>] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [-UseSSL] [<CommonParameters>]

Invoke-Command [[-ComputerName] <String[]>] [-FilePath] <String> [-ApplicationName <String>] [-ArgumentList <Object[]>] [-AsJob] [-Authentication {Basic | Default | Credssp | Digest | Kerberos | Negotiate | NegotiateWithImplicitCredential}] [-ConfigurationName <String>] [-Credential <PSCredential>] [-EnableNetworkAccess] [-HideComputerName] [-InDisconnectedSession] [-InputObject <PSObject>] [-JobName <String>] [-Port <Int32>] [-RemoteDebug] [-SessionName <String[]>] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [-UseSSL] [<CommonParameters>]

Invoke-Command [[-Session] <PSSession[]>] [-FilePath] <String> [-ArgumentList <Object[]>] [-AsJob] [-HideComputerName] [-InputObject <PSObject>] [-JobName <String>] [-RemoteDebug] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [-ScriptBlock] <ScriptBlock> [[-Session] <PSSession[]>] [-ArgumentList <Object[]>] [-AsJob] [-HideComputerName] [-InputObject <PSObject>] [-JobName <String>] [-RemoteDebug] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [-ScriptBlock] <ScriptBlock> [-VMId] <Guid[]> [-ArgumentList <Object[]>] [-AsJob] [-ConfigurationName <String>] [-Credential <PSCredential>] [-HideComputerName] [-InputObject <PSObject>] [-RemoteDebug] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [-ScriptBlock] <ScriptBlock> [-ArgumentList <Object[]>] [-AsJob] [-ConfigurationName <String>] [-Credential <PSCredential>] [-HideComputerName] [-InputObject <PSObject>] [-RemoteDebug] [-ThrottleLimit <Int32>] -VMName <String[]> [<CommonParameters>]

Invoke-Command [-VMId] <Guid[]> [-FilePath] <String> [-ArgumentList <Object[]>] [-AsJob] [-ConfigurationName <String>] [-Credential <PSCredential>] [-HideComputerName] [-InputObject <PSObject>] [-RemoteDebug] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [-FilePath] <String> [-ArgumentList <Object[]>] [-AsJob] [-ConfigurationName <String>] [-Credential <PSCredential>] [-HideComputerName] [-InputObject <PSObject>] [-RemoteDebug] [-ThrottleLimit <Int32>] -VMName <String[]> [<CommonParameters>]

Invoke-Command [-ScriptBlock] <ScriptBlock> [-ArgumentList <Object[]>] [-AsJob] [-HideComputerName] -HostName <String[]> [-InputObject <PSObject>] [-JobName <String>] [-KeyFilePath <String>] [-Port <Int32>] [-RemoteDebug] [-SSHTransport {true}] [-UserName <String>] [-Subsystem <String>] [<CommonParameters>]

Invoke-Command [-FilePath] <String> [-ArgumentList <Object[]>] [-AsJob] [-ConfigurationName <String>] -ContainerId <String[]> [-HideComputerName] [-InputObject <PSObject>] [-JobName <String>] [-RemoteDebug] [-RunAsAdministrator] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [-ScriptBlock] <ScriptBlock> [-ArgumentList <Object[]>] [-AsJob] [-ConfigurationName <String>] -ContainerId <String[]> [-HideComputerName] [-InputObject <PSObject>] [-JobName <String>] [-RemoteDebug] [-RunAsAdministrator] [-ThrottleLimit <Int32>] [<CommonParameters>]

Invoke-Command [-ScriptBlock] <ScriptBlock> [-ArgumentList <Object[]>] [-AsJob] [-HideComputerName] [-InputObject <PSObject>] [-JobName <String>] [-RemoteDebug] -SSHConnection <Hashtable[]> [<CommonParameters>]

Invoke-Command [-FilePath] <String> [-ArgumentList <Object[]>] [-AsJob] [-HideComputerName] -HostName <String[]> [-InputObject <PSObject>] [-KeyFilePath <String>] [-RemoteDebug] [-SSHTransport {true}] [-UserName <String>] [<CommonParameters>]

Invoke-Command [-FilePath] <String> [-ArgumentList <Object[]>] [-AsJob] [-HideComputerName] [-InputObject <PSObject>] [-RemoteDebug] -SSHConnection <Hashtable[]> [<CommonParameters>]

Invoke-Command [-ScriptBlock] <ScriptBlock> [-ArgumentList <Object[]>] [-InputObject <PSObject>] [-NoNewScope] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-CommandInDesktopPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-DscResource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-Expression`, [
            new Parameter_js_3.Parameter(`Command`, `Specifies the command or expression to run. Type the command or expression or enter a variable that contains the command or expression. The Command parameter is required.`, `String`),
        ], `Runs commands or expressions on the local computer.`, `Invoke-Expression [-Command] <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-History`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies the ID of a command in the history. You can type the ID number of the command or the first few characters of the command.


If you type characters, Invoke-History matches the most recent commands first. If you omit this parameter, Invoke-History runs the last, or most recent, command. To find the ID number of a command, use the Get-History cmdlet.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Runs commands from the session history.`, `Invoke-History [[-Id] <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-Item`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the selected item. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Performs the default action on the specified item.`, `Invoke-Item [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] -LiteralPath <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Invoke-Item [-Path] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-RestMethod`, [
            new Parameter_js_3.Parameter(`AllowUnencryptedAuthentication`, `Allows sending of credentials and secrets over unencrypted connections. By default, supplying Credential or any Authentication option with a Uri that does not begin with "https://" will result in an error and the request will abort to prevent unintentionally communicating secrets in plain text over unencrypted connections. To override this behavior at your own risk, supply the AllowUnencryptedAuthentication parameter.


> [!WARNING] > Using this parameter is not secure and is not recommended. It is provided only for compatibility > with legacy systems that cannot provide encrypted connections. Use at your own risk.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the explicit authentication type to use for the request. The default is None . Authentication can't be used with UseDefaultCredentials .


Available Authentication Options:


- None : This is the default option when Authentication is not supplied. No explicit   authentication will be used. - Basic : Requires Credential . The credentials will be used to send an RFC 7617 Basic   Authentication "Authorization: Basic" header in the format of "base64(user:password)". - Bearer : Requires Token . Will send and RFC 6750 "Authorization: Bearer" header with the   supplied token. This is an alias for OAuth - OAuth : Requires Token . Will send an RFC 6750 "Authorization: Bearer" header with the   supplied token. This is an alias for Bearer Supplying Authentication will override any "Authorization" headers supplied to Headers or included in WebSession .


This feature was added in PowerShell 6.0.0.`, `WebAuthenticationType`),
            new Parameter_js_3.Parameter(`Body`, `Specifies the body of the request. The body is the content of the request that follows the headers. You can also pipe a body value to "Invoke-RestMethod".


The Body parameter can be used to specify a list of query parameters or specify the content of the response.


When the input is a GET request, and the body is an "IDictionary" (typically, a hash table), the body is added to the Uniform Resource Identifier (URI) as query parameters. For other request types (such as POST), the body is set as the value of the request body in the standard name=value format.


When the body is a form, or it's the output of another "Invoke-WebRequest" call, PowerShell sets the request content to the form fields.


The Body parameter may also accept a System.Net.Http.MultipartFormDataContent object. This will facilitate "multipart/form-data" requests. When a MultipartFormDataContent object is supplied for Body , any content related headers supplied to the ContentType , Headers , or WebSession parameters will be overridden by the content headers of the "MultipartFormDataContent" object. This feature was added in PowerShell 6.0.0.`, `Object`),
            new Parameter_js_3.Parameter(`Certificate`, `Specifies the client certificate that is used for a secure web request. Enter a variable that contains a certificate or a command or expression that gets the certificate.


To find a certificate, use "Get-PfxCertificate" or use the "Get-ChildItem" cmdlet in the Certificate ("Cert:") drive. If the certificate isn't valid or doesn't have sufficient authority, the command fails.`, `X509Certificate`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to send the request. Enter the certificate thumbprint of the certificate.


Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.


To get a certificate thumbprint, use the "Get-Item" or "Get-ChildItem" command in the PowerShell "Cert:" drive.


> [!NOTE] > This feature is currently only supported on Windows OS platforms.`, `String`),
            new Parameter_js_3.Parameter(`ContentType`, `Specifies the content type of the web request.


If this parameter is omitted and the request method is POST, "Invoke-RestMethod" sets the content type to "application/x-www-form-urlencoded". Otherwise, the content type isn't specified in the call. ContentType will be overridden when a "MultipartFormDataContent" object is supplied for Body .`, `String`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to send the request. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. Credential can be used alone or in conjunction with certain Authentication parameter options. When used alone, it will only supply credentials to the remote server if the remote server sends an authentication challenge request. When used with Authentication options, the credentials will be explicitly sent.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`CustomMethod`, `Specifies custom method used for the web request. This can be used with the Request Method required by the endpoint is not an available option on the Method . Method and CustomMethod cannot be used together.


Example:


"Invoke-WebRequest -uri 'https://api.contoso.com/widget/' -CustomMethod 'TEST'"


This makes a "TEST" HTTP request to the API.


This feature was added in PowerShell 6.0.0.`, `String`),
            new Parameter_js_3.Parameter(`DisableKeepAlive`, `Indicates that the cmdlet sets the KeepAlive value in the HTTP header to False. By default, KeepAlive is True. KeepAlive establishes a persistent connection to the server to facilitate subsequent requests.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FollowRelLink`, `Indicates the cmdlet should follow relation links.


Some REST APIs support pagination via Relation Links per RFC5988 (https://tools.ietf.org/html/rfc5988#page-6). Instead of parsing the header to get the URL for the next page, you can have the cmdlet do this for you. To set how many times to follow relation links, use the MaximumFollowRelLink parameter.


When using this switch, the cmdlet returns a collection of pages of results. Each page of results may contain multiple result items.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Form`, `Converts a dictionary to a "multipart/form-data" submission. "-Form" may not be used with "-Body". If "-ContentType" will be ignored.


The keys of the dictionary will be used as the form field names. By default, form values will be converted to string values.


If the value is a System.IO.FileInfo object, then the binary file contents will be submitted. The name of the file will be submitted as the "filename". The MIME will be set as "application/octet-stream". "Get-Item" can be used to simplify supplying the System.IO.FileInfo object.




$Form = @{


resume = Get-Item 'c:\\Users\\jdoe\\Documents\\John Doe.pdf'


}




If the value is a collection type, such as an Array or List, the for field will be submitted multiple times. The values of the list will be treated as strings by default. If the value is a System.IO.FileInfo object, then the binary file contents will be submitted. Nested collections aren't supported.




$Form = @{


tags     = 'Vacation', 'Italy', '2017'


pictures = Get-ChildItem 'c:\\Users\\jdoe\\Pictures\\2017-Italy\'

}




In the above example, the "tags" field will be supplied three times in the form, once for each of "Vacation", "Italy", and "2017". The "pictures" field will also be submitted once for each file in the "2017-Italy" folder. The binary contents of the files in that folder will be submitted as the values.


This feature was added in PowerShell 6.1.0.`, `IDictionary`),
            new Parameter_js_3.Parameter(`Headers`, `Specifies the headers of the web request. Enter a hash table or dictionary.


To set UserAgent headers, use the UserAgent parameter. You cannot use this parameter to specify "User-Agent" or cookie headers.


Content related headers, such as "Content-Type" will be overridden when a "MultipartFormDataContent" object is supplied for Body .`, `IDictionary`),
            new Parameter_js_3.Parameter(`InFile`, `Gets the content of the web request from a file.


Enter a path and file name. If you omit the path, the default is the current location.`, `String`),
            new Parameter_js_3.Parameter(`MaximumFollowRelLink`, `Specifies how many times to follow relation links if FollowRelLink is used. A smaller value may be needed if the REST api throttles due to too many requests. The default value is "[Int32]::MaxValue". A value of 0 (zero) prevents following relation links.`, `Int32`),
            new Parameter_js_3.Parameter(`MaximumRedirection`, `Specifies how many times PowerShell redirects a connection to an alternate Uniform Resource Identifier (URI) before the connection fails. The default value is 5. A value of 0 (zero) prevents all redirection.`, `Int32`),
            new Parameter_js_3.Parameter(`MaximumRetryCount`, `Specifies how many times PowerShell retries a connection when a failure code between 400 and 599, inclusive or 304 is received. Also see RetryIntervalSec parameter for specifying number of retries.`, `Int32`),
            new Parameter_js_3.Parameter(`Method`, `Specifies the method used for the web request. The acceptable values for this parameter are:


- Default


- Delete


- Get


- Head


- Merge


- Options


- Patch


- Post


- Put


- Trace




The CustomMethod parameter can be used for Request Methods not listed above.`, `WebRequestMethod`),
            new Parameter_js_3.Parameter(`NoProxy`, `Indicates that the cmdlet will not use a proxy to reach the destination.


When you need to bypass the proxy configured in Internet Explorer, or a proxy specified in the environment, use this switch.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`OutFile`, `Saves the response body in the specified output file. Enter a path and file name. If you omit the path, the default is the current location.


By default, "Invoke-RestMethod" returns the results to the pipeline. To send the results to a file and to the pipeline, use the Passthru parameter.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns the results, in addition to writing them to a file. This parameter is valid only when the OutFile parameter is also used in the command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PreserveAuthorizationOnRedirect`, `Indicates the cmdlet should preserve the "Authorization" header, when present, across redirections.


By default, the cmdlet strips the "Authorization" header before redirecting. Specifying this parameter disables this logic for cases where the header needs to be sent to the redirection location.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Proxy`, `Uses a proxy server for the request, rather than connecting directly to the internet resource. Enter the Uniform Resource Identifier (URI) of a network proxy server.


This feature was added in PowerShell 6.0.0.`, `Uri`),
            new Parameter_js_3.Parameter(`ProxyCredential`, `Specifies a user account that has permission to use the proxy server that is specified by the Proxy parameter. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , User@Domain.Com , or enter a "PSCredential" object, such as one generated by the "Get-Credential" cmdlet.


This parameter is valid only when the Proxy parameter is also used in the command. You can't use the ProxyCredential and ProxyUseDefaultCredentials parameters in the same command.`, `PSCredential`),
            new Parameter_js_3.Parameter(`ProxyUseDefaultCredentials`, `Indicates that the cmdlet uses the credentials of the current user to access the proxy server that is specified by the Proxy parameter.


This parameter is valid only when the Proxy parameter is also used in the command. You can't use the ProxyCredential and ProxyUseDefaultCredentials parameters in the same command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ResponseHeadersVariable`, `Creates a Response Headers Dictionary and saves it in the value of the specified variable. The keys of the dictionary will contain the field names of the Response Header returned by the web server and the values will be the respective field values.


This feature was added in PowerShell 6.0.0.`, `String`),
            new Parameter_js_3.Parameter(`Resume`, `Performs a best effort attempt to resume downloading a partial file. The Resume parameter requires the OutFile parameter. Resume only operates on the size of the local file and remote file and performs no other validation that the local file and the remote file are the same.


If the local file size is smaller than the remote file size, then the cmdlet will attempt to resume downloading the file and append the remaining bytes to the end of the file.


If the local file size is the same as the remote file size, then no action is taken and the cmdlet assumes the download already completed.


If the local file size is larger than the remote file size, then the local file will be overwritten and the entire remote file will be completely re-downloaded. This behavior is the same as using OutFile without Resume .


If the remote server does not support download resuming, then the local file will be overwritten and the entire remote file will be completely re-downloaded. This behavior is the same as using OutFile without Resume .


If the local file doesn't exist, then the local file will be created and the entire remote file will be completely downloaded. This behavior is the same as using OutFile without Resume .


This feature was added in PowerShell 6.1.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`RetryIntervalSec`, `Specifies the interval between retries for the connection when a failure code between 400 and 599, inclusive or 304 is received. Also see MaximumRetryCount parameter for specifying number of retries.`, `Int32`),
            new Parameter_js_3.Parameter(`SessionVariable`, `Specifies a variable for which this cmdlet creates a web request session and saves it in the value. Enter a variable name without the dollar sign ("$") symbol.


When you specify a session variable, "Invoke-WebRequest" creates a web request session object and assigns it to a variable with the specified name in your PowerShell session. You can use the variable in your session as soon as the command completes.


Unlike a remote session, the web request session isn't a persistent connection. It's an object that contains information about the connection and the request, including cookies, credentials, the maximum redirection value, and the user agent string. You can use it to share state and data among web requests.


To use the web request session in subsequent web requests, specify the session variable in the value of the WebSession parameter. PowerShell uses the data in the web request session object when establishing the new connection. To override a value in the web request session, use a cmdlet parameter, such as UserAgent or Credential . Parameter values take precedence over values in the web request session.


You can't use the SessionVariable and WebSession parameters in the same command.`, `String`),
            new Parameter_js_3.Parameter(`SkipCertificateCheck`, `Skips certificate validation checks that include all validations such as expiration, revocation, trusted root authority, etc.


> [!WARNING] > Using this parameter is not secure and is not recommended. This switch is only intended to be used > against known hosts using a self-signed certificate for testing purposes. Use at your own risk.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipHeaderValidation`, `Indicates the cmdlet should add headers to the request without validation.


This switch should be used for sites that require header values that do not conform to standards. Specifying this switch disables validation to allow the value to be passed unchecked. When specified, all headers are added without validation.


This will disable validation for values passed to the ContentType , Headers, and UserAgent** parameters.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipHttpErrorCheck`, `This parameter causes the cmdlet to ignore HTTP error statuses and continue to process responses. The error responses are written to the pipeline just as if they were successful.


This parameter was introduced in PowerShell 7.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SslProtocol`, `Sets the SSL/TLS protocols that are permissible for the web request. By default all, SSL/TLS protocols supported by the system are allowed. SslProtocol allows for limiting to specific protocols for compliance purposes. SslProtocol uses the "WebSslProtocol" Flag Enum. It is possible to supply more than one protocol using flag notation or combining multiple "WebSslProtocol" options with "-bor", however supplying multiple protocols is not supported on all platforms.


> [!NOTE] > On non-Windows platforms it may not be possible to supply "'Tls, Tls12'" as an option.


This feature was added in PowerShell 6.0.0.`, `WebSslProtocol`),
            new Parameter_js_3.Parameter(`StatusCodeVariable`, `This parameter specifies a variable that's assigned a status code's integer value. The parameter can identify success messages or failure messages when used with the SkipHttpErrorCheck parameter.


Input the parameter's variable name as a string such as "-StatusCodeVariable "scv"".


This parameter was introduced in PowerShell 7.`, `String`),
            new Parameter_js_3.Parameter(`TimeoutSec`, `Specifies how long the request can be pending before it times out. Enter a value in seconds. The default value, 0, specifies an indefinite time-out.


A Domain Name System (DNS) query can take up to 15 seconds to return or time out. If your request contains a host name that requires resolution, and you set TimeoutSec to a value greater than zero, but less than 15 seconds, it can take 15 seconds or more before a WebException is thrown, and your request times out.`, `Int32`),
            new Parameter_js_3.Parameter(`Token`, `The OAuth or Bearer token to include in the request. Token is required by certain Authentication options. It can't be used independently. Token takes a "SecureString" that contains the token. To supply the token, manually use the following:


"Invoke-RestMethod -Uri $uri -Authentication OAuth -Token (Read-Host -AsSecureString)"


This parameter was introduced in PowerShell 6.0.`, `SecureString`),
            new Parameter_js_3.Parameter(`TransferEncoding`, `Specifies a value for the transfer-encoding HTTP response header. The acceptable values for this parameter are:


- Chunked


- Compress


- Deflate


- GZip


- Identity`, `String`),
            new Parameter_js_3.Parameter(`Uri`, `Specifies the Uniform Resource Identifier (URI) of the internet resource to which the web request is sent. This parameter supports HTTP, HTTPS, FTP, and FILE values.


This parameter is required. The parameter name ( Uri ) is optional.`, `Uri`),
            new Parameter_js_3.Parameter(`UseBasicParsing`, `This parameter has been deprecated. Beginning with PowerShell 6.0.0, all Web requests use basic parsing only. This parameter is included for backwards compatibility only and any use of it will have no effect on the operation of the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UseDefaultCredentials`, `Indicates that the cmdlet uses the credentials of the current user to send the web request. This can't be used with Authentication or Credential and may not be supported on all platforms.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UserAgent`, `Specifies a user agent string for the web request.


The default user agent is similar to "Mozilla/5.0 (Windows NT 10.0; Microsoft Windows 10.0.15063; en-US) PowerShell/6.0.0" with slight variations for each operating system and platform.


To test a website with the standard user agent string that is used by most internet browsers, use the properties of the PSUserAgent (/dotnet/api/microsoft.powershell.commands.psuseragent)class, such as Chrome, FireFox, InternetExplorer, Opera, and Safari.


For example, the following command uses the user agent string for Internet Explorer.


"Invoke-RestMethod -Uri https://website.com/ -UserAgent ([Microsoft.PowerShell.Commands.PSUserAgent]::InternetExplorer)"`, `String`),
            new Parameter_js_3.Parameter(`WebSession`, `Specifies a web request session. Enter the variable name, including the dollar sign ("$").


To override a value in the web request session, use a cmdlet parameter, such as UserAgent or Credential . Parameter values take precedence over values in the web request session. Content related headers, such as "Content-Type", will be also be overridden when a MultipartFormDataContent object is supplied for Body .


Unlike a remote session, the web request session isn't a persistent connection. It's an object that contains information about the connection and the request, including cookies, credentials, the maximum redirection value, and the user agent string. You can use it to share state and data among web requests.


To create a web request session, enter a variable name, without a dollar sign, in the value of the SessionVariable parameter of an "Invoke-WebRequest" command. "Invoke-WebRequest" creates the session and saves it in the variable. In subsequent commands, use the variable as the value of the WebSession parameter.


You can't use the SessionVariable and WebSession parameters in the same command.`, `WebRequestSession`),
        ], `Sends an HTTP or HTTPS request to a RESTful web service.`, `Invoke-RestMethod [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] -CustomMethod <String> [-DisableKeepAlive] [-FollowRelLink] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumFollowRelLink <Int32>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-Proxy <Uri>] [-ProxyCredential <PSCredential>] [-ProxyUseDefaultCredentials] [-ResponseHeadersVariable <String>] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-StatusCodeVariable <String>] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]

Invoke-RestMethod [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] -CustomMethod <String> [-DisableKeepAlive] [-FollowRelLink] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumFollowRelLink <Int32>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] -NoProxy [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-ResponseHeadersVariable <String>] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-StatusCodeVariable <String>] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]

Invoke-RestMethod [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] [-DisableKeepAlive] [-FollowRelLink] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumFollowRelLink <Int32>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] [-Method {Default | Get | Head | Post | Put | Delete | Trace | Options | Merge | Patch}] [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-Proxy <Uri>] [-ProxyCredential <PSCredential>] [-ProxyUseDefaultCredentials] [-ResponseHeadersVariable <String>] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-StatusCodeVariable <String>] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]

Invoke-RestMethod [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] [-DisableKeepAlive] [-FollowRelLink] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumFollowRelLink <Int32>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] [-Method {Default | Get | Head | Post | Put | Delete | Trace | Options | Merge | Patch}] -NoProxy [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-ResponseHeadersVariable <String>] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-StatusCodeVariable <String>] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-TroubleshootingPack`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-WebRequest`, [
            new Parameter_js_3.Parameter(`AllowUnencryptedAuthentication`, `Allows sending of credentials and secrets over unencrypted connections. By default, supplying Credential or any Authentication option with a Uri that does not begin with "https://" results in an error and the request is aborted to prevent unintentionally communicating secrets in plain text over unencrypted connections. To override this behavior at your own risk, supply the AllowUnencryptedAuthentication parameter.


> [!WARNING] > Using this parameter is not secure and is not recommended. It is provided only for compatibility > with legacy systems that cannot provide encrypted connections. Use at your own risk.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the explicit authentication type to use for the request. The default is None . Authentication cannot be used with UseDefaultCredentials .


Available Authentication Options:


- None : This is the default option when Authentication isn't supplied; no explicit   authentication is used. - Basic : Requires Credential . The credentials are sent in an RFC 7617 Basic Authentication   header in the format of "base64(user:password)". - Bearer : Requires Token . Sends an RFC 6750 "Authorization: Bearer" header with the supplied   token. This is an alias for OAuth - OAuth : Requires Token . Sends an RFC 6750 "Authorization: Bearer" header with the supplied   token. This is an alias for Bearer Supplying Authentication overrides any "Authorization" headers supplied to Headers or included in WebSession .


This feature was added in PowerShell 6.0.0.`, `WebAuthenticationType`),
            new Parameter_js_3.Parameter(`Body`, `Specifies the body of the request. The body is the content of the request that follows the headers. You can also pipe a body value to "Invoke-WebRequest".


The Body parameter can be used to specify a list of query parameters or specify the content of the response.


When the input is a GET request and the body is an "IDictionary" (typically, a hash table), the body is added to the URI as query parameters. For other request types (such as POST), the body is set as the value of the request body in the standard "name=value" format.


The Body parameter may also accept a "System.Net.Http.MultipartFormDataContent" object. This facilitates "multipart/form-data" requests. When a MultipartFormDataContent object is supplied for Body , any Content related headers supplied to the ContentType , Headers , or WebSession parameters is overridden by the Content headers of the MultipartFormDataContent object. This feature was added in PowerShell 6.0.0.`, `Object`),
            new Parameter_js_3.Parameter(`Certificate`, `Specifies the client certificate that's used for a secure web request. Enter a variable that contains a certificate or a command or expression that gets the certificate.


To find a certificate, use "Get-PfxCertificate" or use the "Get-ChildItem" cmdlet in the Certificate ("Cert:") drive. If the certificate isn't valid or doesn't have sufficient authority, the command fails.`, `X509Certificate`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to send the request. Enter the certificate thumbprint of the certificate.


Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they don't work with domain accounts.


To get a certificate thumbprint, use the "Get-Item" or "Get-ChildItem" command in the PowerShell "Cert:" drive.


> [!NOTE] > This feature is currently only supported on Windows OS platforms.`, `String`),
            new Parameter_js_3.Parameter(`ContentType`, `Specifies the content type of the web request.


If this parameter is omitted and the request method is POST, "Invoke-WebRequest" sets the content type to "application/x-www-form-urlencoded". Otherwise, the content type isn't specified in the call. ContentType is overridden when a MultipartFormDataContent object is supplied for Body .`, `String`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to send the request. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. Credential can be used alone or in conjunction with certain Authentication parameter options. When used alone, it only supplies credentials to the remote server if the remote server sends an authentication challenge request. When used with Authentication options, the credentials are explicitly sent.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`CustomMethod`, `Specifies a custom method used for the web request. This can be used if the Request Method required by the endpoint isn't an available option on the Method . Method and CustomMethod can't be used together.


This example makes a "TEST" HTTP request to the API:


"Invoke-WebRequest -uri 'https://api.contoso.com/widget/' -CustomMethod 'TEST'"


This feature was added in PowerShell 6.0.0.`, `String`),
            new Parameter_js_3.Parameter(`DisableKeepAlive`, `Indicates that the cmdlet sets the KeepAlive value in the HTTP header to False . By default, KeepAlive is True . KeepAlive establishes a persistent connection to the server to facilitate subsequent requests.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Form`, `Converts a dictionary to a "multipart/form-data" submission. Form may not be used with Body . If ContentType is used, it's ignored.


The keys of the dictionary are used as the form field names. By default, form values are converted to string values.


If the value is a System.IO.FileInfo object, then the binary file contents are submitted. The name of the file is submitted as the filename property. The MIME type is set as "application/octet-stream". "Get-Item" can be used to simplify supplying the System.IO.FileInfo object.




$Form = @{


resume = Get-Item 'c:\\Users\\jdoe\\Documents\\John Doe.pdf'


}




If the value is a collection type, such Arrays or Lists, the for field are submitted multiple times. The values of the list are treated as strings by default. If the value is a System.IO.FileInfo object, then the binary file contents are submitted. Nested collections aren't supported.




$Form = @{


tags     = 'Vacation', 'Italy', '2017'


pictures = Get-ChildItem 'c:\\Users\\jdoe\\Pictures\\2017-Italy\'

}




In the above example the "tags" field are supplied three times in the form, once for each of "Vacation", "Italy", and "2017". The "pictures" field is also submitted once for each file in the "2017-Italy" folder. The binary contents of the files in that folder are submitted as the values.


This feature was added in PowerShell 6.1.0.`, `IDictionary`),
            new Parameter_js_3.Parameter(`Headers`, `Specifies the headers of the web request. Enter a hash table or dictionary.


To set UserAgent headers, use the UserAgent parameter. You can't use this parameter to specify User-Agent or cookie headers.


Content related headers, such as "Content-Type" is overridden when a MultipartFormDataContent object is supplied for Body .`, `IDictionary`),
            new Parameter_js_3.Parameter(`InFile`, `Gets the content of the web request from a file. Enter a path and file name. If you omit the path, the default is the current location.`, `String`),
            new Parameter_js_3.Parameter(`MaximumRedirection`, `Specifies how many times PowerShell redirects a connection to an alternate Uniform Resource Identifier (URI) before the connection fails. The default value is 5. A value of 0 (zero) prevents all redirection.`, `Int32`),
            new Parameter_js_3.Parameter(`MaximumRetryCount`, `Specifies how many times PowerShell retries a connection when a failure code between 400 and 599, inclusive or 304 is received. Also see RetryIntervalSec parameter for specifying number of retries.`, `Int32`),
            new Parameter_js_3.Parameter(`Method`, `Specifies the method used for the web request. The acceptable values for this parameter are:


- Default


- Delete


- Get


- Head


- Merge


- Options


- Patch


- Post


- Put


- Trace




The CustomMethod parameter can be used for Request Methods not listed above.`, `WebRequestMethod`),
            new Parameter_js_3.Parameter(`NoProxy`, `Indicates that the cmdlet shouldn't use a proxy to reach the destination. When you need to bypass the proxy configured in the environment, use this switch. This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`OutFile`, `Specifies the output file for which this cmdlet saves the response body. Enter a path and file name. If you omit the path, the default is the current location.


By default, "Invoke-WebRequest" returns the results to the pipeline. To send the results to a file and to the pipeline, use the Passthru parameter.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Indicates that the cmdlet returns the results, in addition to writing them to a file. This parameter is valid only when the OutFile parameter is also used in the command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PreserveAuthorizationOnRedirect`, `Indicates the cmdlet should preserve the "Authorization" header, when present, across redirections.


By default, the cmdlet strips the "Authorization" header before redirecting. Specifying this parameter disables this logic for cases where the header needs to be sent to the redirection location.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Proxy`, `Specifies a proxy server for the request, rather than connecting directly to the internet resource. Enter the URI of a network proxy server.`, `Uri`),
            new Parameter_js_3.Parameter(`ProxyCredential`, `Specifies a user account that has permission to use the proxy server that is specified by the Proxy parameter. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , User@Domain.Com , or enter a "PSCredential" object, such as one generated by the "Get-Credential" cmdlet.


This parameter is valid only when the Proxy parameter is also used in the command. You can't use the ProxyCredential and ProxyUseDefaultCredentials parameters in the same command.`, `PSCredential`),
            new Parameter_js_3.Parameter(`ProxyUseDefaultCredentials`, `Indicates that the cmdlet uses the credentials of the current user to access the proxy server that is specified by the Proxy parameter.


This parameter is valid only when the Proxy parameter is also used in the command. You can't use the ProxyCredential and ProxyUseDefaultCredentials parameters in the same command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Resume`, `Performs a best effort attempt to resume downloading a partial file. Resume requires OutFile . Resume only operates on the size of the local file and remote file and performs no other validation that the local file and the remote file are the same.


If the local file size is smaller than the remote file size, then the cmdlet attempts to resume downloading the file and append the remaining bytes to the end of the file.


If the local file size is the same as the remote file size, then no action is taken and the cmdlet assumes the download already complete.


If the local file size is larger than the remote file size, then the local file is overwritten and the entire remote file is re-downloaded. This behavior is the same as using OutFile without Resume .


If the remote server does not support download resuming, then the local file is overwritten and the entire remote file is re-downloaded. This behavior is the same as using OutFile without Resume .


If the local file does not exist, then the local file is created and the entire remote file is downloaded. This behavior is the same as using OutFile without Resume .


This feature was added in PowerShell 6.1.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`RetryIntervalSec`, `Specifies the interval between retries for the connection when a failure code between 400 and 599, inclusive or 304 is received. Also see MaximumRetryCount parameter for specifying number of retries.`, `Int32`),
            new Parameter_js_3.Parameter(`SessionVariable`, `Specifies a variable for which this cmdlet creates a web request session and saves it in the value. Enter a variable name without the dollar sign ("$") symbol.


When you specify a session variable, "Invoke-WebRequest" creates a web request session object and assigns it to a variable with the specified name in your PowerShell session. You can use the variable in your session as soon as the command completes.


Unlike a remote session, the web request session is not a persistent connection. It's an object that contains information about the connection and the request, including cookies, credentials, the maximum redirection value, and the user agent string. You can use it to share state and data among web requests.


To use the web request session in subsequent web requests, specify the session variable in the value of the WebSession parameter. PowerShell uses the data in the web request session object when establishing the new connection. To override a value in the web request session, use a cmdlet parameter, such as UserAgent or Credential . Parameter values take precedence over values in the web request session.


You can't use the SessionVariable and WebSession parameters in the same command.`, `String`),
            new Parameter_js_3.Parameter(`SkipCertificateCheck`, `Skips certificate validation checks. This includes all validations such as expiration, revocation, trusted root authority, etc.


> [!WARNING] > Using this parameter is not secure and is not recommended. This switch is only intended to be used > against known hosts using a self-signed certificate for testing purposes. Use at your own risk.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipHeaderValidation`, `Indicates the cmdlet should add headers to the request without validation.


This switch should be used for sites that require header values that do not conform to standards. Specifying this switch disables validation to allow the value to be passed unchecked. When specified, all headers are added without validation.


This switch disables validation for values passed to the ContentType , Headers and UserAgent parameters.


This feature was added in PowerShell 6.0.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipHttpErrorCheck`, `This parameter causes the cmdlet to ignore HTTP error statuses and continue to process responses. The error responses are written to the pipeline just as if they were successful.


This parameter was introduced in PowerShell 7.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SslProtocol`, `Sets the SSL/TLS protocols that are permissible for the web request. By default all, SSL/TLS protocols supported by the system are allowed. SslProtocol allows for limiting to specific protocols for compliance purposes. SslProtocol uses the WebSslProtocol Flag Enum. It is possible to supply more than one protocol using flag notation or combining multiple WebSslProtocol options with bor , however supplying multiple protocols is not supported on all platforms.


> [!NOTE] > On non-Windows platforms it may not be possible to supply "'Tls, Tls12'" as an option.


This feature was added in PowerShell 6.0.0.`, `WebSslProtocol`),
            new Parameter_js_3.Parameter(`TimeoutSec`, `Specifies how long the request can be pending before it times out. Enter a value in seconds. The default value, 0, specifies an indefinite time-out.


A Domain Name System (DNS) query can take up to 15 seconds to return or time out. If your request contains a host name that requires resolution, and you set TimeoutSec to a value greater than zero, but less than 15 seconds, it can take 15 seconds or more before a WebException is thrown, and your request times out.`, `Int32`),
            new Parameter_js_3.Parameter(`Token`, `The OAuth or Bearer token to include in the request. Token is required by certain Authentication options. It cannot be used independently. Token takes a "SecureString" containing the token. To supply the token manually use the following:


"Invoke-WebRequest -Uri $uri -Authentication OAuth -Token (Read-Host -AsSecureString)"


This parameter was introduced in PowerShell 6.0.`, `SecureString`),
            new Parameter_js_3.Parameter(`TransferEncoding`, `Specifies a value for the transfer-encoding HTTP response header. The acceptable values for this parameter are:


- Chunked


- Compress


- Deflate


- GZip


- Identity`, `String`),
            new Parameter_js_3.Parameter(`Uri`, `Specifies the Uniform Resource Identifier (URI) of the internet resource to which the web request is sent. Enter a URI. This parameter supports HTTP or HTTPS only.


This parameter is required. The parameter name Uri is optional.`, `Uri`),
            new Parameter_js_3.Parameter(`UseBasicParsing`, `This parameter has been deprecated. Beginning with PowerShell 6.0.0, all Web requests use basic parsing only. This parameter is included for backwards compatibility only and any use of it has no effect on the operation of the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UseDefaultCredentials`, `Indicates that the cmdlet uses the credentials of the current user to send the web request. This can't be used with Authentication or Credential and may not be supported on all platforms.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UserAgent`, `Specifies a user agent string for the web request.


The default user agent is similar to "Mozilla/5.0 (Windows NT 10.0; Microsoft Windows 10.0.15063; en-US) PowerShell/6.0.0" with slight variations for each operating system and platform.


To test a website with the standard user agent string that is used by most internet browsers, use the properties of the PSUserAgent (/dotnet/api/microsoft.powershell.commands.psuseragent)class, such as Chrome, FireFox, InternetExplorer, Opera, and Safari.


For example, the following command uses the user agent string for Internet Explorer:




Invoke-WebRequest -Uri https://website.com/ -UserAgent ([Microsoft.PowerShell.Commands.PSUserAgent]::InternetExplorer)`, `String`),
            new Parameter_js_3.Parameter(`WebSession`, `Specifies a web request session. Enter the variable name, including the dollar sign ("$").


To override a value in the web request session, use a cmdlet parameter, such as UserAgent or Credential . Parameter values take precedence over values in the web request session. Content related headers, such as "Content-Type", are also be overridden when a MultipartFormDataContent object is supplied for Body .


Unlike a remote session, the web request session isn't a persistent connection. It's an object that contains information about the connection and the request, including cookies, credentials, the maximum redirection value, and the user agent string. You can use it to share state and data among web requests.


To create a web request session, enter a variable name, without a dollar sign, in the value of the SessionVariable parameter of an "Invoke-WebRequest" command. "Invoke-WebRequest" creates the session and saves it in the variable. In subsequent commands, use the variable as the value of the WebSession parameter.


You can't use the SessionVariable and WebSession parameters in the same command.`, `WebRequestSession`),
        ], `Gets content from a web page on the internet.`, `Invoke-WebRequest [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] -CustomMethod <String> [-DisableKeepAlive] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-Proxy <Uri>] [-ProxyCredential <PSCredential>] [-ProxyUseDefaultCredentials] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]

Invoke-WebRequest [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] -CustomMethod <String> [-DisableKeepAlive] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] -NoProxy [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]

Invoke-WebRequest [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] [-DisableKeepAlive] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] [-Method {Default | Get | Head | Post | Put | Delete | Trace | Options | Merge | Patch}] [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-Proxy <Uri>] [-ProxyCredential <PSCredential>] [-ProxyUseDefaultCredentials] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]

Invoke-WebRequest [-Uri] <Uri> [-AllowUnencryptedAuthentication] [-Authentication {None | Basic | Bearer | OAuth}] [-Body <Object>] [-Certificate <X509Certificate>] [-CertificateThumbprint <String>] [-ContentType <String>] [-Credential <PSCredential>] [-DisableKeepAlive] [-Form <IDictionary>] [-Headers <IDictionary>] [-InFile <String>] [-MaximumRedirection <Int32>] [-MaximumRetryCount <Int32>] [-Method {Default | Get | Head | Post | Put | Delete | Trace | Options | Merge | Patch}] -NoProxy [-OutFile <String>] [-PassThru] [-PreserveAuthorizationOnRedirect] [-Resume] [-RetryIntervalSec <Int32>] [-SessionVariable <String>] [-SkipCertificateCheck] [-SkipHeaderValidation] [-SkipHttpErrorCheck] [-SslProtocol {Default | Tls | Tls11 | Tls12}] [-TimeoutSec <Int32>] [-Token <SecureString>] [-TransferEncoding {chunked | compress | deflate | gzip | identity}] [-UseBasicParsing] [-UseDefaultCredentials] [-UserAgent <String>] [-WebSession <WebRequestSession>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Invoke-WSManAction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Join-DtcDiagnosticResourceManager`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Join-Path`, [
            new Parameter_js_3.Parameter(`AdditionalChildPath`, `Specifies additional elements to append to the value of the Path parameter. The "ChildPath" parameter is still mandatory and must be specified as well.


This parameter is specified with the "ValueFromRemainingArguments" property which enables joining an indefinite number of paths.`, `String[]`),
            new Parameter_js_3.Parameter(`ChildPath`, `Specifies the elements to append to the value of the "Path" parameter. Wildcards are permitted. The "ChildPath" parameter is required, although the parameter name ("ChildPath") is optional.`, `String`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the main path (or paths) to which the child-path is appended. Wildcards are permitted.


The value of "Path" determines which provider joins the paths and adds the path delimiters. The "Path" parameter is required, although the parameter name ("Path") is optional.`, `String[]`),
            new Parameter_js_3.Parameter(`Resolve`, `Indicates that this cmdlet should attempt to resolve the joined path from the current provider.


- If wildcards are used, the cmdlet returns all paths that match the joined path.


- If no wildcards are used, the cmdlet will error if the path does not exist.`, `SwitchParameter`),
        ], `Combines a path and a child path into a single path.`, `Join-Path [-Path] <String[]> [-ChildPath] <String> [[-AdditionalChildPath] <String[]>] [-Credential <PSCredential>] [-Resolve] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Join-String`, [
            new Parameter_js_3.Parameter(`DoubleQuote`, `Wraps the string value of each pipeline object in double-quotes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FormatString`, `A format string that specifies how each item should be formatted.`, `String`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the text to be joined. Enter a variable that contains the text, or type a command or expression that gets the objects to join into strings.`, `PSObject[]`),
            new Parameter_js_3.Parameter(`OutputPrefix`, `Text that's inserted before the output string. The string can contain special characters such as carriage return ("" "r ""), newline ("" "n ""), and tab ("" "t "").`, `String`),
            new Parameter_js_3.Parameter(`OutputSuffix`, `Text that's appended to the output string. The string can contain special characters such as carriage return ("" "r ""), newline ("" "n ""), and tab ("" "t "").`, `String`),
            new Parameter_js_3.Parameter(`Property`, `The name of a property, or a property expression, that will project the pipeline object to text.`, `PSPropertyExpression`),
            new Parameter_js_3.Parameter(`Separator`, `Text or characters such as a comma or semicolon that's inserted between the text for each pipeline object.`, `String`),
            new Parameter_js_3.Parameter(`SingleQuote`, `Wraps the string value of each pipeline object in single quotes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UseCulture`, `Uses the list separator for the current culture as the item delimiter. To find the list separator for a culture, use the following command: "(Get-Culture).TextInfo.ListSeparator".`, `SwitchParameter`),
        ], `Combines objects from the pipeline into a single string.`, `Join-String [[-Property] <PSPropertyExpression>] [[-Separator] <String>] [-DoubleQuote] [-InputObject <PSObject[]>] [-OutputPrefix <String>] [-OutputSuffix <String>] [-UseCulture] [<CommonParameters>]

Join-String [[-Property] <PSPropertyExpression>] [[-Separator] <String>] [-FormatString <String>] [-InputObject <PSObject[]>] [-OutputPrefix <String>] [-OutputSuffix <String>] [-UseCulture] [<CommonParameters>]

Join-String [[-Property] <PSPropertyExpression>] [[-Separator] <String>] [-InputObject <PSObject[]>] [-OutputPrefix <String>] [-OutputSuffix <String>] [-SingleQuote] [-UseCulture] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Measure-Command`, [
            new Parameter_js_3.Parameter(`Expression`, `Specifies the expression that is being timed. Enclose the expression in braces ("{}").`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`InputObject`, `Objects bound to the InputObject parameter are optional input for the script block passed to the Expression parameter. Inside the script block, "$_" can be used to reference the current object in the pipeline.`, `PSObject`),
        ], `Measures the time it takes to run script blocks and cmdlets.`, `Measure-Command [-Expression] <ScriptBlock> [-InputObject <PSObject>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Measure-Object`, [
            new Parameter_js_3.Parameter(`Average`, `Indicates that the cmdlet displays the average value of the specified properties.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Character`, `Indicates that the cmdlet counts the number of characters in the input objects.


> [!NOTE] > The Word , Char and Line switches count inside each input object, as well as across > input objects. See Example 7.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IgnoreWhiteSpace`, `Indicates that the cmdlet ignores white space in character counts. By default, white space is not ignored.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be measured. Enter a variable that contains the objects, or type a command or expression that gets the objects.


When you use the InputObject parameter with "Measure-Object", instead of piping command results to "Measure-Object", the InputObject value is treated as a single object.


It is recommended that you use "Measure-Object" in the pipeline if you want to measure a collection of objects based on whether the objects have specific values in defined properties.`, `PSObject`),
            new Parameter_js_3.Parameter(`Line`, `Indicates that the cmdlet counts the number of lines in the input objects.


> [!NOTE] > The Word , Char and Line switches count inside each input object, as well as across > input objects. See Example 7.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Maximum`, `Indicates that the cmdlet displays the maximum value of the specified properties.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Minimum`, `Indicates that the cmdlet displays the minimum value of the specified properties.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Property`, `Specifies one or more properties to measure. If you do not specify any other measures, "Measure-Object" counts the objects that have the properties you specify.`, `PSPropertyExpression[]`),
            new Parameter_js_3.Parameter(`StandardDeviation`, `Indicates that the cmdlet displays the standard deviation of the values of the specified properties.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Sum`, `Indicates that the cmdlet displays the sum of the values of the specified properties.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`AllStats`, `Indicates that the cmdlet displays all the statistics of the specified properties.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Word`, `Indicates that the cmdlet counts the number of words in the input objects.


> [!NOTE] > The Word , Char and Line switches count inside each input object, as well as across > input objects. See Example 7.`, `SwitchParameter`),
        ], `Calculates the numeric properties of objects, and the characters, words, and lines in string objects, such as files of text.`, `Measure-Object [[-Property] <PSPropertyExpression[]>] [-Average] [-InputObject <PSObject>] [-Maximum] [-Minimum] [-StandardDeviation] [-Sum] [-AllStats] [<CommonParameters>]

Measure-Object [[-Property] <PSPropertyExpression[]>] [-Character] [-IgnoreWhiteSpace] [-InputObject <PSObject>] [-Line] [-Word] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Merge-CIPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Mount-AppxVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Mount-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Move-AppxPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Move-Item`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Destination`, `Specifies the path to the location where the items are being moved. The default is the current directory. Wildcards are permitted, but the result must specify a single location.


To rename the item being moved, specify a new name in the value of the Destination parameter.`, `String`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the current location of the items. The default is the current directory. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Moves an item from one location to another.`, `Move-Item [[-Destination] <String>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Move-Item [-Path] <String[]> [[-Destination] <String>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Move-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Destination`, `Specifies the path to the destination location.`, `String`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the property to be moved.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the current location of the property. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Moves a property from one location to another.`, `Move-ItemProperty [-Destination] <String> [-Name] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Move-ItemProperty [-Path] <String[]> [-Destination] <String> [-Name] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Alias`, [
            new Parameter_js_3.Parameter(`Description`, `Specifies a description of the alias. You can type any string. If the description includes spaces, enclose it in quotation marks.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet acts like Set-Alias if the alias named already exists.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the new alias. You can use any alphanumeric characters in an alias, but the first character cannot be a number.`, `String`),
            new Parameter_js_3.Parameter(`Option`, `Specifies the value of the Options property of the alias. Valid values are:


- None: The alias has no constraints (default value)


- ReadOnly: The alias can be deleted but cannot be changed except by using the Force parameter - Constant: The alias cannot be deleted or changed


- Private: The alias is available only in the current scope


- AllScope: The alias is copied to any new scopes that are created


- Unspecified: The option is not specified




To see the Options property of all aliases in the session, type "Get-Alias | Format-Table -Property Name, Options -AutoSize".`, `ScopedItemOptions`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope of the new alias. The acceptable values for this parameter are:


- Global


- Local


- Script


- A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent).




Local is the default. For more information, see about_Scopes.`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the name of the cmdlet or command element that is being aliased.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates a new alias.`, `New-Alias [-Name] <String> [-Value] <String> [-Description <String>] [-Force] [-Option {None | ReadOnly | Constant | Private | AllScope | Unspecified}] [-PassThru] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-AppLockerPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-CertificateNotificationTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-CimInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-CimSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-CimSessionOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-CIPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-CIPolicyRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-DtcDiagnosticTransaction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Event`, [
            new Parameter_js_3.Parameter(`EventArguments`, `Specifies an object that contains options for the event.`, `PSObject[]`),
            new Parameter_js_3.Parameter(`MessageData`, `Specifies additional data associated with the event. The value of this parameter appears in the MessageData property of the event object.`, `PSObject`),
            new Parameter_js_3.Parameter(`Sender`, `Specifies the object that raises the event. The default is the PowerShell engine.`, `PSObject`),
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies a name for the new event. This parameter is required, and it must be unique in the session.


The value of this parameter appears in the SourceIdentifier property of the events.`, `String`),
        ], `Creates a new event.`, `New-Event [-SourceIdentifier] <String> [[-Sender] <PSObject>] [[-EventArguments] <PSObject[]>] [[-MessageData] <PSObject>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-FileCatalog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Guid`, [], `Creates a GUID.`, `New-Guid [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Item`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. To impersonate another > user or elevate your credentials when running this cmdlet, use "Invoke-Command".`, `PSCredential`),
            new Parameter_js_3.Parameter(`Force`, `Forces this cmdlet to create an item that writes over an existing read-only item. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md). Even using the Force parameter, the cmdlet cannot override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ItemType`, `Specifies the provider-specified type of the new item. The available values of this parameter depend on the current provider you are using.


If your location is in a "FileSystem" drive, the following values are allowed:


- File


- Directory


- SymbolicLink


- Junction


- HardLink




> [!NOTE] > Creating a "SymbolicLink" type on Windows requires elevation as administrator. However, Windows 10 > (build 14972 or newer) with Developer Mode enabled no longer requires elevation creating symbolic > links.


In a "Certificate" drive, these are the values you can specify:


- Certificate Provider


- Certificate


- Store


- StoreLocation



For more information see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the new item. You can specify the name of the new item in the Name or Path parameter value, and you can specify the path of the new item in Name or Path value. Items names passed using the Name parameter are created relative to the value of the Path parameter.`, `String`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of the location of the new item. The default is the current location when Path is omitted. You can specify the name of the new item in Name , or include it in Path . Items names passed using the Name parameter are created relative to the value of the Path parameter.


For this cmdlet, the Path parameter works like the LiteralPath parameter of other cmdlets. Wildcard characters are not interpreted. All characters are passed to the location's provider. The provider may not support all characters. For example, you cannot create a filename that contains an asterisk ("*") character.`, `String[]`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the value of the new item. You can also pipe a value to "New-Item".`, `Object`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates a new item.`, `New-Item [[-Path] <String[]>] [-Credential <PSCredential>] [-Force] [-ItemType <String>] -Name <String> [-Value <Object>] [-Confirm] [-WhatIf] [<CommonParameters>]

New-Item [[-Path] <String[]>] [-Credential <PSCredential>] [-Force] [-ItemType <String>] [-Value <Object>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to create a property on an object that cannot otherwise be accessed by the user. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a name for the new property. If the property is a registry entry, this parameter specifies the name of the entry.`, `String`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of the item. Wildcard characters are permitted. This parameter identifies the item to which this cmdlet adds the new property.`, `String[]`),
            new Parameter_js_3.Parameter(`PropertyType`, `Specifies the type of property that this cmdlet adds. The acceptable values for this parameter are:


- String : Specifies a null-terminated string. Equivalent to REG_SZ . - ExpandString : Specifies a null-terminated string that contains unexpanded references to   environment variables that are expanded when the value is retrieved. Equivalent to REG_EXPAND_SZ . - Binary : Specifies binary data in any form. Equivalent to REG_BINARY . - DWord : Specifies a 32-bit binary number. Equivalent to REG_DWORD . - MultiString : Specifies an array of null-terminated strings terminated by two null characters.   Equivalent to REG_MULTI_SZ . - Qword : Specifies a 64-bit binary number. Equivalent to REG_QWORD . - Unknown : Indicates an unsupported registry data type, such as REG_RESOURCE_LIST .`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the property value. If the property is a registry entry, this parameter specifies the value of the entry.`, `Object`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates a new property for an item and sets its value.`, `New-ItemProperty [-Name] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-PropertyType <String>] [-Value <Object>] [-Confirm] [-WhatIf] [<CommonParameters>]

New-ItemProperty [-Path] <String[]> [-Name] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PropertyType <String>] [-Value <Object>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-JobTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-LocalGroup`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-LocalUser`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Module`, [
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies an array of arguments which are parameter values that are passed to the script block.`, `Object[]`),
            new Parameter_js_3.Parameter(`AsCustomObject`, `Indicates that this cmdlet returns a custom object that represents the dynamic module. The module members are implemented as script methods of the custom object, but they are not imported into the session. You can save the custom object in a variable and use dot notation to invoke the members.


If the module has multiple members with the same name, such as a function and a variable that are both named A, only one member with each name can be accessed from the custom object.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Cmdlet`, `Specifies an array of cmdlets that this cmdlet exports from the module into the current session. Enter a comma-separated list of cmdlets. Wildcard characters are permitted. By default, all cmdlets in the module are exported.


You cannot define cmdlets in a script block, but a dynamic module can include cmdlets if it imports the cmdlets from a binary module.`, `String[]`),
            new Parameter_js_3.Parameter(`Function`, `Specifies an array of functions that this cmdlet exports from the module into the current session. Enter a comma-separated list of functions. Wildcard characters are permitted. By default, all functions defined in a module are exported.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a name for the new module. You can also pipe a module name to New-Module.


The default value is an autogenerated name that starts with " _DynamicModule " and is followed by a GUID that specifies the path of the dynamic module.`, `String`),
            new Parameter_js_3.Parameter(`ReturnResult`, `Indicates that this cmdlet runs the script block and returns the script block results instead of returning a module object.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ScriptBlock`, `Specifies the contents of the dynamic module. Enclose the contents in braces ( { } ) to create a script block. This parameter is required.`, `ScriptBlock`),
        ], `Creates a new dynamic module that exists only in memory.`, `New-Module [-Name] <String> [-ScriptBlock] <ScriptBlock> [-ArgumentList <Object[]>] [-AsCustomObject] [-Cmdlet <String[]>] [-Function <String[]>] [-ReturnResult] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ModuleManifest`, [
            new Parameter_js_3.Parameter(`AliasesToExport`, `Specifies the aliases that the module exports. Wildcards are permitted.


You can use this parameter to restrict the aliases that are exported by the module. It can remove aliases from the list of exported aliases, but it can't add aliases to the list.


If you omit this parameter, "New-ModuleManifest" creates an AliasesToExport key with a value of "*" (all), meaning that all aliases defined in the module are exported by the manifest.`, `String[]`),
            new Parameter_js_3.Parameter(`Author`, `Specifies the module author.


If you omit this parameter, "New-ModuleManifest" creates an Author key with the name of the current user.`, `String`),
            new Parameter_js_3.Parameter(`CLRVersion`, `Specifies the minimum version of the Common Language Runtime (CLR) of the Microsoft .NET Framework that the module requires.`, `Version`),
            new Parameter_js_3.Parameter(`CmdletsToExport`, `Specifies the cmdlets that the module exports. Wildcards are permitted.


You can use this parameter to restrict the cmdlets that are exported by the module. It can remove cmdlets from the list of exported cmdlets, but it can't add cmdlets to the list.


If you omit this parameter, "New-ModuleManifest" creates a CmdletsToExport key with a value of "*" (all), meaning that all cmdlets defined in the module are exported by the manifest.`, `String[]`),
            new Parameter_js_3.Parameter(`CompanyName`, `Identifies the company or vendor who created the module.


If you omit this parameter, "New-ModuleManifest" creates a CompanyName key with a value of "Unknown".`, `String`),
            new Parameter_js_3.Parameter(`CompatiblePSEditions`, `Specifies the module's compatible PSEditions. For information about PSEdition, see Modules with compatible PowerShell Editions (/powershell/scripting/gallery/concepts/module-psedition-support).`, `String[]`),
            new Parameter_js_3.Parameter(`Copyright`, `Specifies a copyright statement for the module.


If you omit this parameter, "New-ModuleManifest" creates a Copyright key with a value of "(c) <year> <username>. All rights reserved." where "<year>" is the current year and "<username>" is the value of the Author key.`, `String`),
            new Parameter_js_3.Parameter(`DefaultCommandPrefix`, `Specifies a prefix that is prepended to the nouns of all commands in the module when they're imported into a session. Enter a prefix string. Prefixes prevent command name conflicts in a user's session.


Module users can override this prefix by specifying the Prefix parameter of the "Import-Module" cmdlet.


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Description`, `Describes the contents of the module.`, `String`),
            new Parameter_js_3.Parameter(`DotNetFrameworkVersion`, `Specifies the minimum version of the Microsoft .NET Framework that the module requires.`, `Version`),
            new Parameter_js_3.Parameter(`DscResourcesToExport`, `Specifies the Desired State Configuration (DSC) resources that the module exports. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`ExternalModuleDependencies`, `A list of external modules that this module is depends on.`, `String[]`),
            new Parameter_js_3.Parameter(`FileList`, `Specifies all items that are included in the module.


This key is designed to act as a module inventory. The files listed in the key are included when the module is published, but any functions aren't automatically exported.`, `String[]`),
            new Parameter_js_3.Parameter(`FormatsToProcess`, `Specifies the formatting files (".ps1xml") that run when the module is imported.


When you import a module, PowerShell runs the "Update-FormatData" cmdlet with the specified files. Because formatting files aren't scoped, they affect all session states in the session.`, `String[]`),
            new Parameter_js_3.Parameter(`FunctionsToExport`, `Specifies the functions that the module exports. Wildcards are permitted.


You can use this parameter to restrict the functions that are exported by the module. It can remove functions from the list of exported aliases, but it can't add functions to the list.


If you omit this parameter, "New-ModuleManifest" creates an FunctionsToExport key with a value of "*" (all), meaning that all functions defined in the module are exported by the manifest.`, `String[]`),
            new Parameter_js_3.Parameter(`Guid`, `Specifies a unique identifier for the module. The GUID can be used to distinguish among modules with the same name.


If you omit this parameter, "New-ModuleManifest" creates a GUID key in the manifest and generates a GUID for the value.


To create a new GUID in PowerShell, type "[guid]::NewGuid()".`, `Guid`),
            new Parameter_js_3.Parameter(`HelpInfoUri`, `Specifies the internet address of the HelpInfo XML file for the module. Enter a Uniform Resource Identifier (URI) that begins with http or https .


The HelpInfo XML file supports the Updatable Help feature that was introduced in PowerShell 3.0. It contains information about the location of downloadable help files for the module and the version numbers of the newest help files for each supported locale.


For information about Updatable Help, see about_Updatable_Help (./About/about_Updatable_Help.md). For information about the HelpInfo XML file, see Supporting Updatable Help (/powershell/scripting/developer/module/supporting-updatable-help).


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`IconUri`, `Specifies the URL of an icon for the module. The specified icon is displayed on the gallery web page for the module.`, `Uri`),
            new Parameter_js_3.Parameter(`LicenseUri`, `Specifies the URL of licensing terms for the module.`, `Uri`),
            new Parameter_js_3.Parameter(`ModuleList`, `Lists all modules that are included in this module.


Enter each module name as a string or as a hash table with ModuleName and ModuleVersion keys. The hash table can also have an optional GUID key. You can combine strings and hash tables in the parameter value.


This key is designed to act as a module inventory. The modules that are listed in the value of this key aren't automatically processed.`, `Object[]`),
            new Parameter_js_3.Parameter(`ModuleVersion`, `Specifies the module's version.


This parameter isn't required, but a ModuleVersion key is required in the manifest. If you omit this parameter, "New-ModuleManifest" creates a ModuleVersion key with a value of 1.0.`, `Version`),
            new Parameter_js_3.Parameter(`NestedModules`, `Specifies script modules (".psm1") and binary modules (".dll") that are imported into the module's session state. The files in the NestedModules key run in the order in which they're listed in the value.


Enter each module name as a string or as a hash table with ModuleName and ModuleVersion keys. The hash table can also have an optional GUID key. You can combine strings and hash tables in the parameter value.


Typically, nested modules contain commands that the root module needs for its internal processing. By default, the commands in nested modules are exported from the module's session state into the caller's session state, but the root module can restrict the commands that it exports. For example, by using an "Export-ModuleMember" command.


Nested modules in the module session state are available to the root module, but they aren't returned by a "Get-Module" command in the caller's session state.


Scripts (".ps1") that are listed in the NestedModules key are run in the module's session state, not in the caller's session state. To run a script in the caller's session state, list the script file name in the value of the ScriptsToProcess key in the manifest.`, `Object[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Writes the resulting module manifest to the console and creates a ".psd1" file. By default, this cmdlet doesn't generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path and file name of the new module manifest. Enter a path and file name with a ".psd1" file name extension, such as "$pshome\\Modules\\MyModule\\MyModule.psd1". The Path parameter is required.


If you specify the path to an existing file, "New-ModuleManifest" replaces the file without warning unless the file has the read-only attribute.


The manifest should be located in the module's directory, and the manifest file name should be the same as the module directory name, but with a ".psd1" file name extension.


> [!NOTE] > You cannot use variables, such as "$PSHOME" or "$HOME", in response to a prompt for a Path > parameter value. To use a variable, include the Path parameter in the command.`, `String`),
            new Parameter_js_3.Parameter(`PowerShellHostName`, `Specifies the name of the PowerShell host program that the module requires. Enter the name of the host program, such as Windows PowerShell ISE Host or ConsoleHost . Wildcards aren't permitted.


To find the name of a host program, in the program, type "$Host.Name".`, `String`),
            new Parameter_js_3.Parameter(`PowerShellHostVersion`, `Specifies the minimum version of the PowerShell host program that works with the module. Enter a version number, such as 1.1.`, `Version`),
            new Parameter_js_3.Parameter(`PowerShellVersion`, `Specifies the minimum version of PowerShell that works with this module. For example, you can enter 1.0, 2.0, or 3.0 as the parameter's value.`, `Version`),
            new Parameter_js_3.Parameter(`Prerelease`, `Prerelease string of this module. Adding a Prerelease string identifies the module as a prerelease version. When the module is published to the PowerShell Gallery, this data is used to identify prerelease packages. To acquire prerelease packages from the Gallery, you must use the AllowPrerelease parameter with the PowerShellGet commands "Find-Module", "Install-Module", "Update-Module", and "Save-Module".`, `String`),
            new Parameter_js_3.Parameter(`PrivateData`, `Specifies data that is passed to the module when it's imported.`, `Object`),
            new Parameter_js_3.Parameter(`ProcessorArchitecture`, `Specifies the processor architecture that the module requires. Valid values are x86, AMD64, IA64, MSIL, and None (unknown or unspecified).`, `ProcessorArchitecture`),
            new Parameter_js_3.Parameter(`ProjectUri`, `Specifies the URL of a web page about this project.`, `Uri`),
            new Parameter_js_3.Parameter(`ReleaseNotes`, `Specifies release notes.`, `String`),
            new Parameter_js_3.Parameter(`RequiredAssemblies`, `Specifies the assembly (".dll") files that the module requires. Enter the assembly file names. PowerShell loads the specified assemblies before updating types or formats, importing nested modules, or importing the module file that is specified in the value of the RootModule key.


Use this parameter to list all the assemblies that the module requires, including assemblies that must be loaded to update any formatting or type files that are listed in the FormatsToProcess or TypesToProcess keys, even if those assemblies are also listed as binary modules in the NestedModules key.`, `String[]`),
            new Parameter_js_3.Parameter(`RequiredModules`, `Specifies modules that must be in the global session state. If the required modules aren't in the global session state, PowerShell imports them. If the required modules aren't available, the "Import-Module" command fails.


Enter each module name as a string or as a hash table with ModuleName and ModuleVersion keys. The hash table can also have an optional GUID key. You can combine strings and hash tables in the parameter value.


In PowerShell 2.0, "Import-Module" doesn't import required modules automatically. It just verifies that the required modules are in the global session state.`, `Object[]`),
            new Parameter_js_3.Parameter(`RequireLicenseAcceptance`, `Flag to indicate whether the module requires explicit user acceptance for install, update, orsave.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`RootModule`, `Specifies the primary or root file of the module. Enter the file name of a script (".ps1"), a script module (".psm1"), a module manifest(".psd1"), an assembly (".dll"), a cmdlet definition XML file (".cdxml"), or a workflow (".xaml"). When the module is imported, the members that are exported from the root module file are imported into the caller's session state.


If a module has a manifest file and no root file was designated in the RootModule key, the manifest becomes the primary file for the module, and the module becomes a manifest module (ModuleType = Manifest).


To export members from ".psm1" or ".dll" files in a module that has a manifest, the names of those files must be specified in the values of the RootModule or NestedModules keys in the manifest. Otherwise, their members aren't exported.


> [!NOTE] > In PowerShell 2.0, this key was called ModuleToProcess . You can use the RootModule > parameter name or its ModuleToProcess alias.`, `String`),
            new Parameter_js_3.Parameter(`ScriptsToProcess`, `Specifies script (".ps1") files that run in the caller's session state when the module is imported. You can use these scripts to prepare an environment, just as you might use a login script.


To specify scripts that run in the module's session state, use the NestedModules key.`, `String[]`),
            new Parameter_js_3.Parameter(`Tags`, `Specifies an array of tags.`, `String[]`),
            new Parameter_js_3.Parameter(`TypesToProcess`, `Specifies the type files (".ps1xml") that run when the module is imported.


When you import the module, PowerShell runs the "Update-TypeData" cmdlet with the specified files. Because type files aren't scoped, they affect all session states in the session.`, `String[]`),
            new Parameter_js_3.Parameter(`VariablesToExport`, `Specifies the variables that the module exports. Wildcards are permitted.


You can use this parameter to restrict the variables that are exported by the module. It can remove variables from the list of exported variables, but it can't add variables to the list.


If you omit this parameter, "New-ModuleManifest" creates a VariablesToExport key with a value of "*" (all), meaning that all variables defined in the module are exported by the manifest.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if "New-ModuleManifest" runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Creates a new module manifest.`, `New-ModuleManifest [-Path] <String> [-AliasesToExport <String[]>] [-Author <String>] [-CLRVersion <Version>] [-CmdletsToExport <String[]>] [-CompanyName <String>] [-CompatiblePSEditions {Desktop | Core}] [-Copyright <String>] [-DefaultCommandPrefix <String>] [-Description <String>] [-DotNetFrameworkVersion <Version>] [-DscResourcesToExport <String[]>] [-ExternalModuleDependencies <String[]>] [-FileList <String[]>] [-FormatsToProcess <String[]>] [-FunctionsToExport <String[]>] [-Guid <Guid>] [-HelpInfoUri <String>] [-IconUri <Uri>] [-LicenseUri <Uri>] [-ModuleList <Object[]>] [-ModuleVersion <Version>] [-NestedModules <Object[]>] [-PassThru] [-PowerShellHostName <String>] [-PowerShellHostVersion <Version>] [-PowerShellVersion <Version>] [-Prerelease <String>] [-PrivateData <Object>] [-ProcessorArchitecture {None | MSIL | X86 | IA64 | Amd64 | Arm}] [-ProjectUri <Uri>] [-ReleaseNotes <String>] [-RequiredAssemblies <String[]>] [-RequiredModules <Object[]>] [-RequireLicenseAcceptance] [-RootModule <String>] [-ScriptsToProcess <String[]>] [-Tags <String[]>] [-TypesToProcess <String[]>] [-VariablesToExport <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecAuthProposal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecMainModeCryptoProposal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-NetIPsecQuickModeCryptoProposal`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Object`, [
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies an array of arguments to pass to the constructor of the .NET Framework class. If the constructor takes a single parameter that is an array, you must wrap that parameter inside another array. For example:


"$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate -ArgumentList (,$bytes)"


The alias for ArgumentList is Args .`, `Object[]`),
            new Parameter_js_3.Parameter(`ComObject`, `Specifies the programmatic identifier (ProgID) of the COM object.`, `String`),
            new Parameter_js_3.Parameter(`Property`, `Sets property values and invokes methods of the new object.


Enter a hash table in which the keys are the names of properties or methods and the values are property values or method arguments. "New-Object" creates the object and sets each property value and invokes each method in the order that they appear in the hash table.


If the new object is derived from the PSObject class, and you specify a property that does not exist on the object, "New-Object" adds the specified property to the object as a NoteProperty. If the object is not a PSObject , the command generates a non-terminating error.`, `IDictionary`),
            new Parameter_js_3.Parameter(`Strict`, `Indicates that the cmdlet generates a non-terminating error when a COM object that you attempt to create uses an interop assembly. This feature distinguishes actual COM objects from .NET Framework objects with COM-callable wrappers.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`TypeName`, `Specifies the fully qualified name of the .NET Framework class. You cannot specify both the TypeName parameter and the ComObject parameter.`, `String`),
        ], `Creates an instance of a Microsoft .NET Framework or COM object.`, `New-Object [-TypeName] <String> [[-ArgumentList] <Object[]>] [-Property <IDictionary>] [<CommonParameters>]

New-Object [-ComObject] <String> [-Property <IDictionary>] [-Strict] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PmemDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ProvisioningRepro`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSDrive`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to do this action. The default is the current user.


Since PowerShell 3.0, when the value of the Root parameter is a UNC path, you can use credentials to create file system drives.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Description`, `Specifies a brief text description of the drive. Type any string.


To see the descriptions of all the session's drives, "Get-PSDrive | Format-Table Name, Description".


To see the description of a particular drive, type "(Get-PSDrive <DriveName>).Description".`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a name for the new drive. For persistent mapped network drives, use a drive letter. For temporary PowerShell drives, you aren't limited to drive letters, use any valid string.`, `String`),
            new Parameter_js_3.Parameter(`Persist`, `Indicates that this cmdlet creates a Windows mapped network drive. The Persist parameter is only available on Windows.


Mapped network drives are saved in Windows on the local computer. They're persistent, not session-specific, and can be viewed and managed in File Explorer and other tools.


When you scope the command locally, without dot-sourcing, the Persist parameter doesn't persist the creation of a PSDrive beyond the scope in which you run the command. If you run "New-PSDrive" inside a script, and you want the new drive to persist indefinitely, you must dot-source the script. For best results, to force a new drive to persist, specify Global as the value of the Scope parameter and include Persist in your command.


The name of the drive must be a letter, such as "D" or "E". The value of Root parameter must be a UNC path of a different computer. The PSProvider parameter's value must be "FileSystem".


To disconnect a Windows mapped network drive, use the "Remove-PSDrive" cmdlet. When you disconnect a Windows mapped network drive, the mapping is permanently deleted from the computer, not just deleted from the current session.


Mapped network drives are specific to a user account. Mapped drives created in elevated sessions or sessions using the credential of another user aren't visible in sessions started using different credentials.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PSProvider`, `Specifies the PowerShell provider that supports drives of this kind.


For example, if the drive is associated with a network share or file system directory, the PowerShell provider is "FileSystem". If the drive is associated with a registry key, the provider is "Registry".


Temporary PowerShell drives can be associated with any PowerShell provider. Mapped network drives can be associated only with the "FileSystem" provider.


To see a list of the providers in your PowerShell session, use the "Get-PSProvider" cmdlet.`, `String`),
            new Parameter_js_3.Parameter(`Root`, `Specifies the data store location to which a PowerShell drive is mapped.


For example, specify a network share, such as "\\Server01\\Public", a local directory, such as "C:\\Program Files", or a registry key, such as "HKLM:\\Software\\Microsoft".


Temporary PowerShell drives can be associated with a local or remote location on any supported provider drive. Mapped network drives can be associated only with a file system location on a remote computer.`, `String`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies a scope for the drive. The acceptable values for this parameter are: Global , Local , and Script , or a number relative to the current scope. Scopes number 0 through the number of scopes. The current scope number is 0 and its parent is 1. For more information, see about_Scopes (../Microsoft.PowerShell.Core/About/about_Scopes.md).`, `String`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Creates temporary and persistent mapped network drives.`, `New-PSDrive [-Name] <String> [-PSProvider] <String> [-Root] <String> [-Confirm] [-Credential <PSCredential>] [-Description <String>] [-Persist] [-Scope <String>] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSRoleCapabilityFile`, [
            new Parameter_js_3.Parameter(`AliasDefinitions`, `Adds the specified aliases to sessions that use the role capability file. Enter a hash table with the following keys:


- Name. Name of the alias. This key is required.


- Value. The command that the alias represents. This key is required.


- Description. A text string that describes the alias. This key is optional.


- Options. Alias options. This key is optional. The default value is None. The acceptable values for


this parameter are: None, ReadOnly, Constant, Private, or AllScope.


For example: "@{Name="hlp";Value="Get-Help";Description="Gets help";Options="ReadOnly"}"`, `IDictionary[]`),
            new Parameter_js_3.Parameter(`AssembliesToLoad`, `Specifies the assemblies to load into the sessions that use the role capability file.`, `String[]`),
            new Parameter_js_3.Parameter(`Author`, `Specifies the user that created the role capability file.`, `String`),
            new Parameter_js_3.Parameter(`CompanyName`, `Identifies the company that created the role capability file. The default value is Unknown.`, `String`),
            new Parameter_js_3.Parameter(`Copyright`, `Specifies a copyright for the role capability file. If you omit this parameter, "New-PSRoleCapabilityFile" generates a copyright statement by using the value of the Author parameter.`, `String`),
            new Parameter_js_3.Parameter(`Description`, `Specifies a description for the role capability file.`, `String`),
            new Parameter_js_3.Parameter(`EnvironmentVariables`, `Specifies the environment variables for sessions that expose this role capability file. Enter a hash table in which the keys are the environment variable names and the values are the environment variable values.


For example: "EnvironmentVariables=@{TestShare="\\Server01\\TestShare"}"`, `IDictionary`),
            new Parameter_js_3.Parameter(`FormatsToProcess`, `Specifies the formatting files (.ps1xml) that run in sessions that use the role capability file. The value of this parameter must be a full or absolute path of the formatting files.`, `String[]`),
            new Parameter_js_3.Parameter(`FunctionDefinitions`, `Adds the specified functions to sessions that expose the role capability. Enter a hash table with the following keys:


- Name. Name of the function. This key is required.


- ScriptBlock. Function body. Enter a script block. This key is required.


- Options. Function options. This key is optional. The default value is None. The acceptable values


for this parameter are: are None, ReadOnly, Constant, Private, or AllScope.


For example:


"@{Name="Get-PowerShellProcess";ScriptBlock={Get-Process PowerShell};Options="AllScope"}"`, `IDictionary[]`),
            new Parameter_js_3.Parameter(`Guid`, `Specifies a unique identifier for the role capability file. If you omit this parameter, "New-PSRoleCapabilityFile" generates a GUID for the file. To create a new GUID in PowerShell, type "[guid]::NewGuid()".`, `Guid`),
            new Parameter_js_3.Parameter(`ModulesToImport`, `Specifies the modules that are automatically imported into sessions that use the role capability file. By default, all the commands in listed modules are visible. When used with VisibleCmdlets or VisibleFunctions , the commands visible from the specified modules can be restricted.


Each module used in the value of this parameter can be represented by a string or by a hash table. A module string consists only of the name of the module. A module hash table can include ModuleName , ModuleVersion , and GUID keys. Only the ModuleName key is required.


For example, the following value consists of a string and a hash table. Any combination of strings and hash tables, in any order, is valid.


""TroubleshootingPack", @{ModuleName="PSDiagnostics"; ModuleVersion="1.0.0.0";GUID="c61d6278-02a3-4618-ae37-a524d40a7f44"}"`, `Object[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path and filename of the role capability file. The file must have a ".psrc" filename extension.`, `String`),
            new Parameter_js_3.Parameter(`ScriptsToProcess`, `Specifies scripts to add to sessions that use the role capability file. Enter the path and file names of the scripts. The value of this parameter must be a full or absolute path of the script file names.`, `String[]`),
            new Parameter_js_3.Parameter(`TypesToProcess`, `Specifies type files (.ps1xml) to add to sessions that use the role capability file. Enter the type filenames. The value of this parameter must be a full or absolute path of the type filenames.`, `String[]`),
            new Parameter_js_3.Parameter(`VariableDefinitions`, `Specifies variables to add to sessions that use the role capability file. Enter a hash table with the following keys:


- Name. Name of the variable. This key is required.


- Value. Variable value. This key is required.


- Options. Variable options. This key is optional. The default value is None. The acceptable values


for this parameter are: are None, ReadOnly, Constant, Private, or AllScope.


For example: "@{Name="WarningPreference";Value="SilentlyContinue";Options="AllScope"}"`, `Object`),
            new Parameter_js_3.Parameter(`VisibleAliases`, `Limits the aliases in the session to those aliases specified in the value of this parameter, plus any aliases that you define in the AliasDefinition parameter. Wildcard characters are supported. By default, all aliases that are defined by the PowerShell engine and all aliases that modules export are visible in the session.


For example, to limit the available aliases to gm and gcm use this syntax: "VisibleAliases="gcm", "gp""


When any Visible parameter is included in the role capability file, PowerShell removes the "Import-Module" cmdlet and its "ipmo" alias from the session.`, `String[]`),
            new Parameter_js_3.Parameter(`VisibleCmdlets`, `Limits the cmdlets in the session to those specified in the value of this parameter. Wildcard characters and Module Qualified Names are supported.


By default, all cmdlets that the modules in the session export are visible in the session. Use the SessionType and ModulesToImport parameters to determine which modules and snap-ins are imported into the session. If no modules in ModulesToImport expose the cmdlet, "New-PSRoleCapabilityFile" tries to load the appropriate module.


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its "ipmo" alias from the session.`, `Object[]`),
            new Parameter_js_3.Parameter(`VisibleExternalCommands`, `Limits the external binaries, scripts and commands that can be executed in the session to those specified in the value of this parameter.


By default, no external commands are visible in this session.


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its "ipmo" alias from the session.`, `String[]`),
            new Parameter_js_3.Parameter(`VisibleFunctions`, `Limits the functions in the session to those specified in the value of this parameter, plus any functions that you define in the FunctionDefinitions parameter. Wildcard characters are supported.


By default, all functions exported by modules in the session are visible in that session. Use the SessionType and ModulesToImport parameters to determine which modules are imported into the session.


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its "ipmo" alias from the session.`, `Object[]`),
            new Parameter_js_3.Parameter(`VisibleProviders`, `Limits the PowerShell providers in the session to those specified in the value of this parameter. Wildcard characters are supported.


By default, all providers exported by a module in the session are visible in the session. Use the SessionType and ModulesToImport parameters to determine which modules are imported into the session.


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its "ipmo" alias from the session.`, `String[]`),
        ], `Creates a file that defines a set of capabilities to be exposed through a session configuration.`, `New-PSRoleCapabilityFile [-Path] <String> [-AliasDefinitions <IDictionary[]>] [-AssembliesToLoad <String[]>] [-Author <String>] [-CompanyName <String>] [-Copyright <String>] [-Description <String>] [-EnvironmentVariables <IDictionary>] [-FormatsToProcess <String[]>] [-FunctionDefinitions <IDictionary[]>] [-Guid <Guid>] [-ModulesToImport <Object[]>] [-ScriptsToProcess <String[]>] [-TypesToProcess <String[]>] [-VariableDefinitions <Object>] [-VisibleAliases <String[]>] [-VisibleCmdlets <Object[]>] [-VisibleExternalCommands <String[]>] [-VisibleFunctions <Object[]>] [-VisibleProviders <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSSession`, [
            new Parameter_js_3.Parameter(`AllowRedirection`, `Indicates that this cmdlet allows redirection of this connection to an alternate Uniform Resource Identifier (URI).


When you use the ConnectionURI parameter, the remote destination can return an instruction to redirect to a different URI. By default, PowerShell does not redirect connections, but you can use this parameter to enable it to redirect the connection.


You can also limit the number of times the connection is redirected by changing the MaximumConnectionRedirectionCount session option value. Use the MaximumRedirection parameter of the "New-PSSessionOption" cmdlet or set the MaximumConnectionRedirectionCount property of the $PSSessionOption preference variable. The default value is 5.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ApplicationName`, `Specifies the application name segment of the connection URI. Use this parameter to specify the application name when you are not using the ConnectionURI parameter in the command.


The default value is the value of the "$PSSessionApplicationName" preference variable on the local computer. If this preference variable is not defined, the default value is WSMAN. This value is appropriate for most uses. For more information, see about_Preference_Variables (About/about_Preference_Variables.md).


The WinRM service uses the application name to select a listener to service the connection request. The value of this parameter should match the value of the URLPrefix property of a listener on the remote computer.`, `String`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the mechanism that is used to authenticate the user's credentials. The acceptable values for this parameter are:


- Default


- Basic


- Credssp


- Digest


- Kerberos


- Negotiate


- NegotiateWithImplicitCredential




The default value is Default.


For more information about the values of this parameter, see AuthenticationMechanism Enumeration (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).

> [!CAUTION] > Credential Security Support Provider (CredSSP) authentication, in which the user credentials are > passed to a remote computer to be authenticated, is designed for commands that require > authentication on more than one resource, such as accessing a remote network share. This mechanism > increases the security risk of the remote operation. If the remote computer is compromised, the > credentials that are passed to it can be used to control the network session.`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.


Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.


To get a certificate, use the "Get-Item" or "Get-ChildItem" command in the PowerShell Cert: drive.`, `String`),
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies an array of names of computers. This cmdlet creates a persistent connection ( PSSession ) to the specified computer. If you enter multiple computer names, "New-PSSession" creates multiple PSSession objects, one for each computer. The default is the local computer.


Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more remote computers. To specify the local computer, type the computer name, localhost, or a dot (.). When the computer is in a different domain than the user, the fully qualified domain name is required. You can also pipe a computer name, in quotation marks, to "New-PSSession".


To use an IP address in the value of the ComputerName parameter, the command must include the Credential parameter. Also, the computer must be configured for HTTPS transport or the IP address of the remote computer must be included in the WinRM TrustedHosts list on the local computer. For instructions for adding a computer name to the TrustedHosts list, see "How to Add a Computer to the Trusted Host List" in about_Remote_Troubleshooting (about/about_Remote_Troubleshooting.md).


To include the local computer in the value of the ComputerName parameter, start Windows PowerShell by using the Run as administrator option.`, `String[]`),
            new Parameter_js_3.Parameter(`ConfigurationName`, `Specifies the session configuration that is used for the new PSSession .


Enter a configuration name or the fully qualified resource URI for a session configuration. If you specify only the configuration name, the following schema URI is prepended: "https://schemas.microsoft.com/PowerShell".


The session configuration for a session is located on the remote computer. If the specified session configuration does not exist on the remote computer, the command fails.


The default value is the value of the "$PSSessionConfigurationName" preference variable on the local computer. If this preference variable is not set, the default is Microsoft.PowerShell. For more information, see about_Preference_Variables (About/about_Preference_Variables.md).`, `String`),
            new Parameter_js_3.Parameter(`ConnectionUri`, `Specifies a URI that defines the connection endpoint for the session. The URI must be fully qualified. The format of this string is as follows:


"<Transport>://<ComputerName>:<Port>/<ApplicationName>"


The default value is as follows:


"http://localhost:5985/WSMAN"


If you do not specify a ConnectionURI , you can use the UseSSL , ComputerName , Port , and ApplicationName parameters to specify the ConnectionURI values.


Valid values for the Transport segment of the URI are HTTP and HTTPS. If you specify a connection URI with a Transport segment, but do not specify a port, the session is created with standards ports: 80 for HTTP and 443 for HTTPS. To use the default ports for PowerShell remoting, specify port 5985 for HTTP or 5986 for HTTPS.


If the destination computer redirects the connection to a different URI, PowerShell prevents the redirection unless you use the AllowRedirection parameter in the command.`, `Uri[]`),
            new Parameter_js_3.Parameter(`ContainerId`, `Specifies an array of IDs of containers. This cmdlet starts an interactive session with each of the specified containers. Use the "docker ps" command to get a list of container IDs. For more information, see the help for the docker ps (https://docs.docker.com/engine/reference/commandline/ps/)command.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to do this action. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`EnableNetworkAccess`, `Indicates that this cmdlet adds an interactive security token to loopback sessions. The interactive token lets you run commands in the loopback session that get data from other computers. For example, you can run a command in the session that copies XML files from a remote computer to the local computer.


A loopback session is a PSSession that originates and ends on the same computer. To create a loopback session, omit the ComputerName parameter or set its value to dot (.), localhost, or the name of the local computer.


By default, this cmdlet creates loopback sessions by using a network token, which might not provide sufficient permission to authenticate to remote computers.


The EnableNetworkAccess parameter is effective only in loopback sessions. If you use EnableNetworkAccess when you create a session on a remote computer, the command succeeds, but the parameter is ignored.


You can also enable remote access in a loopback session by using the CredSSP value of the Authentication parameter, which delegates the session credentials to other computers.


To protect the computer from malicious access, disconnected loopback sessions that have interactive tokens, which are those created by using the EnableNetworkAccess parameter, can be reconnected only from the computer on which the session was created. Disconnected sessions that use CredSSP authentication can be reconnected from other computers. For more information, see "Disconnect-PSSession".


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`HostName`, `Specifies an array of computer names for a Secure Shell (SSH) based connection. This is similar to the ComputerName parameter except that the connection to the remote computer is made using SSH rather than Windows WinRM.


This parameter was introduced in PowerShell 6.0.`, `String[]`),
            new Parameter_js_3.Parameter(`KeyFilePath`, `Specifies a key file path used by Secure Shell (SSH) to authenticate a user on a remote computer.


SSH allows user authentication to be performed via private/public keys as an alternative to basic password authentication. If the remote computer is configured for key authentication then this parameter can be used to provide the key that identifies the user.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a friendly name for the PSSession .


You can use the name to refer to the PSSession when you use other cmdlets, such as "Get-PSSession" and "Enter-PSSession". The name is not required to be unique to the computer or the current session.`, `String[]`),
            new Parameter_js_3.Parameter(`Port`, `Specifies the network port on the remote computer that is used for this connection. To connect to a remote computer, the remote computer must be listening on the port that the connection uses. The default ports are 5985, which is the WinRM port for HTTP, and 5986, which is the WinRM port for HTTPS.


Before using another port, you must configure the WinRM listener on the remote computer to listen at that port. Use the following commands to configure the listener:


1. "winrm delete winrm/config/listener?Address=*+Transport=HTTP" 2. "winrm create winrm/config/listener?Address=*+Transport=HTTP @{Port="<port-number>"}"


Do not use the Port parameter unless you must. The port setting in the command applies to all computers or sessions on which the command runs. An alternate port setting might prevent the command from running on all computers.`, `Int32`),
            new Parameter_js_3.Parameter(`RunAsAdministrator`, `Indicates that the PSSession runs as administrator.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Session`, `Specifies an array of PSSession objects that this cmdlet uses as a model for the new PSSession . This parameter creates new PSSession objects that have the same properties as the specified PSSession objects.


Enter a variable that contains the PSSession objects or a command that creates or gets the PSSession objects, such as a "New-PSSession" or "Get-PSSession" command.


The resulting PSSession objects have the same computer name, application name, connection URI, port, configuration name, throttle limit, and Secure Sockets Layer (SSL) value as the originals, but they have a different display name, ID, and instance ID (GUID).`, `PSSession[]`),
            new Parameter_js_3.Parameter(`SessionOption`, `Specifies advanced options for the session. Enter a SessionOption object, such as one that you create by using the "New-PSSessionOption" cmdlet, or a hash table in which the keys are session option names and the values are session option values.


The default values for the options are determined by the value of the "$PSSessionOption" preference variable, if it is set. Otherwise, the default values are established by options set in the session configuration.


The session option values take precedence over default values for sessions set in the "$PSSessionOption" preference variable and in the session configuration. However, they do not take precedence over maximum values, quotas or limits set in the session configuration.


For a description of the session options that includes the default values, see "New-PSSessionOption". For information about the "$PSSessionOption" preference variable, see about_Preference_Variables (About/about_Preference_Variables.md). For more information about session configurations, see about_Session_Configurations (About/about_Session_Configurations.md).`, `PSSessionOption`),
            new Parameter_js_3.Parameter(`SSHConnection`, `This parameter takes an array of hashtables where each hashtable contains one or more connection parameters needed to establish a Secure Shell (SSH) connection (HostName, Port, UserName, KeyFilePath).


The hashtable connection parameters are the same as defined for the HostName parameter set.


The SSHConnection parameter is useful for creating multiple sessions where each session requires different connection information.


This parameter was introduced in PowerShell 6.0.`, `Hashtable[]`),
            new Parameter_js_3.Parameter(`SSHTransport`, `Indicates that the remote connection is established using Secure Shell (SSH).


By default PowerShell uses Windows WinRM to connect to a remote computer. This switch forces PowerShell to use the HostName parameter set for establishing an SSH based remote connection.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ThrottleLimit`, `Specifies the maximum number of concurrent connections that can be established to run this command. If you omit this parameter or enter a value of 0 (zero), the default value, 32, is used.


The throttle limit applies only to the current command, not to the session or to the computer.`, `Int32`),
            new Parameter_js_3.Parameter(`UserName`, `Specifies the user name for the account used to create a session on the remote computer. User authentication method will depend on how Secure Shell (SSH) is configured on the remote computer.


If SSH is configured for basic password authentication then you will be prompted for the user password.


If SSH is configured for key based user authentication then a key file path can be provided via the KeyFilePath parameter and no password prompt will occur. Note that if the client user key file is located in an SSH known location then the KeyFilePath parameter is not needed for key based authentication, and user authentication will occur automatically based on the user name. See SSH documentation about key based user authentication for more information.


This is not a required parameter. If no UserName parameter is specified then the current log on user name is used for the connection.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`UseSSL`, `Indicates that this cmdlet uses the SSL protocol to establish a connection to the remote computer. By default, SSL is not used.


WS-Management encrypts all PowerShell content transmitted over the network. The UseSSL parameter offers an additional protection that sends the data across an HTTPS connection instead of an HTTP connection.


If you use this parameter, but SSL is not available on the port that is used for the command, the command fails.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`VMId`, `Specifies an array of ID of virtual machines. This cmdlet starts an interactive session with each of the specified virtual machines. To see the virtual machines that are available to you, use the following command:


"Get-VM | Select-Object -Property Name, ID"`, `Guid[]`),
            new Parameter_js_3.Parameter(`VMName`, `Specifies an array of names of virtual machines. This cmdlet starts an interactive session with each of the specified virtual machines. To see the virtual machines that are available to you, use the "Get-VM" cmdlet.`, `String[]`),
            new Parameter_js_3.Parameter(`HostName`, `Specifies an array of computer names for a Secure Shell (SSH) based connection. This is similar to the ComputerName parameter except that the connection to the remote computer is made using SSH rather than Windows WinRM. This parameter supports specifying the user name and/or port as part of the host name parameter value using the form "user@hostname:port". The user name and/or port specified as part of the host name takes precedence over the "-UserName" and "-Port" parameters, if specified. This allows passing multiple computer names to this parameter where some have specific user names and/or ports, while others use the user name and/or port from the "-UserName" and "-Port" parameters.


This parameter was introduced in PowerShell 6.0.`, `String[]`),
            new Parameter_js_3.Parameter(`KeyFilePath`, `Specifies a key file path used by Secure Shell (SSH) to authenticate a user on a remote computer.


SSH allows user authentication to be performed via private/public keys as an alternative to basic password authentication. If the remote computer is configured for key authentication then this parameter can be used to provide the key that identifies the user.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`SSHTransport`, `Indicates that the remote connection is established using Secure Shell (SSH).


By default PowerShell uses Windows WinRM to connect to a remote computer. This switch forces PowerShell to use the HostName parameter set for establishing an SSH based remote connection.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UserName`, `Specifies the user name for the account used to create a session on the remote computer. User authentication method will depend on how Secure Shell (SSH) is configured on the remote computer.


If SSH is configured for basic password authentication then you will be prompted for the user password.


If SSH is configured for key based user authentication then a key file path can be provided via the KeyFilePath parameter and no password prompt will occur. Note that if the client user key file is located in an SSH known location then the KeyFilePath parameter is not needed for key based authentication, and user authentication will occur automatically based on the user name. See SSH documentation about key based user authentication for more information.


This is not a required parameter. If no UserName parameter is specified then the current log on user name is used for the connection.


This parameter was introduced in PowerShell 6.0.`, `String`),
            new Parameter_js_3.Parameter(`SSHConnection`, `This parameter takes an array of hashtables where each hashtable contains one or more connection parameters needed to establish a Secure Shell (SSH) connection (HostName, Port, UserName, KeyFilePath, Subsystem).


The hashtable connection parameters are the same as defined for the HostName parameter set. Note that the order of the keys in the hashtable result in user name and port being used for the connection where the last one specified is used.  For example, if you use "@{UserName="first";HostName="second@host"}", then the user name "second" will be used.  However, if you use "@{HostName="second@host:22";Port=23}", then port 23 will be used.


This parameter was introduced in PowerShell 6.0.


The SSHConnection parameter is useful for creating multiple sessions where each session requires different connection information.`, `hashtable`),
            new Parameter_js_3.Parameter(`Subsystem`, `Specifies the SSH subsystem used for the new PSSession .


This specifies the subsystem to use on the target as defined in sshd_config. The subsystem starts a specific version of PowerShell with predefined parameters. If the specified subsystem does not exist on the remote computer, the command fails.


If this parameter is not used, the default is the 'powershell' subsystem.`, `String`),
        ], `Creates a persistent connection to a local or remote computer.`, `New-PSSession [-ConnectionUri] <Uri[]> [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-EnableNetworkAccess] [-Name <String[]>] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [<CommonParameters>]

New-PSSession [[-ComputerName] <String[]>] [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-EnableNetworkAccess] [-Name <String[]>] [-Port <Int32>] [-SessionOption <PSSessionOption>] [-ThrottleLimit <Int32>] [-UseSSL] [<CommonParameters>]

New-PSSession [-VMId] <Guid[]> [-ConfigurationName <String>] [-Credential <PSCredential>] [-Name <String[]>] [-ThrottleLimit <Int32>] [<CommonParameters>]

New-PSSession [-ConfigurationName <String>] [-Credential <PSCredential>] [-Name <String[]>] [-ThrottleLimit <Int32>] -VMName <String[]> [<CommonParameters>]

New-PSSession [-ConfigurationName <String>] -ContainerId <String[]> [-Name <String[]>] [-RunAsAdministrator] [-ThrottleLimit <Int32>] [<CommonParameters>]

New-PSSession [[-Session] <PSSession[]>] [-EnableNetworkAccess] [-Name <String[]>] [-ThrottleLimit <Int32>] [<CommonParameters>]

New-PSSession [-HostName] <String[]> [-KeyFilePath <String>] [-Name <String[]>] [-Port <Int32>] [-SSHTransport {true}] [-UserName <String>] [<CommonParameters>]

New-PSSession [-Name <String[]>] -SSHConnection <Hashtable[]> [<CommonParameters>]

New-PSSession [-HostName] <String[]> [-Name <String[]>] [-KeyFilePath <String>] [-SSHTransport] [-UserName <String>] [-Subsystem <String>] [<CommonParameters>]

New-PSSession [-Name <String[]>] -SSHConnection <hashtable> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSSessionConfigurationFile`, [
            new Parameter_js_3.Parameter(`AliasDefinitions`, `Adds the specified aliases to sessions that use the session configuration. Enter a hash table with the following keys:


- Name - Name of the alias. This key is required.


- Value - The command that the alias represents. This key is required.


- Description - A text string that describes the alias. This key is optional.


- Options - Alias options. This key is optional. The default value is None . The acceptable   values for this parameter are: None, ReadOnly, Constant, Private, or AllScope.


For example: "@{Name='hlp';Value='Get-Help';Description='Gets help';Options='ReadOnly'}"`, `IDictionary[]`),
            new Parameter_js_3.Parameter(`AssembliesToLoad`, `Specifies the assemblies to load into the sessions that use the session configuration.`, `String[]`),
            new Parameter_js_3.Parameter(`Author`, `Specifies the author of the session configuration or the configuration file. The default is the current user. The value of this parameter is visible in the session configuration file, but it is not a property of the session configuration object.`, `String`),
            new Parameter_js_3.Parameter(`CompanyName`, `Specifies the company that created the session configuration or the configuration file. The default value is Unknown . The value of this parameter is visible in the session configuration file, but it is not a property of the session configuration object.`, `String`),
            new Parameter_js_3.Parameter(`Copyright`, `Specifies a copyright the session configuration file. The value of this parameter is visible in the session configuration file, but it is not a property of the session configuration object.


If you omit this parameter, "New-PSSessionConfigurationFile" generates a copyright statement by using the value of the Author parameter.`, `String`),
            new Parameter_js_3.Parameter(`Description`, `Specifies a description of the session configuration or the session configuration file. The value of this parameter is visible in the session configuration file, but it is not a property of the session configuration object.`, `String`),
            new Parameter_js_3.Parameter(`EnvironmentVariables`, `Adds environment variables to the session. Enter a hash table in which the keys are the environment variable names and the values are the environment variable values.


For example: "EnvironmentVariables=@{TestShare='\\Server01\\TestShare'}"`, `IDictionary`),
            new Parameter_js_3.Parameter(`ExecutionPolicy`, `Specifies the execution policy of sessions that use the session configuration. If you omit this parameter, the value of the ExecutionPolicy key in the session configuration file is Restricted . For information about execution policies in PowerShell, see about_Execution_Policies (about/about_Execution_Policies.md).`, `ExecutionPolicy`),
            new Parameter_js_3.Parameter(`FormatsToProcess`, `Specifies the formatting files (.ps1xml) that run in sessions that use the session configuration. The value of this parameter must be a full or absolute path of the formatting files.`, `String[]`),
            new Parameter_js_3.Parameter(`Full`, `Indicates that this operation includes all possible configuration properties in the session configuration file.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FunctionDefinitions`, `Adds the specified functions to sessions that use the session configuration. Enter a hash table with the following keys:


- Name - Name of the function. This key is required.


- ScriptBlock - Function body. Enter a script block. This key is required.


- Options - Function options. This key is optional. The default value is None . The acceptable   values for this parameter are: None, ReadOnly, Constant, Private, or AllScope.


For example: "@{Name='Get-PowerShellProcess';ScriptBlock={Get-Process PowerShell};Options='AllScope'}"`, `IDictionary[]`),
            new Parameter_js_3.Parameter(`GroupManagedServiceAccount`, `Configures sessions using this session configuration to run under the context of the specified Group Managed Service Account. The machine where this session configuration is registered must have permission to request the gMSA password in order for sessions to be created successfully. This field cannot be used with the RunAsVirtualAccount parameter.`, `String`),
            new Parameter_js_3.Parameter(`Guid`, `Specifies a unique identifier for the session configuration file. If you omit this parameter, "New-PSSessionConfigurationFile" generates a GUID for the file. To create a new GUID in PowerShell, type "New-Guid".`, `Guid`),
            new Parameter_js_3.Parameter(`LanguageMode`, `Determines which elements of the PowerShell language are permitted in sessions that use this session configuration. You can use this parameter to restrict the commands that particular users can run on the computer.


The acceptable values for this parameter are:


- FullLanguage - All language elements are permitted.


- ConstrainedLanguage - Commands that contain scripts to be evaluated are not allowed. The


ConstrainedLanguage mode restricts user access to Microsoft .NET Framework types, objects, or   methods. - NoLanguage - Users may run cmdlets and functions, but are not permitted to use any language   elements, such as script blocks, variables, or operators. - RestrictedLanguage - Users may run cmdlets and functions, but are not permitted to use script   blocks or variables except for the following permitted variables: "$PSCulture", "$PSUICulture",   "$True", "$False", and "$Null". Users may use only the basic comparison operators ("-eq", "-gt",   "-lt"). Assignment statements, property references, and method calls are not permitted.


The default value of the LanguageMode parameter depends on the value of the SessionType parameter.


- Empty - NoLanguage


- RestrictedRemoteServer - NoLanguage


- Default - FullLanguage`, `PSLanguageMode`),
            new Parameter_js_3.Parameter(`ModulesToImport`, `Specifies the modules and snap-ins that are automatically imported into sessions that use the session configuration.


By default, only the Microsoft.PowerShell.Core snap-in is imported into remote sessions, but unless the cmdlets are excluded, users can use the "Import-Module" and "Add-PSSnapin" cmdlets to add modules and snap-ins to the session.


Each module or snap-in in the value of this parameter can be represented by a string or as a hash table. A module string consists only of the name of the module or snap-in. A module hash table can include ModuleName , ModuleVersion , and GUID keys. Only the ModuleName key is required.


For example, the following value consists of a string and a hash table. Any combination of strings and hash tables, in any order, is valid.


"'TroubleshootingPack', @{ModuleName='PSDiagnostics'; ModuleVersion='1.0.0.0';GUID='c61d6278-02a3-4618-ae37-a524d40a7f44'}"


The value of the ModulesToImport parameter of the "Register-PSSessionConfiguration" cmdlet takes precedence over the value of the ModulesToImport key in the session configuration file.`, `Object[]`),
            new Parameter_js_3.Parameter(`MountUserDrive`, `Configures sessions that use this session configuration to expose the "User:" PSDrive. User drives are unique for each connecting user and allow users to copy data to/from PowerShell endpoints even if the File System provider is not exposed. User drive roots are created under "$env:LOCALAPPDATA\\Microsoft\\Windows\\PowerShell\\DriveRoots".


Contents in the user drive persist across user sessions and are not automatically removed. By default, users can only store up to 50MB of data in the user drive. This can be customized with the UserDriveMaximumSize parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path and filename of the session configuration file. The file must have a ".pssc" file name extension.`, `String`),
            new Parameter_js_3.Parameter(`PowerShellVersion`, `Specifies the version of the PowerShell engine in sessions that use the session configuration. The acceptable values for this parameter are: 2.0 and 3.0. If you omit this parameter, the PowerShellVersion key is commented-out and newest version of PowerShell runs in the session.


The value of the PSVersion parameter of the "Register-PSSessionConfiguration" cmdlet takes precedence over the value of the PowerShellVersion key in the session configuration file.`, `Version`),
            new Parameter_js_3.Parameter(`RequiredGroups`, `Specifies conditional access rules for users connecting to sessions that use this session configuration.


Enter a hashtable to compose your list of rules using only 1 key per hashtable, 'And' or 'Or', and set the value to an array of security group names or additional hashtables.


Example requiring connecting users to be members of a single group: "@{ And = 'MyRequiredGroup' }"


Example requiring users to belong to group A, or both groups B and C, to access the endpoint: "@{ Or = 'GroupA', @{ And = 'GroupB', 'GroupC' } }"`, `IDictionary`),
            new Parameter_js_3.Parameter(`RoleDefinitions`, `Specifies the mapping between security groups (or users) and role capabilities. Users will be granted access to all role capabilities which apply to their group membership at the time the session is created.


Enter a hash table in which the keys are the name of the security group and the values are hash tables that contain a list of role capabilities that should be made available to the security group.


For example: "@{'Contoso\\Level 2 Helpdesk Users' = @{ RoleCapabilities = 'Maintenance', 'ADHelpDesk' }}"`, `IDictionary`),
            new Parameter_js_3.Parameter(`RunAsVirtualAccount`, `Configures sessions using this session configuration to be run as the computer's (virtual) administrator account. This field cannot be used with the GroupManagedServiceAccount parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`RunAsVirtualAccountGroups`, `Specifies the security groups to be associated with the virtual account when a session that uses the session configuration is run as a virtual account. If omitted, the virtual account belongs to Domain Admins on domain controllers and Administrators on all other computers.`, `String[]`),
            new Parameter_js_3.Parameter(`SchemaVersion`, `Specifies the version of the session configuration file schema. The default value is "1.0.0.0".`, `Version`),
            new Parameter_js_3.Parameter(`ScriptsToProcess`, `Adds the specified scripts to sessions that use the session configuration. Enter the path and file names of the scripts. The value of this parameter must be a full or absolute path of script file names.`, `String[]`),
            new Parameter_js_3.Parameter(`SessionType`, `Specifies the type of session that is created by using the session configuration. The default value is Default. The acceptable values for this parameter are:


- Empty - No modules are added to session by default. Use the parameters of this cmdlet   to add modules, functions, scripts, and other features to the session. This option is designed for   you to create custom sessions by adding selected commands. If you do not add commands to an empty   session, the session is limited to expressions and might not be usable. - Default - Adds the Microsoft.PowerShell.Core module to the session. This module includes the   "Import-Module" cmdlet that users can use to import other modules unless you explicitly prohibit   this cmdlet. - RestrictedRemoteServer. Includes only the following proxy functions: "Exit-PSSession",   "Get-Command", "Get-FormatData", "Get-Help", "Measure-Object", "Out-Default", and "Select-Object".   Use the parameters of this cmdlet to add modules, functions, scripts, and other features to the   session.`, `SessionType`),
            new Parameter_js_3.Parameter(`TranscriptDirectory`, `Specifies the directory to place session transcripts for sessions using this session configuration.`, `String`),
            new Parameter_js_3.Parameter(`TypesToProcess`, `Adds the specified ".ps1xml" type files to sessions that use the session configuration. Enter the type filenames. The value of this parameter must be a full or absolute path to type filenames.`, `String[]`),
            new Parameter_js_3.Parameter(`UserDriveMaximumSize`, `Specifies the maximum size for user drives exposed in sessions that use this session configuration. When omitted, the default size of each "User:" drive root is 50MB.


This parameter should be used with MountUserDrive .`, `Int64`),
            new Parameter_js_3.Parameter(`VariableDefinitions`, `Adds the specified variables to sessions that use the session configuration. Enter a hash table with the following keys:


- Name - Name of the variable. This key is required.


- Value - Variable value. This key is required.


- Options - Variable options. This key is optional. The default value is None . The acceptable   values for this parameter are: None, ReadOnly, Constant, Private, or AllScope.


For example: "@{Name='WarningPreference';Value='SilentlyContinue';Options='AllScope'}"`, `Object`),
            new Parameter_js_3.Parameter(`VisibleAliases`, `Limits the aliases in the session to those specified in the value of this parameter, plus any aliases that you define in the AliasDefinition parameter. Wildcard characters are supported. By default, all aliases that are defined by the PowerShell engine and all aliases that modules export are visible in the session.


For example: "VisibleAliases='gcm', 'gp'"


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its ipmo alias from the session.`, `String[]`),
            new Parameter_js_3.Parameter(`VisibleCmdlets`, `Limits the cmdlets in the session to those specified in the value of this parameter. Wildcard characters and Module Qualified Names are supported.


By default, all cmdlets that modules in the session export are visible in the session. Use the SessionType and ModulesToImport parameters to determine which modules and snap-ins are imported into the session. If no modules in ModulesToImport expose the cmdlet, the appropriate module will attempt to be autoloaded.


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its ipmo alias from the session.`, `Object[]`),
            new Parameter_js_3.Parameter(`VisibleExternalCommands`, `Limits the external binaries, scripts, and commands that can be executed in the session to those specified in the value of this parameter. Wildcard characters are supported.


By default, no external commands are visible in the session.


When any Visible parameter is included in the session configuration file, PowerShell, removes the "Import-Module" cmdlet and its ipmo alias from the session.`, `String[]`),
            new Parameter_js_3.Parameter(`VisibleFunctions`, `Limits the functions in the session to those specified in the value of this parameter, plus any functions that you define in the FunctionDefinition parameter. Wildcard characters are supported.


By default, all functions that modules in the session export are visible in the session. Use the SessionType and ModulesToImport parameters to determine which modules and snap-ins are imported into the session.


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its ipmo alias from the session.`, `Object[]`),
            new Parameter_js_3.Parameter(`VisibleProviders`, `Limits the PowerShell providers in the session to those specified in the value of this parameter. Wildcard characters are supported.


By default, all providers that modules in the session export are visible in the session. Use the SessionType and ModulesToImport parameters to determine which modules are imported into the session.


When any Visible parameter is included in the session configuration file, PowerShell removes the "Import-Module" cmdlet and its "ipmo" alias from the session.`, `String[]`),
        ], `Creates a file that defines a session configuration.`, `New-PSSessionConfigurationFile [-Path] <String> [-AliasDefinitions <IDictionary[]>] [-AssembliesToLoad <String[]>] [-Author <String>] [-CompanyName <String>] [-Copyright <String>] [-Description <String>] [-EnvironmentVariables <IDictionary>] [-ExecutionPolicy {Unrestricted | RemoteSigned | AllSigned | Restricted | Default | Bypass | Undefined}] [-FormatsToProcess <String[]>] [-Full] [-FunctionDefinitions <IDictionary[]>] [-GroupManagedServiceAccount <String>] [-Guid <Guid>] [-LanguageMode {FullLanguage | RestrictedLanguage | NoLanguage | ConstrainedLanguage}] [-ModulesToImport <Object[]>] [-MountUserDrive] [-PowerShellVersion <Version>] [-RequiredGroups <IDictionary>] [-RoleDefinitions <IDictionary>] [-RunAsVirtualAccount] [-RunAsVirtualAccountGroups <String[]>] [-SchemaVersion <Version>] [-ScriptsToProcess <String[]>] [-SessionType {Empty | RestrictedRemoteServer | Default}] [-TranscriptDirectory <String>] [-TypesToProcess <String[]>] [-UserDriveMaximumSize <Int64>] [-VariableDefinitions <Object>] [-VisibleAliases <String[]>] [-VisibleCmdlets <Object[]>] [-VisibleExternalCommands <String[]>] [-VisibleFunctions <Object[]>] [-VisibleProviders <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSSessionOption`, [
            new Parameter_js_3.Parameter(`ApplicationArguments`, `Specifies a primitive dictionary that is sent to the remote session. Commands and scripts in the remote session, including startup scripts in the session configuration, can find this dictionary in the ApplicationArguments property of the "$PSSenderInfo" automatic variable. You can use this parameter to send data to the remote session.


For more information, see about_Hash_Tables (about/about_Hash_Tables.md), [about_Session_Configurations](About/about_Session_Configurations.md), and about_Automatic_Variables (about/about_Automatic_Variables.md).`, `PSPrimitiveDictionary`),
            new Parameter_js_3.Parameter(`CancelTimeout`, `Determines how long PowerShell waits for a cancel operation (CTRL+C) to finish before ending it. Enter a value in milliseconds.


The default value is 60000 (one minute). A value of 0 (zero) means no time-out; the command continues indefinitely.`, `Int32`),
            new Parameter_js_3.Parameter(`Culture`, `Specifies the culture to use for the session. Enter a culture name in "<languagecode2>-<country/regioncode2>" format (like "ja-JP"), a variable that contains a CultureInfo object, or a command that gets a CultureInfo object.


The default value is "$Null", and the culture that is set in the operating system is used in the session.`, `CultureInfo`),
            new Parameter_js_3.Parameter(`IdleTimeout`, `Determines how long the session stays open if the remote computer does not receive any communication from the local computer. This includes the heartbeat signal. When the interval expires, the session closes.


The idle time-out value is of significant importance if you intend to disconnect and reconnect to a session. You can reconnect only if the session has not timed out.


Enter a value in milliseconds. The minimum value is 60000 (1 minute). The maximum is the value of the MaxIdleTimeoutms property of the session configuration. The default value, -1, does not set an idle time-out.


The session uses the idle time-out that is set in the session options, if any. If none is set (-1), the session uses the value of the IdleTimeoutMs property of the session configuration or the WSMan shell time-out value ("WSMan:<ComputerName>\\Shell\\IdleTimeout"), whichever is shortest.


If the idle timeout set in the session options exceeds the value of the MaxIdleTimeoutMs property of the session configuration, the command to create a session fails.


The IdleTimeoutMs value of the default Microsoft.PowerShell session configuration is 7200000 milliseconds (2 hours). Its MaxIdleTimeoutMs value is 2147483647 milliseconds (>24 days). The default value of the WSMan shell idle time-out ("WSMan:<ComputerName>\\Shell\\IdleTimeout") is 7200000 milliseconds (2 hours).


The idle time-out value of a session can also be changed when disconnecting from a session or reconnecting to a session. For more information, see "Disconnect-PSSession" and "Connect-PSSession".


In Windows PowerShell 2.0, the default value of the IdleTimeout parameter is 240000 (4 minutes).`, `Int32`),
            new Parameter_js_3.Parameter(`IncludePortInSPN`, `Includes the port number in the Service Principal Name (SPN) used for Kerberos authentication, for example, "HTTP://<ComputerName>:5985". This option allows a client that uses a non-default SPN to authenticate against a remote computer that uses Kerberos authentication.


The option is designed for enterprises where multiple services that support Kerberos authentication are running under different user accounts. For example, an IIS application that allows for Kerberos authentication can require the default SPN to be registered to a user account that differs from the computer account. In such cases, PowerShell remoting cannot use Kerberos to authenticate because it requires an SPN that is registered to the computer account. To resolve this problem, administrators can create different SPNs, such as by using Setspn.exe , that are registered to different user accounts and can distinguish between them by including the port number in the SPN.


For more information, see Setspn Overview (/previous-versions/windows/it-pro/windows-server-2003/cc773257(v=ws.10)).


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`MaxConnectionRetryCount`, `Specifies the number of times that PowerShell attempts to make a connection to a target machine if the current attempt fails due to network issues. The default value is 5.


This parameter was added for PowerShell version 5.0.`, `Int32`),
            new Parameter_js_3.Parameter(`MaximumReceivedDataSizePerCommand`, `Specifies the maximum number of bytes that the local computer can receive from the remote computer in a single command. Enter a value in bytes. By default, there is no data size limit.


This option is designed to protect the resources on the client computer.`, `Int32`),
            new Parameter_js_3.Parameter(`MaximumReceivedObjectSize`, `Specifies the maximum size of an object that the local computer can receive from the remote computer. This option is designed to protect the resources on the client computer. Enter a value in bytes.


In Windows PowerShell 2.0, if you omit this parameter, there is no object size limit. Beginning in Windows PowerShell 3.0, if you omit this parameter, the default value is 200 MB.`, `Int32`),
            new Parameter_js_3.Parameter(`MaximumRedirection`, `Determines how many times PowerShell redirects a connection to an alternate Uniform Resource Identifier (URI) before the connection fails. The default value is 5. A value of 0 (zero) prevents all redirection.


This option is used in the session only when the AllowRedirection parameter is used in the command that creates the session.`, `Int32`),
            new Parameter_js_3.Parameter(`NoCompression`, `Turns off packet compression in the session. Compression uses more processor cycles, but it makes transmission faster.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NoEncryption`, `Turns off data encryption.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NoMachineProfile`, `Prevents loading the user's Windows user profile. As a result, the session might be created faster, but user-specific registry settings, items such as environment variables, and certificates are not available in the session.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`OpenTimeout`, `Determines how long the client computer waits for the session connection to be established. When the interval expires, the command to establish the connection fails. Enter a value in milliseconds.


The default value is 180000 (3 minutes). A value of 0 (zero) means no time-out; the command continues indefinitely.`, `Int32`),
            new Parameter_js_3.Parameter(`OperationTimeout`, `Determines the maximum time that any operation in the session can run. When the interval expires, the operation fails. Enter a value in milliseconds.


The default value is 180000 (3 minutes). A value of 0 (zero) means no time-out; the operation continues indefinitely.`, `Int32`),
            new Parameter_js_3.Parameter(`OutputBufferingMode`, `Determines how command output is managed in disconnected sessions when the output buffer becomes full.


If the output buffering mode is not set in the session or in the session configuration, the default value is Block . Users can also change the output buffering mode when disconnecting the session.


If you omit this parameter, the value of the OutputBufferingMode of the session option object is None. A value of Block or Drop overrides the output buffering mode transport option set in the session configuration. The acceptable values for this parameter are:


- Block. When the output buffer is full, execution is suspended until the buffer is clear.


- Drop. When the output buffer is full, execution continues. As new output is saved, the oldest


output is discarded. - None. No output buffering mode is specified.


For more information about the output buffering mode transport option, see "New-PSTransportOption".


This parameter was introduced in Windows PowerShell 3.0.`, `OutputBufferingMode`),
            new Parameter_js_3.Parameter(`ProxyAccessType`, `Determines which mechanism is used to resolve the host name. The acceptable values for this parameter are:


- IEConfig


- WinHttpConfig


- AutoDetect


- NoProxyServer


- None




The default value is None.

For information about the values of this parameter, see ProxyAccessType Enumeration (/dotnet/api/system.management.automation.remoting.proxyaccesstype?redirectedfrom=MSDN&view=powershellsdk-1.1.0).`, `ProxyAccessType`),
            new Parameter_js_3.Parameter(`ProxyAuthentication`, `Specifies the authentication method that is used for proxy resolution. The acceptable values for this parameter are: Basic , Digest , and Negotiate . The default value is Negotiate .


For more information about the values of this parameter, see AuthenticationMechanism Enumeration (/dotnet/api/system.management.automation.runspaces.authenticationmechanism?redirectedfrom=MSDN&view=powershellsdk-1.1.0).`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`ProxyCredential`, `Specifies the credentials to use for proxy authentication. Enter a variable that contains a PSCredential object or a command that gets a PSCredential object, such as a "Get-Credential" command. If this option is not set, no credentials are specified.`, `PSCredential`),
            new Parameter_js_3.Parameter(`SkipCACheck`, `Specifies that when it connects over HTTPS, the client does not validate that the server certificate is signed by a trusted certification authority (CA).


Use this option only when the remote computer is trusted by using another mechanism, such as when the remote computer is part of a network that is physically secure and isolated or when the remote computer is listed as a trusted host in a WinRM configuration.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipCNCheck`, `Specifies that the certificate common name (CN) of the server does not have to match the host name of the server. This option is used only in remote operations that use the HTTPS protocol.


Use this option only for trusted computers.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipRevocationCheck`, `Does not validate the revocation status of the server certificate.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`UICulture`, `Specifies the UI culture to use for the session.


Valid values include:


- A culture name in "<languagecode2>-<country/regioncode2>" format, such as "ja-JP"


- A variable that contains a CultureInfo object - A command that gets a CultureInfo object, such as "Get-Culture"


The default value is "$null", and the UI culture that is set in the operating system when the session is created is used in the session.`, `CultureInfo`),
            new Parameter_js_3.Parameter(`UseUTF16`, `Indicates that this cmdlet encodes the request in UTF16 format instead of UTF8 format.`, `SwitchParameter`),
        ], `Creates an object that contains advanced options for a PSSession.`, `New-PSSessionOption [-ApplicationArguments <PSPrimitiveDictionary>] [-CancelTimeout <Int32>] [-Culture <CultureInfo>] [-IdleTimeout <Int32>] [-IncludePortInSPN] [-MaxConnectionRetryCount <Int32>] [-MaximumReceivedDataSizePerCommand <Int32>] [-MaximumReceivedObjectSize <Int32>] [-MaximumRedirection <Int32>] [-NoCompression] [-NoEncryption] [-NoMachineProfile] [-OpenTimeout <Int32>] [-OperationTimeout <Int32>] [-OutputBufferingMode {None | Drop | Block}] [-ProxyAccessType {None | IEConfig | WinHttpConfig | AutoDetect | NoProxyServer}] [-ProxyAuthentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-ProxyCredential <PSCredential>] [-SkipCACheck] [-SkipCNCheck] [-SkipRevocationCheck] [-UICulture <CultureInfo>] [-UseUTF16] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSTransportOption`, [
            new Parameter_js_3.Parameter(`IdleTimeoutSec`, `Determines how long each session stays open if the remote computer does not receive any communication from the local computer. This includes the heartbeat signal. When the interval expires, the session closes.


The idle time-out value is of significant importance when the user intends to disconnect and reconnect to a session. The user can reconnect only if the session has not timed out.


The IdleTimeoutSec parameter corresponds to the IdleTimeoutMs property of a session configuration.


Enter a value in seconds. The default value is 7200 (2 hours). The minimum value is 60 (1 minute). The maximum is the value of the IdleTimeout property of Shell objects in the WSMan configuration ("WSMan:\<ComputerName>\\Shell\\IdleTimeout"). The default value is 7200000 milliseconds (2 hours).


If an idle time-out value is set in the session options and in the session configuration, value set in the session options takes precedence, but it cannot exceed the value of the MaxIdleTimeoutMs property of the session configuration. To set the value of the MaxIdleTimeoutMs property, use the MaxIdleTimeoutSec parameter.`, `Int32`),
            new Parameter_js_3.Parameter(`MaxConcurrentCommandsPerSession`, `Limits the number of commands that can run at the same time in each session to the specified value. The default value is 1000.


The MaxConcurrentCommandsPerSession parameter corresponds to the MaxConcurrentCommandsPerShell property of a session configuration.`, `Int32`),
            new Parameter_js_3.Parameter(`MaxConcurrentUsers`, `Limits the number of users who can run commands at the same time in each session to the specified value. The default value is 5.`, `Int32`),
            new Parameter_js_3.Parameter(`MaxIdleTimeoutSec`, `Limits the idle time-out set for each session to the specified value. The default value is [Int]::MaxValue (~25 days).


The idle time-out value is of significant importance when the user intends to disconnect and reconnect to a session. The user can reconnect only if the session has not timed out.


The MaxIdleTimeoutSec parameter corresponds to the MaxIdleTimeoutMs property of a session configuration.`, `Int32`),
            new Parameter_js_3.Parameter(`MaxMemoryPerSessionMB`, `Limits the memory used by each session to the specified value. Enter a value in megabytes. The default value is 1024 megabytes (1 GB).


The MaxMemoryPerSessionMB parameter corresponds to the MaxMemoryPerShellMB property of a session configuration.`, `Int32`),
            new Parameter_js_3.Parameter(`MaxProcessesPerSession`, `Limits the number of processes running in each session to the specified value. The default value is 15.


The MaxProcessesPerSession parameter corresponds to the MaxProcessesPerShell property of a session configuration.`, `Int32`),
            new Parameter_js_3.Parameter(`MaxSessions`, `Limits the number of sessions that use the session configuration. The default value is 25.


The MaxSessions parameter corresponds to the MaxShells property of a session configuration.`, `Int32`),
            new Parameter_js_3.Parameter(`MaxSessionsPerUser`, `Limits the number of sessions that use the session configuration and run with the credentials of a given user to the specified value. The default value is 25.


When you specify this value, consider that many users might be using the credentials of a run as user.


The MaxSessionsPerUser parameter corresponds to the MaxShellsPerUser property of a session configuration.`, `Int32`),
            new Parameter_js_3.Parameter(`OutputBufferingMode`, `Determines how command output is managed in disconnected sessions when the output buffer becomes full. The acceptable values for this parameter are:


- Block. When the output buffer is full, execution is suspended until the buffer is clear. - Drop. When the output buffer is full, execution continues. As new output is saved, the oldest output is discarded. - None. No output buffering mode is specified.


The default value of the OutputBufferingMode property of sessions is Block.`, `OutputBufferingMode`),
            new Parameter_js_3.Parameter(`ProcessIdleTimeoutSec`, `Limits the time-out for each host process to the specified value. The default value, 0, means that there is no time-out value for the process.


Other session configurations have per-process time-out values. For example, the Microsoft.PowerShell.Workflow session configuration has a per-process time-out value of 28800 seconds (8 hours).`, `Int32`),
        ], `Creates an object that contains advanced options for a session configuration.`, `New-PSTransportOption [-IdleTimeoutSec <Int32>] [-MaxConcurrentCommandsPerSession <Int32>] [-MaxConcurrentUsers <Int32>] [-MaxIdleTimeoutSec <Int32>] [-MaxMemoryPerSessionMB <Int32>] [-MaxProcessesPerSession <Int32>] [-MaxSessions <Int32>] [-MaxSessionsPerUser <Int32>] [-OutputBufferingMode {None | Drop | Block}] [-ProcessIdleTimeoutSec <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-PSWorkflowExecutionOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-ScheduledJobOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-SelfSignedCertificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Service`, [
            new Parameter_js_3.Parameter(`BinaryPathName`, `Specifies the path of the executable file for the service. This parameter is required.`, `String`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies the account used by the service as the Service Logon Account (/windows/desktop/ad/about-service-logon-accounts).


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object, such as one generated by the "Get-Credential" cmdlet. If you type a user name, this cmdlet prompts you for a password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`DependsOn`, `Specifies the names of other services upon which the new service depends. To enter multiple service names, use a comma to separate the names.`, `String[]`),
            new Parameter_js_3.Parameter(`Description`, `Specifies a description of the service.`, `String`),
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies a display name for the service.`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the service. This parameter is required.`, `String`),
            new Parameter_js_3.Parameter(`StartupType`, `Sets the startup type of the service. The acceptable values for this parameter are:


- Automatic - The service is started or was started by the operating system, at system start-up.   If an automatically started service depends on a manually started service, the manually started   service is also started automatically at system startup. - AutomaticDelayedStart - Starts shortly after the system boots. - Disabled - The service is disabled and cannot be started by a user or application. - InvalidValue - This value is not supported. Using this value results in an error. - Manual - The service is started only manually, by a user, using the Service Control Manager,   or by an application.


The default value is Automatic .`, `ServiceStartupType`),
            new Parameter_js_3.Parameter(`SecurityDescriptorSddl`, `Specifies the SecurityDescriptor for the service in Sddl format.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates a new Windows service.`, `New-Service [-Name] <String> [-BinaryPathName] <String> [-Credential <PSCredential>] [-DependsOn <String[]>] [-Description <String>] [-DisplayName <String>] [-StartupType {Automatic | Manual | Disabled | AutomaticDelayedStart | InvalidValue}] [-SecurityDescriptorSddl <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-TemporaryFile`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates a temporary file.`, `New-TemporaryFile [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-TimeSpan`, [
            new Parameter_js_3.Parameter(`Days`, `Specifies the days in the time span. The default value is 0.`, `Int32`),
            new Parameter_js_3.Parameter(`End`, `Specifies the end of a time span. The default value is the current date and time.`, `DateTime`),
            new Parameter_js_3.Parameter(`Hours`, `Specifies the hours in the time span. The default value is zero.`, `Int32`),
            new Parameter_js_3.Parameter(`Minutes`, `Specifies the minutes in the time span. The default value is 0.`, `Int32`),
            new Parameter_js_3.Parameter(`Seconds`, `Specifies the length of the time span in seconds. The default value is 0.`, `Int32`),
            new Parameter_js_3.Parameter(`Start`, `Specifies the start of a time span. Enter a string that represents the date and time, such as "3/15/09" or a DateTime object, such as one from a "Get-Date" command. The default value is the current date and time.


You can use Start or its alias, LastWriteTime . The LastWriteTime alias lets you pipe objects that have a LastWriteTime property, such as files in the file system "[System.Io.FileIO]", to the Start parameter of "New-TimeSpan".`, `DateTime`),
        ], `Creates a TimeSpan object.`, `New-TimeSpan [-Days <Int32>] [-Hours <Int32>] [-Minutes <Int32>] [-Seconds <Int32>] [<CommonParameters>]

New-TimeSpan [[-Start] <DateTime>] [[-End] <DateTime>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-TlsSessionTicketKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-Variable`, [
            new Parameter_js_3.Parameter(`Description`, `Specifies a description of the variable.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet creates a variable with the same name as an existing read-only variable.


By default, you can overwrite a variable unless the variable has an option value of ReadOnly or Constant. For more information, see the Option parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a name for the new variable.`, `String`),
            new Parameter_js_3.Parameter(`Option`, `Specifies the value of the Options property of the variable.The acceptable values for this parameter are:


- None. Sets no options. (None is the default.) - ReadOnly. Can be deleted. Cannot be changed, except by using the Force parameter. - Private. The variable is available only in the current scope. - AllScope. The variable is copied to any new scopes that are created. - Constant. Cannot be deleted or changed. Constant is valid only when you are creating a variable. You cannot change the options of an existing variable to Constant.


To see the Options property of all variables in the session, type "Get-Variable | Format-Table -Property name, options -autosize".`, `ScopedItemOptions`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope of the new variable. The acceptable values for this parameter are:


- Global. Variables created in the global scope are accessible everywhere in a PowerShell process. - Local. The local scope refers to the current scope, this can be any scope depending on the context. - Script. Variables created in the script scope are accessible only within the script file or module they are created in. - Private. Variables created in the private scope cannot be accessed outside the scope they exist in. You can use private scope to create a private version of an item with the same name in another scope. - A number relative to the current scope (0 through the number of scopes, where 0 is the current scope, 1 is its parent, 2 the parent of the parent scope, and so on). Negative numbers cannot be used.


Local is the default scope when the scope parameter is not specified.


For more information, see about_Scopes.`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the initial value of the variable.`, `Object`),
            new Parameter_js_3.Parameter(`Visibility`, `Determines whether the variable is visible outside of the session in which it was created. This parameter is designed for  use in scripts and commands that will be delivered to other users. The acceptable values for this parameter are:


- Public. The variable is visible. (Public is the default.) - Private. The variable is not visible.


When a variable is private, it does not appear in lists of variables, such as those returned by Get-Variable, or in displays of the Variable: drive. Commands to read or change the value of a private variable return an error. However, the user can run commands that use a private variable if the commands were written in the session in which the variable was defined.`, `SessionStateEntryVisibility`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates a new variable.`, `New-Variable [-Name] <String> [[-Value] <Object>] [-Description <String>] [-Force] [-Option {None | ReadOnly | Constant | Private | AllScope | Unspecified}] [-PassThru] [-Scope <String>] [-Visibility {Public | Private}] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-WindowsCustomImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-WinEvent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-WinUserLanguageList`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-WSManInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`New-WSManSessionOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Optimize-AppxProvisionedPackages`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Optimize-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Out-Default`, [
            new Parameter_js_3.Parameter(`InputObject`, `Accepts input to the cmdlet.`, `PSObject`),
            new Parameter_js_3.Parameter(`Transcript`, `Determines whether the output should be sent to PowerShell's transcription services.`, `SwitchParameter`),
        ], `Sends the output to the default formatter and to the default output cmdlet.`, `Out-Default [-InputObject <PSObject>] [-Transcript] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Out-File`, [
            new Parameter_js_3.Parameter(`Append`, `Adds the output to the end of an existing file.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`FilePath`, `Specifies the path to the output file.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Overrides the read-only attribute and overwrites an existing read-only file. The Force parameter does not override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be written to the file. Enter a variable that contains the objects or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the output file. The LiteralPath parameter is used exactly as it is typed. Wildcard characters are not accepted. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences. For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String`),
            new Parameter_js_3.Parameter(`NoClobber`, `NoClobber prevents an existing file from being overwritten and displays a message that the file already exists. By default, if a file exists in the specified path, "Out-File" overwrites the file without warning.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NoNewline`, `Specifies that the content written to the file does not end with a newline character. The string representations of the input objects are concatenated to form the output. No spaces or newlines are inserted between the output strings. No newline is added after the last output string.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Width`, `Specifies the number of characters in each line of output. Any additional characters are truncated, not wrapped. If this parameter is not used, the width is determined by the characteristics of the host. The default for the PowerShell console is 80 characters.`, `Int32`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Sends output to a file.`, `Out-File [-FilePath] <String> [[-Encoding] {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Append] [-Force] [-InputObject <PSObject>] [-NoClobber] [-NoNewline] [-Width <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]

Out-File [[-Encoding] {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Append] [-Force] [-InputObject <PSObject>] -LiteralPath <String> [-NoClobber] [-NoNewline] [-Width <Int32>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Out-GridView`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies object that the cmdlet accepts as input for "Out-GridView".


When you use the InputObject parameter to send a collection of objects to "Out-GridView", "Out-GridView" treats the collection as one collection object, and it displays one row that represents the collection. To display the each object in the collection, use a pipeline operator (|) to send objects to "Out-GridView".`, `PSObject`),
            new Parameter_js_3.Parameter(`OutputMode`, `Specifies the items that the interactive window sends down the pipeline as input to other commands. By default, this cmdlet does not generate any output. To send items from the interactive window down the pipeline, click to select the items and then click OK.


The values of this parameter determine how many items you can send down the pipeline.


- None.  No items. This is the default value.


- Single. Zero items or one item. Use this value when the next command can take only one input


object. - Multiple. Zero, one, or many items. Use this value when the next command can take multiple input   objects. This value is equivalent to the Passthru parameter.`, `OutputModeOption`),
            new Parameter_js_3.Parameter(`PassThru`, `Indicates that the cmdlet sends items from the interactive window down the pipeline as input to other commands. By default, this cmdlet does not generate any output. This parameter is equivalent to using the Multiple value of the OutputMode parameter.


To send items from the interactive window down the pipeline, click to select the items and then click OK. Shift-click and Ctrl-click are supported.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Title`, `Specifies the text that appears in the title bar of the "Out-GridView" window. By default, the title bar displays the command that invokes "Out-GridView".`, `String`),
            new Parameter_js_3.Parameter(`Wait`, `Indicates that the cmdlet suppresses the command prompt and prevents Windows PowerShell from closing until the "Out-GridView" window is closed. By default, the command prompt returns when the "Out-GridView" window opens.


This feature lets you use the "Out-GridView" cmdlets in Windows shortcuts. When "Out-GridView" is used in a shortcut without the Wait parameter, the "Out-GridView" window appears only momentarily before PowerShell closes.`, `SwitchParameter`),
        ], `Sends output to an interactive table in a separate window.`, `Out-GridView [-InputObject <PSObject>] [-OutputMode {None | Single | Multiple}] [-Title <String>] [<CommonParameters>]

Out-GridView [-InputObject <PSObject>] [-PassThru] [-Title <String>] [<CommonParameters>]

Out-GridView [-InputObject <PSObject>] [-Title <String>] [-Wait] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Out-Host`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects that are written to the console. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`Paging`, `Indicates that "Out-Host" displays one page of output at a time, and waits for user input before the remaining pages are displayed. By default, all the output is displayed on a single page. The page size is determined by the characteristics of the host.


Press the <kbd>Space</kbd> bar to display the next page of output or the <kbd>Enter</kbd> key to view the next line of output. Press <kbd>Q</kbd> to quit. Paging is similar to the more command.


> [!NOTE] > The Paging parameter isn't supported by the PowerShell ISE host.`, `SwitchParameter`),
        ], `Sends output to the command line.`, `Out-Host [-InputObject <PSObject>] [-Paging] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Out-Null`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object to be sent to NULL (removed from pipeline). Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
        ], `Hides the output instead of sending it down the pipeline or displaying it.`, `Out-Null [-InputObject <PSObject>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Out-Printer`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be sent to the printer. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`Name`, `Sends the output to the specified printer. The parameter name Name is optional.`, `String`),
        ], `Sends output to a printer.`, `Out-Printer [[-Name] <String>] [-InputObject <PSObject>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Out-String`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be written to a string. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`NoNewline`, `Removes all newlines from output generated by the PowerShell formatter. Newlines that are part of the string objects are preserved.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Stream`, `Indicates that the cmdlet sends a separate string for each object. By default, the strings for each object are accumulated and sent as a single string.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Width`, `Specifies the number of characters in each line of output. Any additional characters are truncated, not wrapped. The Width parameter applies only to objects that are being formatted. If you omit this parameter, the width is determined by the characteristics of the host program. The default value for the PowerShell console is 80 characters.`, `Int32`),
        ], `Sends objects to the host as a series of strings.`, `Out-String [-InputObject <PSObject>] [-NoNewline] [-Width <Int32>] [<CommonParameters>]

Out-String [-InputObject <PSObject>] [-Stream] [-Width <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Pop-Location`, [
            new Parameter_js_3.Parameter(`PassThru`, `Passes an object that represents the location to the pipeline. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`StackName`, `Specifies the location stack from which the location is popped. Enter a location stack name.


Without this parameter, "Pop-Location" pops a location from the current location stack. By default, the current location stack is the unnamed default location stack that PowerShell creates. To make a location stack the current location stack, use the StackName parameter of "Set-Location".


"Pop-Location" cannot pop a location from the unnamed default stack unless it is the current location stack.`, `String`),
        ], `Changes the current location to the location most recently pushed onto the stack.`, `Pop-Location [-PassThru] [-StackName <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Protect-CmsMessage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Publish-DscConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Push-Location`, [
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the new location. Unlike the Path parameter, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Passes an object representing the location to the pipeline. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Changes your location to the location specified by this path after it adds (pushes) the current location onto the top of the stack. Enter a path to any location whose provider supports this cmdlet. Wildcards are permitted. The parameter name is optional.`, `String`),
            new Parameter_js_3.Parameter(`StackName`, `Specifies the location stack to which the current location is added. Enter a location stack name. If the stack does not exist, "Push-Location" creates it.


Without this parameter, "Push-Location" adds the location to the current location stack. By default, the current location stack is the unnamed default location stack that PowerShell creates. To make a location stack the current location stack, use the StackName parameter of the "Set-Location" cmdlet. For more information about location stacks, see the Notes (#notes).


> [!NOTE] > "Push-Location" cannot add a location to the unnamed default stack unless it is the current > location stack.`, `String`),
        ], `Adds the current location to the top of a location stack.`, `Push-Location [-LiteralPath <String>] [-PassThru] [-StackName <String>] [<CommonParameters>]

Push-Location [[-Path] <String>] [-PassThru] [-StackName <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Read-Host`, [
            new Parameter_js_3.Parameter(`AsSecureString`, `Indicates that the cmdlet displays asterisks (*) in place of the characters that the user types as input.


When you use this parameter, the output of the Read-Host cmdlet is a SecureString object ( System.Security.SecureString ).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Prompt`, `Specifies the text of the prompt. Type a string. If the string includes spaces, enclose it in quotation marks. PowerShell appends a colon (:) to the text that you enter.`, `Object`),
        ], `Reads a line of input from the console.`, `Read-Host [[-Prompt] <Object>] [-AsSecureString] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Receive-DtcDiagnosticTransaction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Receive-Job`, [
            new Parameter_js_3.Parameter(`AutoRemoveJob`, `Indicates that this cmdlet deletes the job after it returns the job results. If the job has more results, the job is still deleted, but "Receive-Job" displays a message.


This parameter works only on custom job types. It is designed for instances of job types that save the job or the type outside of the session, such as instances of scheduled jobs.


This parameter cannot be used without the Wait parameter.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies an array of names of computers.


This parameter selects from among the job results that are stored on the local computer. It does not get data for jobs run on remote computers. To get job results that are stored on remote computers, use the "Invoke-Command" cmdlet to run a "Receive-Job" command remotely.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet continues waiting if jobs are in the Suspended or Disconnected state. By default, the Wait parameter of "Receive-Job" returns, or terminates the wait, when jobs are in one of the following states:


- Completed


- Failed


- Stopped


- Suspended


- Disconnected.




The Force parameter is valid only when the Wait parameter is also used in the command.

This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Id`, `Specifies an array of IDs. This cmdlet gets the results of jobs with the specified IDs.


The ID is an integer that uniquely identifies the job in the current session. It is easier to remember and type than the instance ID, but it is unique only in the current session. You can type one or more IDs separated by commas. To find the ID of a job, use "Get-Job".`, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies an array of instance IDs. This cmdlet gets the results of jobs with the specified instance IDs.


An instance ID is a GUID that uniquely identifies the job on the computer. To find the instance ID of a job, use the "Get-Job" cmdlet.`, `Guid[]`),
            new Parameter_js_3.Parameter(`Job`, `Specifies the job for which results are being retrieved.


Enter a variable that contains the job or a command that gets the job. You can also pipe a job object to "Receive-Job".`, `Job[]`),
            new Parameter_js_3.Parameter(`Keep`, `Indicates that this cmdlet saves the aggregated stream data in the system, even after you have received them. By default, aggregated stream data is erased after viewed with "Receive-Job".


Closing the session, or removing the job with the "Remove-Job" cmdlet also deletes aggregated stream data.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Location`, `Specifies an array of locations. This cmdlet gets only the results of jobs in the specified locations.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies an array of friendly names. This cmdlet gets the results of jobs that have the specified names. Wildcard characters are supported.`, `String[]`),
            new Parameter_js_3.Parameter(`NoRecurse`, `Indicates that this cmdlet gets results only from the specified job. By default, "Receive-Job" also gets the results of all child jobs of the specified job.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Session`, `Specifies an array of sessions. This cmdlet gets the results of jobs that were run in the specified PowerShell session ( PSSession ). Enter a variable that contains the PSSession or a command that gets the PSSession , such as a "Get-PSSession" command.`, `PSSession[]`),
            new Parameter_js_3.Parameter(`Wait`, `Indicates that this cmdlet suppresses the command prompt until all job results are received. By default, "Receive-Job" immediately returns the available results.


By default, the Wait parameter waits until the job is in one of the following states:


- Completed


- Failed


- Stopped


- Suspended


- Disconnected.




To direct the Wait parameter to continue waiting if the job state is Suspended or Disconnected, use the Force parameter together with the Wait parameter.

This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WriteEvents`, `Indicates that this cmdlet reports changes in the job state while it waits for the job to finish.


This parameter is valid only when the Wait parameter is used in the command and the Keep parameter is omitted.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WriteJobInResults`, `Indicates that this cmdlet returns the job object followed by the results.


This parameter is valid only when the Wait parameter is used in the command and the Keep parameter is omitted.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
        ], `Gets the results of the PowerShell background jobs in the current session.`, `Receive-Job [-Job] <Job[]> [[-ComputerName] <String[]>] [-AutoRemoveJob] [-Force] [-Keep] [-NoRecurse] [-Wait] [-WriteEvents] [-WriteJobInResults] [<CommonParameters>]

Receive-Job [-Id] <Int32[]> [-AutoRemoveJob] [-Force] [-Keep] [-NoRecurse] [-Wait] [-WriteEvents] [-WriteJobInResults] [<CommonParameters>]

Receive-Job [-InstanceId] <Guid[]> [-AutoRemoveJob] [-Force] [-Keep] [-NoRecurse] [-Wait] [-WriteEvents] [-WriteJobInResults] [<CommonParameters>]

Receive-Job [-Job] <Job[]> [[-Location] <String[]>] [-AutoRemoveJob] [-Force] [-Keep] [-NoRecurse] [-Wait] [-WriteEvents] [-WriteJobInResults] [<CommonParameters>]

Receive-Job [-Job] <Job[]> [[-Session] <PSSession[]>] [-AutoRemoveJob] [-Force] [-Keep] [-NoRecurse] [-Wait] [-WriteEvents] [-WriteJobInResults] [<CommonParameters>]

Receive-Job [-Name] <String[]> [-AutoRemoveJob] [-Force] [-Keep] [-NoRecurse] [-Wait] [-WriteEvents] [-WriteJobInResults] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Receive-PSSession`, [
            new Parameter_js_3.Parameter(`AllowRedirection`, `Indicates that this cmdlet allows redirection of this connection to an alternate Uniform Resource Identifier (URI).


When you use the ConnectionURI parameter, the remote destination can return an instruction to redirect to a different URI. By default, PowerShell doesn't redirect connections, but you can use this parameter to enable it to redirect the connection.


You can also limit the number of times the connection is redirected by changing the MaximumConnectionRedirectionCount session option value. Use the MaximumRedirection parameter of the "New-PSSessionOption" cmdlet or set the MaximumConnectionRedirectionCount property of the "$PSSessionOption" preference variable. The default value is 5.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ApplicationName`, `Specifies an application. This cmdlet connects only to sessions that use the specified application.


Enter the application name segment of the connection URI. For example, in the following connection URI, WSMan is the application name: "http://localhost:5985/WSMAN".


The application name of a session is stored in the Runspace.ConnectionInfo.AppName property of the session.


The parameter's value is used to select and filter sessions. It doesn't change the application that the session uses.`, `String`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the mechanism that's used to authenticate the user credentials in the command to reconnect to a disconnected session. The acceptable values for this parameter are:


- Default


- Basic


- Credssp


- Digest


- Kerberos


- Negotiate


- NegotiateWithImplicitCredential




The default value is Default.


For more information about the values of this parameter, see AuthenticationMechanism Enumeration (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).

> [!CAUTION] > Credential Security Support Provider (CredSSP) authentication, in which the user credentials are > passed to a remote computer to be authenticated, is designed for commands that require > authentication on more than one resource, such as accessing a remote network share. This mechanism > increases the security risk of the remote operation. If the remote computer is compromised, the > credentials that are passed to it can be used to control the network session.`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`CertificateThumbprint`, `Specifies the digital public key certificate (X509) of a user account that has permission to connect to the disconnected session. Enter the certificate thumbprint of the certificate.


Certificates are used in client certificate-based authentication. Certificates can be mapped only to local user accounts, and don't work with domain accounts.


To get a certificate thumbprint, use a "Get-Item" or "Get-ChildItem" command in the PowerShell "Cert:" drive.`, `String`),
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies the computer on which the disconnected session is stored. Sessions are stored on the computer that's at the server-side, or receiving end of a connection. The default is the local computer.


Type the NetBIOS name, an IP address, or a fully qualified domain name (FQDN) of one computer. Wildcard characters aren't permitted. To specify the local computer, type the computer name, a dot ("."), "$env:COMPUTERNAME", or localhost.`, `String`),
            new Parameter_js_3.Parameter(`ConfigurationName`, `Specifies the name of a session configuration. This cmdlet connects only to sessions that use the specified session configuration.


Enter a configuration name or the fully qualified resource URI for a session configuration. If you specify only the configuration name, the following schema URI is prepended:


"https://schemas.microsoft.com/powershell".


The configuration name of a session is stored in the ConfigurationName property of the session.


The parameter's value is used to select and filter sessions. It doesn't change the session configuration that the session uses.


For more information about session configurations, see about_Session_Configurations (./About/about_Session_Configurations.md).`, `String`),
            new Parameter_js_3.Parameter(`ConnectionUri`, `Specifies a URI that defines the connection endpoint that is used to reconnect to the disconnected session.


The URI must be fully qualified. The string's format is as follows:


"<Transport>://<ComputerName>:<Port>/<ApplicationName>"


The default value is as follows:


"http://localhost:5985/WSMAN"


If you don't specify a connection URI, you can use the UseSSL , ComputerName , Port , and ApplicationName parameters to specify the connection URI values.


Valid values for the Transport segment of the URI are HTTP and HTTPS. If you specify a connection URI with a Transport segment, but don't specify a port, the session is created with standard ports: 80 for HTTP and 443 for HTTPS. To use the default ports for PowerShell remoting, specify port 5985 for HTTP or 5986 for HTTPS.


If the destination computer redirects the connection to a different URI, PowerShell prevents the redirection unless you use the AllowRedirection parameter in the command.`, `Uri`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to connect to the disconnected session. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the ID of a disconnected session. The Id parameter works only when the disconnected session was previously connected to the current session.


This parameter is valid, but not effective, when the session is stored on the local computer, but wasn't connected to the current session.`, `Int32`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies the instance ID of the disconnected session. The instance ID is a GUID that uniquely identifies a PSSession on a local or remote computer. The instance ID is stored in the InstanceID property of the PSSession .`, `Guid`),
            new Parameter_js_3.Parameter(`JobName`, `Specifies a friendly name for the job that "Receive-PSSession" returns.


"Receive-PSSession" returns a job when the value of the OutTarget parameter is Job or the job that's running in the disconnected session was started in the current session.


If the job that's running in the disconnected session was started in the current session, PowerShell reuses the original job object in the session and ignores the value of the JobName parameter.


If the job that's running in the disconnected session was started in a different session, PowerShell creates a new job object. It uses a default name, but you can use this parameter to change the name.


If the default value or explicit value of the OutTarget parameter isn't Job, the command succeeds, but the JobName parameter has no effect.`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the friendly name of the disconnected session.`, `String`),
            new Parameter_js_3.Parameter(`OutTarget`, `Determines how the session results are returned. The acceptable values for this parameter are:


- Job . Returns the results asynchronously in a job object. You can use the JobName parameter   to specify a name or new name for the job. - Host . Returns the results to the command line (synchronously). If the command is being resumed   or the results consist of a large number of objects, the response might be delayed.


The default value of the OutTarget parameter is Host. If the command that's being received in a disconnected session was started in the current session, the default value of the OutTarget parameter is the form in which the command was started. If the command was started as a job, by default, it's returned as a job. Otherwise, it's returned to the host program by default.


Typically, the host program displays returned objects at the command line without delay, but this behavior can vary.`, `OutTarget`),
            new Parameter_js_3.Parameter(`Port`, `Specifies the remote computer's network port that's used to reconnect to the session. To connect to a remote computer, it must be listening on the port that the connection uses. The default ports are 5985, which is the WinRM port for HTTP, and 5986, which is the WinRM port for HTTPS.


Before using an alternate port, you must configure the WinRM listener on the remote computer to listen on that port. To configure the listener, type the following two commands at the PowerShell prompt:


"Remove-Item -Path WSMan:\\Localhost\\listener\\listener* -Recurse"


"New-Item -Path WSMan:\\Localhost\\listener -Transport http -Address * -Port <port-number>"


Don't use the Port parameter unless it's necessary. The port that's set in the command applies to all computers or sessions on which the command runs. An alternate port setting might prevent the command from running on all computers.`, `Int32`),
            new Parameter_js_3.Parameter(`Session`, `Specifies the disconnected session. Enter a variable that contains the PSSession or a command that creates or gets the PSSession , such as a "Get-PSSession" command.`, `PSSession`),
            new Parameter_js_3.Parameter(`SessionOption`, `Specifies advanced options for the session. Enter a SessionOption object, such as one that you create by using the "New-PSSessionOption" cmdlet, or a hash table in which the keys are session option names and the values are session option values.


The default values for the options are determined by the value of the "$PSSessionOption" preference variable, if it's set. Otherwise, the default values are established by options set in the session configuration.


The session option values take precedence over default values for sessions set in the "$PSSessionOption" preference variable and in the session configuration. However, they don't take precedence over maximum values, quotas, or limits set in the session configuration.


For a description of the session options that includes the default values, see "New-PSSessionOption". For information about the $PSSessionOption preference variable, see about_Preference_Variables (./About/about_Preference_Variables.md). For more information about session configurations, see about_Session_Configurations (./About/about_Session_Configurations.md).`, `PSSessionOption`),
            new Parameter_js_3.Parameter(`UseSSL`, `Indicates that this cmdlet uses the Secure Sockets Layer (SSL) protocol to connect to the disconnected session. By default, SSL isn't used.


WS-Management encrypts all PowerShell content transmitted over the network. UseSSL is an additional protection that sends the data across an HTTPS connection instead of an HTTP connection.


If you use this parameter and SSL isn't available on the port that's used for the command, the command fails.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Gets results of commands in disconnected sessions`, `Receive-PSSession [-ConnectionUri] <Uri> [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-JobName <String>] -Name <String> [-OutTarget {Default | Host | Job}] [-SessionOption <PSSessionOption>] [-Confirm] [-WhatIf] [<CommonParameters>]

Receive-PSSession [-ConnectionUri] <Uri> [-AllowRedirection] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] -InstanceId <Guid> [-JobName <String>] [-OutTarget {Default | Host | Job}] [-SessionOption <PSSessionOption>] [-Confirm] [-WhatIf] [<CommonParameters>]

Receive-PSSession [-ComputerName] <String> [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] [-JobName <String>] -Name <String> [-OutTarget {Default | Host | Job}] [-Port <Int32>] [-SessionOption <PSSessionOption>] [-UseSSL] [-Confirm] [-WhatIf] [<CommonParameters>]

Receive-PSSession [-ComputerName] <String> [-ApplicationName <String>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-CertificateThumbprint <String>] [-ConfigurationName <String>] [-Credential <PSCredential>] -InstanceId <Guid> [-JobName <String>] [-OutTarget {Default | Host | Job}] [-Port <Int32>] [-SessionOption <PSSessionOption>] [-UseSSL] [-Confirm] [-WhatIf] [<CommonParameters>]

Receive-PSSession [-Id] <Int32> [-JobName <String>] [-OutTarget {Default | Host | Job}] [-Confirm] [-WhatIf] [<CommonParameters>]

Receive-PSSession -InstanceId <Guid> [-JobName <String>] [-OutTarget {Default | Host | Job}] [-Confirm] [-WhatIf] [<CommonParameters>]

Receive-PSSession [-JobName <String>] -Name <String> [-OutTarget {Default | Host | Job}] [-Confirm] [-WhatIf] [<CommonParameters>]

Receive-PSSession [-Session] <PSSession> [-JobName <String>] [-OutTarget {Default | Host | Job}] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-ArgumentCompleter`, [
            new Parameter_js_3.Parameter(`CommandName`, `Specifies the name of the commands as an array.`, `String[]`),
            new Parameter_js_3.Parameter(`Native`, `Indicates that the argument completer is for a native command where PowerShell cannot complete parameter names.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ParameterName`, `Specifies the name of the parameter whose argument is being completed. The parameter name specified cannot be an enumerated value, such as the ForegroundColor parameter of the "Write-Host" cmdlet.


For more information on enums, see about_Enum (./About/about_Enum.md).`, `String`),
            new Parameter_js_3.Parameter(`ScriptBlock`, `Specifies the commands to run to perform tab completion. The script block you provide should return the values that complete the input. The script block must unroll the values using the pipeline ("ForEach-Object", "Where-Object", etc.), or another suitable method. Returning an array of values causes PowerShell to treat the entire array as one tab completion value.


The script block must accept the following parameters in the order specified below. The names of the parameters aren't important because PowerShell passes in the values by position.


- "$commandName" (Position 0) - This parameter is set to the name of the   command for which the script block is providing tab completion. - "$parameterName" (Position 1) - This parameter is set to the parameter   whose value requires tab completion. - "$wordToComplete" (Position 2) - This parameter is set to value the user has provided before they   pressed <kbd>Tab</kbd>. Your script block should use this value to determine tab completion   values. - "$commandAst" (Position 3) - This parameter is set to the Abstract Syntax   Tree (AST) for the current input line. For more information, see Ast Class (/dotnet/api/system.management.automation.language.ast). - "$fakeBoundParameters" (Position 4) - This parameter is set to a hashtable containing the   "$PSBoundParameters" for the cmdlet, before the user pressed <kbd>Tab</kbd>. For more information,   see about_Automatic_Variables (./About/about_Automatic_Variables.md).


When you specify the Native parameter, the script block must take the following parameters in the specified order. The names of the parameters aren't important because PowerShell passes in the values by position.


- "$wordToComplete" (Position 0) - This parameter is set to value the user has provided before they   pressed <kbd>Tab</kbd>. Your script block should use this value to determine tab completion   values. - "$commandAst" (Position 1) - This parameter is set to the Abstract Syntax   Tree (AST) for the current input line. For more information, see Ast Class (/dotnet/api/system.management.automation.language.ast). - "$cursorPosition" (Position 2) - This parameter is set to the position of the cursor when the user   pressed <kbd>Tab</kbd>.


You can also provide an ArgumentCompleter as a parameter attribute. For more information, see about_Functions_Advanced_Parameters (./About/about_Functions_Advanced_Parameters.md).`, `ScriptBlock`),
        ], `Registers a custom argument completer.`, `Register-ArgumentCompleter [-CommandName <String[]>] [-Native] -ScriptBlock <ScriptBlock> [<CommonParameters>]

Register-ArgumentCompleter [-CommandName <String[]>] -ParameterName <String> -ScriptBlock <ScriptBlock> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-CimIndicationEvent`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-EngineEvent`, [
            new Parameter_js_3.Parameter(`Action`, `Specifies commands to handle the events. The commands in the Action run when an event is raised, instead of sending the event to the event queue. Enclose the commands in braces ( { } ) to create a script block.


The value of the Action parameter can include the "$Event", "$EventSubscriber", "$Sender", "$EventArgs", and "$Args" automatic variables, which provide information about the event to the Action script block. For more information, see about_Automatic_Variables (../Microsoft.PowerShell.Core/About/about_Automatic_Variables.md).


When you specify an action, "Register-EngineEvent" returns an event job object that represents that action. You can use the Job cmdlets to manage the event job.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`Forward`, `Indicates that the cmdlet sends events for this subscription to the session on the local computer. Use this parameter when you are registering for events on a remote computer or in a remote session.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`MaxTriggerCount`, `Specifies the maximum number of times that the action will be executed for the event subscription.`, `Int32`),
            new Parameter_js_3.Parameter(`MessageData`, `Specifies additional data associated with the event. The value of this parameter appears in the MessageData property of the event object.`, `PSObject`),
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies the source identifier of the event to which you are subscribing. The source identifier must be unique in the current session. This parameter is required.


The value of this parameter appears in the value of the SourceIdentifier property of the subscriber object and of all event objects associated with this subscription.


The value is specific to the source of the event. This can be an arbitrary value you created to use with the "New-Event" cmdlet. The PowerShell engine supports the EngineEvent values PowerShell.Exiting and PowerShell.OnIdle .`, `String`),
            new Parameter_js_3.Parameter(`SupportEvent`, `Indicates that the cmdlet hides the event subscription. Add this parameter when the current subscription is part of a more complex event registration mechanism and it should not be discovered independently.


To view or cancel a subscription that was created with the SupportEvent parameter, add the Force parameter to the "Get-EventSubscriber" or "Unregister-Event" cmdlets.`, `SwitchParameter`),
        ], `Subscribes to events that are generated by the PowerShell engine and by the New-Event cmdlet.`, `Register-EngineEvent [-SourceIdentifier] <String> [[-Action] <ScriptBlock>] [-Forward] [-MaxTriggerCount <Int32>] [-MessageData <PSObject>] [-SupportEvent] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-ObjectEvent`, [
            new Parameter_js_3.Parameter(`Action`, `Specifies the commands to handle the event. The commands in the Action run when an event is raised, instead of sending the event to the event queue. Enclose the commands in braces ( { } ) to create a script block.


The value of the Action parameter can include the "$Event", "$EventSubscriber", "$Sender", "$EventArgs", and "$Args" automatic variables. These variables provide information about the event to the Action script block. For more information, see about_Automatic_Variables (../Microsoft.PowerShell.Core/About/about_Automatic_Variables.md).


When you specify an action, "Register-ObjectEvent" returns an event job object that represents that action. You can use the Job cmdlets to manage the event job.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`EventName`, `Specifies the event to which you are subscribing.


The value of this parameter must be the name of the event that the .NET object exposes. For example, the ManagementEventWatcher class has events named EventArrived and Stopped . To find the event name of an event, use the "Get-Member" cmdlet.`, `String`),
            new Parameter_js_3.Parameter(`Forward`, `Indicates that the cmdlet sends events for this subscription to a remote session. Use this parameter when you are registering for events on a remote computer or in a remote session.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the .NET object that generates the events. Enter a variable that contains the object, or type a command or expression that gets the object.`, `PSObject`),
            new Parameter_js_3.Parameter(`MaxTriggerCount`, `Specifies the maximum number of times an event can be triggered.`, `Int32`),
            new Parameter_js_3.Parameter(`MessageData`, `Specifies any additional data to be associated with this event subscription. The value of this parameter appears in the MessageData property of all events associated with this subscription.`, `PSObject`),
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies a name that you select for the subscription. The name that you select must be unique in the current session. The default value is the GUID that PowerShell assigns.


The value of this parameter appears in the value of the SourceIdentifier property of the subscriber object and all event objects associated with this subscription.`, `String`),
            new Parameter_js_3.Parameter(`SupportEvent`, `Indicates that the cmdlet hides the event subscription. Use this parameter when the current subscription is part of a more complex event registration mechanism and should not be discovered independently.


To view or cancel a subscription that was created with the SupportEvent parameter, use the Force parameter of the "Get-EventSubscriber" and "Unregister-Event" cmdlets.`, `SwitchParameter`),
        ], `Subscribes to the events that are generated by a Microsoft .NET Framework object.`, `Register-ObjectEvent [-InputObject] <PSObject> [-EventName] <String> [[-SourceIdentifier] <String>] [[-Action] <ScriptBlock>] [-Forward] [-MaxTriggerCount <Int32>] [-MessageData <PSObject>] [-SupportEvent] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-PackageSource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-PSSessionConfiguration`, [
            new Parameter_js_3.Parameter(`AccessMode`, `Enables and disables the session configuration and determines whether it can be used for remote or local sessions on the computer. The acceptable values for this parameter are:


- Disabled. Disables the session configuration. It cannot be used for remote or local access to the   computer. - Local. Allows users of the local computer to use the session configuration to create a local   loopback session on the same computer, but denies access to remote users. - Remote. Allows local and remote users to use the session configuration to create sessions and run   commands on this computer.


The default value is Remote.


Other cmdlets can override the value of this parameter later. For example, the "Enable-PSRemoting" cmdlet allows for remote access to all session configurations, the "Enable-PSSessionConfiguration" cmdlet enables session configurations, and the "Disable-PSRemoting" cmdlet prevents remote access to all session configurations.


This parameter was introduced in PowerShell 3.0.`, `PSSessionConfigurationAccessMode`),
            new Parameter_js_3.Parameter(`ApplicationBase`, `Specifies the path of the assembly file (*.dll) that is specified in the value of the AssemblyName parameter. Use this parameter when the value of the AssemblyName parameter does not include a path. The default is the current directory.`, `String`),
            new Parameter_js_3.Parameter(`AssemblyName`, `Specifies the name of an assembly file (*.dll) in which the configuration type is defined. You can specify the path of the .dll in this parameter or in the value of the ApplicationBase parameter.


This parameter is required when you specify the ConfigurationTypeName parameter.`, `String`),
            new Parameter_js_3.Parameter(`ConfigurationTypeName`, `Specifies the fully qualified name of the Microsoft .NET Framework type that is used for this configuration. The type that you specify must implement the System.Management.Automation.Remoting.PSSessionConfiguration class.


To specify the assembly file (*.dll) that implements the configuration type, specify the AssemblyName and ApplicationBase parameters.


Creating a type lets you control more aspects of the session configuration, such as exposing or hiding certain parameters of cmdlets, or setting data size and object size limits that users cannot override.


If you omit this parameter, the DefaultRemotePowerShellConfiguration class is used for the session configuration.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Suppresses all user prompts and restarts the WinRM service without prompting. Restarting the service makes the configuration change effective.


To prevent a restart and suppress the restart prompt, specify the NoServiceRestart parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`MaximumReceivedDataSizePerCommandMB`, `Specifies a limit for the amount of data that can be sent to this computer in any single remote command. Enter the data size in megabytes (MB). The default is 50 MB.


If a data size limit is defined in the configuration type that is specified in the ConfigurationTypeName parameter, the limit in the configuration type is used and the value of this parameter is ignored.`, `Double`),
            new Parameter_js_3.Parameter(`MaximumReceivedObjectSizeMB`, `Specifies a limit for the amount of data that can be sent to this computer in any single object. Enter the data size in megabytes. The default is 10 MB.


If an object size limit is defined in the configuration type that is specified in the ConfigurationTypeName parameter, the limit in the configuration type is used and the value of this parameter is ignored.`, `Double`),
            new Parameter_js_3.Parameter(`ModulesToImport`, `Specifies the modules that are automatically imported into sessions that use the session configuration.


By default, only Microsoft.PowerShell.Core is imported into sessions. Unless the cmdlets are excluded, you can use "Import-Module" to add modules to the session.


The modules specified in this parameter value are imported in additions to modules that are specified by the SessionType parameter and those listed in the ModulesToImport key in the session configuration file ("New-PSSessionConfigurationFile"). However, settings in the session configuration file can hide the commands exported by modules or prevent users from using them.


This parameter was introduced in PowerShell 3.0.`, `Object[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a name for the session configuration. This parameter is required.`, `String`),
            new Parameter_js_3.Parameter(`NoServiceRestart`, `Does not restart the WinRM service, and suppresses the prompt to restart the service.


By default, when you run a "Register-PSSessionConfiguration" command, you are prompted to restart the WinRM service to make the new session configuration effective. Until the WinRM service is restarted, the new session configuration is not effective.


To restart the WinRM service without prompting, specify the Force parameter. To restart the WinRM service manually, use the "Restart-Service" cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path and filename of a session configuration file (.pssc), such as one created by "New-PSSessionConfigurationFile". If you omit the path, the default is the current directory.


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`ProcessorArchitecture`, `Determines whether a 32-bit or 64-bit version of the PowerShell process is started in sessions that use this session configuration. The acceptable values for this parameter are: x86 (32-bit) and AMD64 (64-bit). The default value is determined by the processor architecture of the computer that hosts the session configuration.


You can use this parameter to create a 32-bit session on a 64-bit computer. Attempts to create a 64-bit process on a 32-bit computer fail.`, `String`),
            new Parameter_js_3.Parameter(`PSVersion`, `Specifies the version of PowerShell in sessions that use this session configuration.


The value of this parameter takes precedence over the value of the PowerShellVersion key in the session configuration file.


This parameter was introduced in PowerShell 3.0.`, `Version`),
            new Parameter_js_3.Parameter(`RunAsCredential`, `Specifies credentials for commands in the session. By default, commands run with the permissions of the current user.


This parameter was introduced in PowerShell 3.0.`, `PSCredential`),
            new Parameter_js_3.Parameter(`SecurityDescriptorSddl`, `Specifies a Security Descriptor Definition Language (SDDL) string for the configuration.


This string determines the permissions that are required to use the new session configuration. To use a session configuration in a session, users must have at least Execute (Invoke) permission for the configuration.


If the security descriptor is complex, consider using the ShowSecurityDescriptorUI parameter instead of this parameter. You cannot use both parameters in the same command.


If you omit this parameter, the root SDDL for the WinRM service is used for this configuration. To view or change the root SDDL, use the WSMan provider. For example "Get-Item wsman:\\localhost\\service\\rootSDDL". For more information about the WSMan provider, type "Get-Help wsman".`, `String`),
            new Parameter_js_3.Parameter(`SessionType`, `Specifies the type of session that is created by using the session configuration. The acceptable values for this parameter are:


- Empty. No modules are added to session by default. Use the parameters of this cmdlet to add   modules, functions, scripts, and other features to the session. - Default. Adds Microsoft.PowerShell.Core to the session. This module includes the "Import-Module"   cmdlet that users can use to import other modules unless you explicitly prohibit the cmdlet. - RestrictedRemoteServer. Includes only the following cmdlets: "Exit-PSSession", "Get-Command",   "Get-FormatData", "Get-Help", "Measure-Object", "Out-Default", and "Select-Object". Use a script   or assembly, or the keys in the session configuration file, to add modules, functions, scripts,   and other features to the session.


The default value is Default.


The value of this parameter takes precedence over the value of the SessionType key in the session configuration file.


This parameter was introduced in PowerShell 3.0.`, `PSSessionType`),
            new Parameter_js_3.Parameter(`SessionTypeOption`, `Specifies type-specific options for the session configuration. Enter a session type options object, such as the PSWorkflowExecutionOption object that the "New-PSWorkflowExecutionOption" cmdlet returns.


The options of sessions that use the session configuration are determined by the values of session options and the session configuration options. Unless specified, options set in the session, such as by using the "New-PSSessionOption" cmdlet, take precedence over options set in the session configuration. However, session option values cannot exceed maximum values set in the session configuration.


This parameter was introduced in PowerShell 3.0.`, `PSSessionTypeOption`),
            new Parameter_js_3.Parameter(`ShowSecurityDescriptorUI`, `Indicates that this cmdlet displays a property sheet that helps you create the SDDL for the session configuration. The property sheet appears after you enter the "Register-PSSessionConfiguration" command and then restart the WinRM service.


When setting the permissions for the configuration, remember that users must have at least Execute (Invoke) permission to use the session configuration in a session.


You cannot use the SecurityDescriptorSDDL parameter and this parameter in the same command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`StartupScript`, `Specifies the fully qualified path of a PowerShell script. The specified script runs in the new session that uses the session configuration.


You can use the script to additionally configure the session. If the script generates an error, even a non-terminating error, the session is not created and the "New-PSSession" command fails.`, `String`),
            new Parameter_js_3.Parameter(`ThreadOptions`, `Specifies how threads are created and used when a command runs in the session. The acceptable values for this parameter are:


- Default


- ReuseThread


- UseCurrentThread


- UseNewThread




The default value is UseCurrentThread .

For more information, see PSThreadOptions Enumeration (/dotnet/api/system.management.automation.runspaces.psthreadoptions?view=powershellsdk-1.1.0).`, `PSThreadOptions`),
            new Parameter_js_3.Parameter(`TransportOption`, `Specifies the transport option.


This parameter was introduced in PowerShell 3.0.`, `PSTransportOption`),
            new Parameter_js_3.Parameter(`UseSharedProcess`, `Use only one process to host all sessions that are started by the same user and use the same session configuration. By default, each session is hosted in its own process.


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates and registers a new session configuration.`, `Register-PSSessionConfiguration [-Name] <String> [-AccessMode {Disabled | Local | Remote}] [-ApplicationBase <String>] [-Force] [-MaximumReceivedDataSizePerCommandMB <Double>] [-MaximumReceivedObjectSizeMB <Double>] [-ModulesToImport <Object[]>] [-NoServiceRestart] [-ProcessorArchitecture {x86 | amd64}] [-PSVersion <Version>] [-RunAsCredential <PSCredential>] [-SecurityDescriptorSddl <String>] [-SessionType {DefaultRemoteShell | Workflow}] [-SessionTypeOption <PSSessionTypeOption>] [-ShowSecurityDescriptorUI] [-StartupScript <String>] [-ThreadOptions {Default | UseNewThread | ReuseThread | UseCurrentThread}] [-TransportOption <PSTransportOption>] [-UseSharedProcess] [-Confirm] [-WhatIf] [<CommonParameters>]

Register-PSSessionConfiguration [-Name] <String> [-AssemblyName] <String> [-ConfigurationTypeName] <String> [-AccessMode {Disabled | Local | Remote}] [-ApplicationBase <String>] [-Force] [-MaximumReceivedDataSizePerCommandMB <Double>] [-MaximumReceivedObjectSizeMB <Double>] [-ModulesToImport <Object[]>] [-NoServiceRestart] [-ProcessorArchitecture {x86 | amd64}] [-PSVersion <Version>] [-RunAsCredential <PSCredential>] [-SecurityDescriptorSddl <String>] [-SessionTypeOption <PSSessionTypeOption>] [-ShowSecurityDescriptorUI] [-StartupScript <String>] [-ThreadOptions {Default | UseNewThread | ReuseThread | UseCurrentThread}] [-TransportOption <PSTransportOption>] [-UseSharedProcess] [-Confirm] [-WhatIf] [<CommonParameters>]

Register-PSSessionConfiguration [-Name] <String> [-AccessMode {Disabled | Local | Remote}] [-Force] [-MaximumReceivedDataSizePerCommandMB <Double>] [-MaximumReceivedObjectSizeMB <Double>] [-NoServiceRestart] -Path <String> [-ProcessorArchitecture {x86 | amd64}] [-RunAsCredential <PSCredential>] [-SecurityDescriptorSddl <String>] [-ShowSecurityDescriptorUI] [-StartupScript <String>] [-ThreadOptions {Default | UseNewThread | ReuseThread | UseCurrentThread}] [-TransportOption <PSTransportOption>] [-UseSharedProcess] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Register-ScheduledJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Alias`, [
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet removes an alias, including aliases with the Option property set to ReadOnly . The Force parameter can't remove an alias with an Option property set to Constant .`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the alias to remove.`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Affects only the aliases in the specified scope. The default scope is Local . For more information, see about_Scopes (../microsoft.powershell.core/about/about_scopes.md).


The acceptable values for this parameter are:


- Global


- Local


- Script


- A number relative to the current scope (0 through the number of scopes, where 0 is the current


scope and 1 is its parent)`, `String`),
        ], `Remove an alias from the current session.`, `Remove-Alias [-Name] <String[]> [-Force] [-Scope <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-AppxPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-AppxProvisionedPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-AppxVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-BitsTransfer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-CertificateEnrollmentPolicyServer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-CertificateNotificationTask`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-CimInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-CimSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-CIPolicyRule`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Event`, [
            new Parameter_js_3.Parameter(`EventIdentifier`, `Specifies the event identifier for which the cmdlet deletes. An EventIdentifier or SourceIdentifier parameter is required in every command.`, `Int32`),
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies the source identifier for which this cmdlet deletes events from. Wildcards are not permitted. An EventIdentifier or SourceIdentifier parameter is required in every command.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes events from the event queue.`, `Remove-Event [-EventIdentifier] <Int32> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-Event [-SourceIdentifier] <String> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Item`, [
            new Parameter_js_3.Parameter(`Stream`, `The Stream parameter is a dynamic parameter that the FileSystem provider adds to "Remove-Item". This parameter works only in file system drives.


You can use "Remove-Item" to delete an alternative data stream. However, it is not the recommended way to eliminate security checks that block files that are downloaded from the Internet. If you verify that a downloaded file is safe, use the "Unblock-File" cmdlet.


This parameter was introduced in Windows PowerShell 3.0.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to remove items that cannot otherwise be changed, such as hidden or read-only files or read-only aliases or variables. The cmdlet cannot remove constant aliases or variables. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md). Even using the Force parameter, the cmdlet cannot override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies a path of the items being removed. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Recurse`, `Indicates that this cmdlet deletes the items in the specified locations and in all child items of the locations.


When it is used with the Include parameter, the Recurse parameter might not delete all subfolders or all child items. This is a known issue. As a workaround, try piping results of the "Get-ChildItem -Recurse" command to "Remove-Item", as described in "Example 4" in this topic.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes the specified items.`, `Remove-Item [-Stream <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Recurse] [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-Item [-Path] <String[]> [-Stream <String[]>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Recurse] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to remove a property of an object that cannot otherwise be accessed by the user. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of the properties to remove. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of the item whose properties are being removed. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes the property and its value from an item.`, `Remove-ItemProperty [-Name] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-ItemProperty [-Path] <String[]> [-Name] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Job`, [
            new Parameter_js_3.Parameter(`Command`, `Deletes jobs that include the specified words in the command. You can enter a comma-separated array.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before "Remove-Job" is run.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Filter`, `Deletes jobs that satisfy all the conditions established in the associated hash table. Enter a hash table where the keys are job properties and the values are job property values.


This parameter works only on custom job types, such as workflow jobs and scheduled jobs. It doesn't work on standard background jobs, such as those created by using the "Start-Job".


This parameter is introduced in PowerShell 3.0.`, `Hashtable`),
            new Parameter_js_3.Parameter(`Force`, `Deletes a job even if the job's state is Running . If the Force parameter isn't specified, "Remove-Job" doesn't delete running jobs.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Id`, `Deletes background jobs with the specified Id . You can enter a comma-separated array. The job's Id is a unique integer that identifies a job within the current session.


To find a job's Id , use "Get-Job" without parameters.`, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, `Deletes jobs with the specified InstanceId . You can enter a comma-separated array. An InstanceId is a unique GUID that identifies a job.


To find a job's InstanceId , use "Get-Job".`, `Guid[]`),
            new Parameter_js_3.Parameter(`Job`, `Specifies the jobs to be deleted. Enter a variable that contains the jobs or a command that gets the jobs. You can enter a comma-separated array.


You can send job objects down the pipeline to "Remove-Job".`, `Job[]`),
            new Parameter_js_3.Parameter(`Name`, `Only deletes jobs with the specified friendly name. Wildcards are permitted. You can enter a comma-separated array.


Friendly names for jobs aren't guaranteed to be unique, even within a PowerShell session. Use the WhatIf and Confirm parameters when you delete files by name.`, `String[]`),
            new Parameter_js_3.Parameter(`State`, `Only deletes jobs with the specified state. To delete jobs with a state of Running , use the Force parameter.


Accepted values:


- AtBreakpoint


- Blocked


- Completed


- Disconnected


- Failed


- NotStarted


- Running


- Stopped


- Stopping


- Suspended


- Suspending`, `JobState`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if "Remove-Job" runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Deletes a PowerShell background job.`, `Remove-Job [-Command <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-Job [-Filter] <Hashtable> [-Confirm] [-Force] [-WhatIf] [<CommonParameters>]

Remove-Job [-Id] <Int32[]> [-Confirm] [-Force] [-WhatIf] [<CommonParameters>]

Remove-Job [-Job] <Job[]> [-Confirm] [-Force] [-WhatIf] [<CommonParameters>]

Remove-Job [-Name] <String[]> [-Confirm] [-Force] [-WhatIf] [<CommonParameters>]

Remove-Job [-InstanceId] <Guid[]> [-Confirm] [-Force] [-WhatIf] [<CommonParameters>]

Remove-Job [-State] {AtBreakpoint | Blocked | Completed | Disconnected | Failed | NotStarted | Running | Stopped | Stopping | Suspended | Suspending} [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-JobTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-LocalGroup`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-LocalGroupMember`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-LocalUser`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Module`, [
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet removes read-only modules. By default, Remove-Module removes only read-write modules.


The ReadOnly and ReadWrite values are stored in AccessMode property of a module.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FullyQualifiedName`, `Specifies the fully qualified names of modules to remove.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`ModuleInfo`, `Specifies the module objects to remove. Enter a variable that contains a module object ( PSModuleInfo ) or a command that gets a module object, such as a Get-Module command. You can also pipe module objects to Remove-Module .`, `PSModuleInfo[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of modules to remove. Wildcard characters are permitted. You can also pipe name strings to Remove-Module .`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Removes modules from the current session.`, `Remove-Module [-FullyQualifiedName] <ModuleSpecification[]> [-Force] [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-Module [-ModuleInfo] <PSModuleInfo[]> [-Force] [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-Module [-Name] <String[]> [-Force] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PmemDisk`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PSBreakpoint`, [
            new Parameter_js_3.Parameter(`Breakpoint`, `Specifies the breakpoints to delete. Enter a variable that contains breakpoint objects or a command that gets breakpoint objects, such as a Get-PSBreakpoint command. You can also pipe breakpoint objects to Remove-PSBreakpoint .`, `Breakpoint[]`),
            new Parameter_js_3.Parameter(`Id`, `Specifies breakpoint IDs for which this cmdlet deletes breakpoints.`, `Int32[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes breakpoints from the current console.`, `Remove-PSBreakpoint [-Breakpoint] <Breakpoint[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSBreakpoint [-Id] <Int32[]> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PSDrive`, [
            new Parameter_js_3.Parameter(`Force`, `Removes the current PowerShell drive.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralName`, `Specifies the name of the drive.


The value of LiteralName is used exactly as typed. No characters are interpreted as wildcards. If the name includes escape characters, enclose it in single quotation marks ('). Single quotation marks instruct PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of the drives to remove. Do not type a colon (:) after the drive name.`, `String[]`),
            new Parameter_js_3.Parameter(`PSProvider`, `Specifies an array of PSProvider objects. This cmdlet removes and disconnects all of the drives associated with the specified PowerShell provider.`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies a scope for the drive. The acceptable values for this parameter are: Global, Local, and Script, or a number relative to the current scope. Scopes number 0 through the number of scopes. The current scope number is 0 and its parent is 1. For more information, see about_Scopes (../Microsoft.PowerShell.Core/About/about_Scopes.md).`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes temporary PowerShell drives and disconnects mapped network drives.`, `Remove-PSDrive [-LiteralName] <String[]> [-Force] [-PSProvider <String[]>] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSDrive [-Name] <String[]> [-Force] [-PSProvider <String[]>] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PSReadLineKeyHandler`, [
            new Parameter_js_3.Parameter(`Chord`, ``, `string[]`),
            new Parameter_js_3.Parameter(`ViMode`, ``, `ViMode`),
        ], `Remove-PSReadLineKeyHandler [-Chord] <string[]> [-ViMode <ViMode>] [<CommonParameters>]`, `syntaxItem
----------
{@{name=Remove-PSReadLineKeyHandler; CommonParameters=True; parameter=System.Object[]}}`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-PSSession`, [
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies an array of names of computers. This cmdlet closes the PSSessions that are connected to the specified computers. Wildcard characters are permitted.


Type the NetBIOS name, an IP address, or a fully qualified domain name of one or more remote computers. To specify the local computer, type the computer name, localhost, or a dot (.).`, `String[]`),
            new Parameter_js_3.Parameter(`ContainerId`, `Specifies an array of IDs of containers. This cmdlet removes sessions for each of the specified containers. Use the "docker ps" command to get a list of container IDs. For more information, see the help for the docker ps (https://docs.docker.com/engine/reference/commandline/ps/)command.`, `String[]`),
            new Parameter_js_3.Parameter(`Id`, `Specifies an array of IDs of sessions. This cmdlet closes the PSSessions with the specified IDs. Type one or more IDs, separated by commas, or use the range operator (..) to specify a range of IDs.


An ID is an integer that uniquely identifies the PSSession in the current session. It is easier to remember and type than the InstanceId , but it is unique only in the current session. To find the ID of a PSSession , run the Get-PSSession cmdlet without parameters.`, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies an array of instance IDs. This cmdlet closes the PSSessions that have the specified instance IDs.


The instance ID is a GUID that uniquely identifies a PSSession in the current session. The instance ID is unique, even when you have multiple sessions running on a single computer.


The instance ID is stored in the InstanceID property of the object that represents a PSSession . To find the InstanceID of the PSSessions in the current session, type "Get-PSSession | Format-Table Name, ComputerName, InstanceId".`, `Guid[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies an array of friendly names of sessions. This cmdlet closes the PSSessions that have the specified friendly names. Wildcard characters are permitted.


Because the friendly name of a PSSession might not be unique, when you use the Name parameter, consider also using the WhatIf or Confirm parameter in the Remove-PSSession command.`, `String[]`),
            new Parameter_js_3.Parameter(`Session`, `Specifies the session objects of the PSSessions to close. Enter a variable that contains the PSSessions or a command that creates or gets the PSSessions , such as a New-PSSession or Get-PSSession command. You can also pipe one or more session objects to Remove-PSSession .`, `PSSession[]`),
            new Parameter_js_3.Parameter(`VMId`, `Specifies an array of ID of virtual machines. This cmdlet starts an interactive session with each of the specified virtual machines. To see the virtual machines that are available to you, use the following command:


"Get-VM | Select-Object -Property Name, ID"`, `Guid[]`),
            new Parameter_js_3.Parameter(`VMName`, `Specifies an array of names of virtual machines. This cmdlet starts an interactive session with each of the specified virtual machines. To see the virtual machines that are available to you, use the Get-VM cmdlet.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Closes one or more PowerShell sessions (PSSessions).`, `Remove-PSSession [-ComputerName] <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSSession -ContainerId <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSSession [-Id] <Int32[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSSession -InstanceId <Guid[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSSession -Name <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSSession [-Session] <PSSession[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSSession -VMId <Guid[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-PSSession -VMName <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Service`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies ServiceController objects that represent the services to remove. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `ServiceController`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service names of the services to remove. Wildcard characters are permitted.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Removes a Windows service.`, `Remove-Service [-InputObject <ServiceController>] [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-Service [-Name] <String> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-TypeData`, [
            new Parameter_js_3.Parameter(`Path`, `Specifies an array of files that this cmdlet deletes from the session extended type data. This parameter is required.


Enter the paths and file names of one or more Types.ps1xml files. Wildcards are not supported. If you omit the path, the default location is the current directory.`, `String[]`),
            new Parameter_js_3.Parameter(`TypeData`, `Specifies the type data that this cmdlet deletes from the session. This parameter is required. Enter a variable that contains TypeData objects ( System.Management.Automation.Runspaces.TypeData ) or a command that gets TypeData objects, such as a Get-TypeData command. You can also pipe TypeData objects to Remove-TypeData .`, `TypeData`),
            new Parameter_js_3.Parameter(`TypeName`, `Specifies the types that this cmdlet deletes all extended type data for. For types in the System namespace, enter the short name. Otherwise, the full type name is required. Wildcards are not supported.


You can pipe type names to Remove-TypeData . When you pipe an object to Remove-TypeData , Remove-TypeData gets the type name of the object and removes all type data for the object type.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes extended types from the current session.`, `Remove-TypeData -Path <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-TypeData -TypeData <TypeData> [-Confirm] [-WhatIf] [<CommonParameters>]

Remove-TypeData [-TypeName] <String> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-Variable`, [
            new Parameter_js_3.Parameter(`Exclude`, `Specifies an array of items that this cmdlet omits from the operation. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet removes a variable even if it is read-only. Even using the Force parameter, the cmdlet cannot remove a constant.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies an array of items that this cmdlet deletes in the operation. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as s*. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the variable to be removed. The parameter name ( Name ) is optional.`, `String[]`),
            new Parameter_js_3.Parameter(`Scope`, `Gets only the variables in the specified scope. The acceptable values for this parameter are:


- Global


- Local


- Script


- A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent)




Local is the default. For more information, see about_Scopes.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes a variable and its value.`, `Remove-Variable [-Name] <String[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-Scope <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-WindowsCapability`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-WindowsDriver`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-WindowsPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Remove-WSManInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-Computer`, [
            new Parameter_js_3.Parameter(`ComputerName`, `Renames the specified remote computer. The default is the local computer.


Type the NetBIOS name, an IP address, or a fully qualified domain name of a remote computer. To specify the local computer, type the computer name, a dot ("."), or "localhost".


This parameter does not rely on PowerShell remoting. You can use the ComputerName parameter of "Rename-Computer" even if your computer is not configured to run remote commands.`, `String`),
            new Parameter_js_3.Parameter(`DomainCredential`, `Specifies a user account that has permission to connect to the domain. Explicit credentials are required to rename a computer that is joined to a domain.


Type a user name, such as "User01" or "Domain01\\User01", or enter a PSCredential object, such as one generated by the "Get-Credential" cmdlet.


If you type a user name, this cmdlet prompts you for a password.


To specify a user account that has permission to connect to the computer that is specified by the ComputerName parameter, use the LocalCredential parameter.`, `PSCredential`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LocalCredential`, `Specifies a user account that has permission to connect to the computer specified by the ComputerName parameter. The default is the current user.


Type a user name, such as "User01" or "Domain01\\User01", or enter a PSCredential object, such as one generated by the "Get-Credential" cmdlet.


If you type a user name, this cmdlet prompts you for a password.


To specify a user account that has permission to connect to the domain, use the DomainCredential parameter.`, `PSCredential`),
            new Parameter_js_3.Parameter(`NewName`, `Specifies a new name for the computer. This parameter is required.


Standard names may contain letters ("a-z"), ("A-Z"), numbers ("0-9"), and hyphens ("-"), but no spaces or periods ("."). The name may not consist entirely of digits, and may not be longer than 63 characters`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns the results of the command. Otherwise, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Restart`, `Indicates that this cmdlet restarts the computer that was renamed. A restart is often required to make the change effective.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WsmanAuthentication`, `Specifies the mechanism that is used to authenticate the user credentials when this cmdlet uses the WSMan protocol. The acceptable values for this parameter are:


- Basic - CredSSP - Default - Digest - Kerberos - Negotiate The default value is Default .


For more information about the values of this parameter, see AuthenticationMechanism Enumeration (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).


> [!WARNING] > Credential Security Service Provider (CredSSP) authentication, in which the user > credentials are passed to a remote computer to be authenticated, is designed for commands that > require authentication on more than one resource, such as accessing a remote network share. > This mechanism increases the security risk of the remote operation. > If the remote computer is compromised, the credentials that are passed to it can be used to > control > the network session.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Renames a computer.`, `Rename-Computer [-NewName] <String> [-ComputerName <String>] [-DomainCredential <PSCredential>] [-Force] [-LocalCredential <PSCredential>] [-PassThru] [-Restart] [-WsmanAuthentication {Default | Basic | Negotiate | CredSSP | Digest | Kerberos}] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-Item`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. To impersonate another > user, or elevate your credentials when running this cmdlet, use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to rename items that can't otherwise be changed, such as hidden or read-only files or read-only aliases or variables. The cmdlet can't change constant aliases or variables. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).


Even using the Force parameter, the cmdlet can't override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String`),
            new Parameter_js_3.Parameter(`NewName`, `Specifies the new name of the item. Enter only a name, not a path and name. If you enter a path that differs from the path that is specified in the Path parameter, "Rename-Item" generates an error. To rename and move an item, use "Move-Item".


You can't use wildcard characters in the value of the NewName parameter. To specify a name for multiple files, use the Replace operator in a regular expression. For more information about the Replace operator, see about_Comparison_Operators (../Microsoft.PowerShell.Core/About/about_Comparison_Operators.md).`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the item to the pipeline. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of the item to rename.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Renames an item in a PowerShell provider namespace.`, `Rename-Item [-NewName] <String> [-Credential <PSCredential>] [-Force] -LiteralPath <String> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Rename-Item [-Path] <String> [-NewName] <String> [-Credential <PSCredential>] [-Force] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to rename a property of an object that cannot otherwise be accessed by the user. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the current name of the property to rename.`, `String`),
            new Parameter_js_3.Parameter(`NewName`, `Specifies the new name for the property.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the item property. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of the item to rename. Wildcard characters are permitted.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Renames a property of an item.`, `Rename-ItemProperty [-Name] <String> [-NewName] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Rename-ItemProperty [-Path] <String> [-Name] <String> [-NewName] <String> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-LocalGroup`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Rename-LocalUser`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Repair-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resolve-DnsName`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resolve-Path`, [
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to perform this action. The default is the current user.


Type a user name, such as User01 or Domain01\\User01, or pass a PSCredential object. You can create a PSCredential object using the "Get-Credential" cmdlet. If you type a user name, this cmdlet prompts you for a password.


This parameter is not supported by any providers installed with PowerShell.`, `PSCredential`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to be resolved. The value of the LiteralPath parameter is used exactly as typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the PowerShell path to resolve. This parameter is required. You can also pipe a path string to "Resolve-Path". Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Relative`, `Indicates that this cmdlet returns a relative path.`, `SwitchParameter`),
        ], `Resolves the wildcard characters in a path, and displays the path contents.`, `Resolve-Path [-Credential <PSCredential>] -LiteralPath <String[]> [-Relative] [<CommonParameters>]

Resolve-Path [-Path] <String[]> [-Credential <PSCredential>] [-Relative] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Restart-Computer`, [
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies one computer name or a comma-separated array of computer names. "Restart-Computer" accepts ComputerName objects from the pipeline or variables.


Type the NetBIOS name, an IP address, or a fully qualified domain name of a remote computer. To specify the local computer, type the computer name, a dot ".", or localhost.


This parameter doesn't rely on PowerShell remoting. You can use the ComputerName parameter even if your computer isn't configured to run remote commands.


If the ComputerName parameter isn't specified, "Restart-Computer" restarts the local computer.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to do this action. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Delay`, `Specifies the frequency of queries, in seconds. PowerShell queries the service specified by the For parameter to determine whether the service is available after the computer is restarted.


This parameter is valid only together with the Wait and For parameters.


This parameter was introduced in Windows PowerShell 3.0.


If the Delay parameter isn't specified, "Restart-Computer" uses a five second delay.`, `Int16`),
            new Parameter_js_3.Parameter(`For`, `Specifies the behavior of PowerShell as it waits for the specified service or feature to become available after the computer restarts. This parameter is only valid with the Wait parameter.


The acceptable values for this parameter are:


- Default : Waits for PowerShell to restart. - PowerShell : Can run commands in a PowerShell remote session on the computer. - WMI : Receives a reply to a Win32_ComputerSystem query for the computer. - WinRM : Can establish a remote session to the computer by using WS-Management.


This parameter was introduced in Windows PowerShell 3.0.`, `WaitForServiceTypes`),
            new Parameter_js_3.Parameter(`Force`, `Forces an immediate restart of the computer.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Timeout`, `Specifies the duration of the wait, in seconds. When the timeout elapses, "Restart-Computer" returns to the command prompt, even if the computers aren't restarted.


The Timeout parameter is only valid with the Wait parameter. Timeout overrides the Wait parameter's indefinite waiting period.


This parameter was introduced in Windows PowerShell 3.0.`, `Int32`),
            new Parameter_js_3.Parameter(`Wait`, `"Restart-Computer" suppresses the PowerShell prompt and blocks the pipeline until the computers have restarted. You can use this parameter in a script to restart computers and then continue to process when the restart is finished.


The Wait parameter waits indefinitely for the computers to restart. You can use Timeout to adjust the timing and the For and Delay parameters to wait for particular services to become available on the restarted computers.


The Wait parameter isn't valid when you're restarting the local computer. If the value of the ComputerName parameter contains the names of remote computers and the local computer, "Restart-Computer" generates a non-terminating error for Wait on the local computer, but waits for the remote computers to restart.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WsmanAuthentication`, `Specifies the mechanism that is used to authenticate the user credentials. This parameter was introduced in Windows PowerShell 3.0.


The acceptable values for this parameter are: Basic , CredSSP , Default , Digest , Kerberos , and Negotiate .


For more information, see AuthenticationMechanism (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).


> [!WARNING] > Credential Security Service Provider (CredSSP) authentication, in which the user credentials are > passed to a remote computer to be authenticated, is designed for commands that require > authentication on more than one resource, such as accessing a remote network share. This mechanism > increases the security risk of the remote operation. If the remote computer is compromised, the > credentials that are passed to it can be used to control the network session.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running "Restart-Computer".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the "Restart-Computer" runs. The "Restart-Computer" cmdlet isn't run.`, `SwitchParameter`),
        ], `Restarts the operating system on local and remote computers.`, `Restart-Computer [[-ComputerName] <String[]>] [[-Credential] <PSCredential>] [-Delay <Int16>] [-For {Wmi | WinRM | PowerShell}] [-Force] [-Timeout <Int32>] [-Wait] [-WsmanAuthentication {Basic | CredSSP | Default | Digest | Kerberos | Negotiate}] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Restart-Service`, [
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies the display names of services to restarted. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies services that this cmdlet omits. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies services that this cmdlet restarts. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies ServiceController objects that represent the services to restart. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `ServiceController[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service names of the services to restart.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the service. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Stops and then starts one or more services.`, `Restart-Service -DisplayName <String[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Restart-Service [-InputObject] <ServiceController[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Restart-Service [-Name] <String[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resume-BitsTransfer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resume-ProvisioningSession`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Resume-Service`, [
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies the display names of the services to be resumed. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies services that this cmdlet omits. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Include`, `Specifies services to resume. The value of this parameter qualifies Name parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies ServiceController objects that represent the services to resumed. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `ServiceController[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service names of the services to be resumed.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the service. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Resumes one or more suspended (paused) services.`, `Resume-Service -DisplayName <String[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Resume-Service [-InputObject] <ServiceController[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Resume-Service [-Name] <String[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-Help`, [
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user credential. This cmdlet runs the command by using credentials of a user who has permission to access the file system location specified by the DestinationPath parameter. This parameter is valid only when the DestinationPath or LiteralPath parameter is used in the command.


This parameter enables you to run "Save-Help" commands that use the DestinationPath parameter on remote computers. By providing explicit credentials, you can run the command on a remote computer and access a file share on a third computer without encountering an access denied error or using CredSSP authentication to delegate credentials.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`DestinationPath`, `Specifies the path of the folder in which the help files are saved. Do not specify a file name or file name extension.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet does not follow the once-per-day limitation, skips version checking, and downloads files that exceed the 1 GB limit.


Without this parameter, only one Save-Help command for each module is permitted in each 24-hour period, downloads are limited to 1 GB of uncompressed content per module, and help files for a module are installed only when they are newer than the files on the computer.


The once-per-day limit protects the servers that host the help files, and makes it practical for you to add a Save-Help command to your PowerShell profile.


To save help for a module in multiple UI cultures without the Force parameter, include all UI cultures in the same command, such as: "Save-Help -Module PSScheduledJobs -UICulture en-US, fr-FR, pt-BR"`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FullyQualifiedModule`, `Specifies modules with names that are specified in the form of ModuleSpecification objects. This is described in the Remarks section of ModuleSpecification Constructor (Hashtable) (https://msdn.microsoft.com/library/jj136290)in the MSDN library. For example, the FullyQualifiedModule parameter accepts a module name that is specified in the format @{ModuleName = "modulename"; ModuleVersion = "version_number"} or @{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"}. ModuleName and ModuleVersion are required, but Guid is optional.


You cannot specify the FullyQualifiedModule parameter in the same command as a Module parameter.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path of the destination folder. Unlike the value of the DestinationPath parameter, the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Module`, `Specifies modules for which this cmdlet downloads help. Enter one or more module names or name patters in a comma-separated list or in a file that has one module name on each line. Wildcard characters are permitted. You can also pipe module objects from the Get-Module cmdlet to Save-Help .


By default, Save-Help downloads help for all modules that support Updatable Help and are installed on the local computer in a location listed in the PSModulePath environment variable.


To save help for modules that are not installed on the computer, run a Get-Module command on a remote computer. Then pipe the resulting module objects to the Save-Help cmdlet or submit the module objects as the value of the Module or InputObject parameters.


If the module that you specify is installed on the computer, you can enter the module name or a module object. If the module is not installed on the computer, you must enter a module object, such as one returned by the Get-Module cmdlet.


The Module parameter of the Save-Help cmdlet does not accept the full path of a module file or module manifest file. To save help for a module that is not in a PSModulePath location, import the module into the current session before you run the Save-Help command.


A value of "*" (all) attempts to update help for all modules that are installed on the computer. This includes modules that do not support Updatable Help. This value might generate errors when the command encounters modules that do not support Updatable Help.`, `PSModuleInfo[]`),
            new Parameter_js_3.Parameter(`UICulture`, `Specifies UI culture values for which this cmdlet gets updated help files. Enter one or more language codes, such as es-ES, a variable that contains culture objects, or a command that gets culture objects, such as a Get-Culture or Get-UICulture command.


Wildcard characters are not permitted. Do not specify a partial language code, such as "de".


By default, Save-Help gets help files in the UI culture set for Windows or its fallback culture. If you specify the UICulture parameter, Save-Help looks for help only for the specified UI culture, not in any fallback culture.`, `CultureInfo[]`),
            new Parameter_js_3.Parameter(`UseDefaultCredentials`, `Indicates that this cmdlet runs the command, including the web download, with the credentials of the current user. By default, the command runs without explicit credentials.


This parameter is effective only when the web download uses NTLM, negotiate, or Kerberos-based authentication.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Scope`, `This paramater does nothing in this cmdlet.`, `UpdateHelpScope`),
        ], `Downloads and saves the newest help files to a file system directory.`, `Save-Help [-DestinationPath] <String[]> [[-Module] <PSModuleInfo[]>] [[-UICulture] <CultureInfo[]>] [-Credential <PSCredential>] [-Force] [-FullyQualifiedModule <ModuleSpecification[]>] [-UseDefaultCredentials] [-Scope <UpdateHelpScope>] [<CommonParameters>]

Save-Help [[-Module] <PSModuleInfo[]>] [[-UICulture] <CultureInfo[]>] [-Credential <PSCredential>] [-Force] [-FullyQualifiedModule <ModuleSpecification[]>] -LiteralPath <String[]> [-UseDefaultCredentials] [-Scope <UpdateHelpScope>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-Package`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Save-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Select-Object`, [
            new Parameter_js_3.Parameter(`ExcludeProperty`, `Specifies the properties that this cmdlet excludes from the operation. Wildcards are permitted.


Beginning in PowerShell 6, it is no longer required to include the Property parameter for ExcludeProperty to work.`, `String[]`),
            new Parameter_js_3.Parameter(`ExpandProperty`, `Specifies a property to select, and indicates that an attempt should be made to expand that property.


- If the specified property is an array, each value of the array is included in the output.


- If the specified property is an object, the objects properties are expanded for every InputObject In either case, the Type of objects output will match the Type of the expanded property.


If the Property parameter is specified, "Select-Object" will attempt to add each selected property as a NoteProperty to every outputted object.


> [!WARNING] > If you receive the error: Select : Property cannot be processed because property "<PropertyName>" > already exists, consider the following. > Note that when using "-ExpandProperty", "Select-Object" can not replace an existing property. > This means: > > - If the expanded object has a property of the same name, an error will occur. > - If the Selected object has a property of the same name as an Expanded objects property, an >   error will occur.`, `String`),
            new Parameter_js_3.Parameter(`First`, `Specifies the number of objects to select from the beginning of an array of input objects.`, `Int32`),
            new Parameter_js_3.Parameter(`Index`, `Selects objects from an array based on their index values. Enter the indexes in a comma-separated list. Indexes in an array begin with 0, where 0 represents the first value and (n-1) represents the last value.`, `Int32[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies objects to send to the cmdlet through the pipeline. This parameter enables you to pipe objects to "Select-Object".


When you pass objects to the InputObject parameter, instead of using the pipeline, "Select-Object" treats the InputObject as a single object, even if the value is a collection. It is recommended that you use the pipeline when passing collections to "Select-Object".`, `PSObject`),
            new Parameter_js_3.Parameter(`Last`, `Specifies the number of objects to select from the end of an array of input objects.`, `Int32`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the properties to select. These properties are added as NoteProperty members to the output objects. Wildcards are permitted.


The value of the Property parameter can be a new calculated property. To create a calculated, property, use a hash table.


Valid keys are:


- Name (or Label): "<string>"


- Expression "<string>" or "<script block>"`, `Object[]`),
            new Parameter_js_3.Parameter(`Skip`, `Skips (does not select) the specified number of items. By default, the Skip parameter counts from the beginning of the array or list of objects, but if the command uses the Last parameter, it counts from the end of the list or array.


Unlike the Index parameter, which starts counting at 0, the Skip parameter begins at 1.`, `Int32`),
            new Parameter_js_3.Parameter(`SkipLast`, `Skips (does not select) the specified number of items from the end of the list or array. Works in the same way as using Skip together with Last parameter.


Unlike the Index parameter, which starts counting at 0, the SkipLast parameter begins at 1.`, `Int32`),
            new Parameter_js_3.Parameter(`Unique`, `Specifies that if a subset of the input objects has identical properties and values, only a single member of the subset will be selected.


This parameter is case-sensitive. As a result, strings that differ only in character casing are considered to be unique.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Wait`, `Indicates that the cmdlet turns off optimization. PowerShell runs commands in the order that they appear in the command pipeline and lets them generate all objects. By default, if you include a "Select-Object" command with the First or Index parameters in a command pipeline, PowerShell stops the command that generates the objects as soon as the selected number of objects is generated.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SkipIndex`, ``, `Int32[]`),
        ], `Selects objects or object properties.`, `Select-Object [[-Property] <Object[]>] [-ExcludeProperty <String[]>] [-ExpandProperty <String>] [-First <Int32>] [-InputObject <PSObject>] [-Last <Int32>] [-Skip <Int32>] [-Unique] [-Wait] [<CommonParameters>]

Select-Object [[-Property] <Object[]>] [-ExcludeProperty <String[]>] [-ExpandProperty <String>] [-InputObject <PSObject>] [-SkipLast <Int32>] [-Unique] [<CommonParameters>]

Select-Object [-Index <Int32[]>] [-InputObject <PSObject>] [-Unique] [-Wait] [<CommonParameters>]

Select-Object [-InputObject <PSObject>] [-Unique] [-SkipIndex <Int32[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Select-String`, [
            new Parameter_js_3.Parameter(`AllMatches`, `Indicates that the cmdlet searches for more than one match in each line of text. Without this parameter, "Select-String" finds only the first match in each line of text.


When "Select-String" finds more than one match in a line of text, it still emits only one MatchInfo object for the line, but the Matches property of the object contains all the matches.


> [!NOTE] > This parameter is ignored when used in combination with the SimpleMatch parameter. If you wish > to return all matches and the pattern that you are searching for contains regular expression > characters, you must escape those characters rather than using SimpleMatch . See > about_Regular_Expressions (../Microsoft.PowerShell.Core/About/about_Regular_Expressions.md)for > more information about escaping regular expressions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CaseSensitive`, `Indicates that the cmdlet matches are case-sensitive. By default, matches aren't case-sensitive.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Context`, `Captures the specified number of lines before and after the line that matches the pattern.


If you enter one number as the value of this parameter, that number determines the number of lines captured before and after the match. If you enter two numbers as the value, the first number determines the number of lines before the match and the second number determines the number of lines after the match. For example, "-Context 2,3".


In the default display, lines with a match are indicated by a right angle bracket (">") (ASCII 62) in the first column of the display. Unmarked lines are the context.


The Context parameter doesn't change the number of objects generated by "Select-String". "Select-String" generates one MatchInfo (/dotnet/api/microsoft.powershell.commands.matchinfo)object for each match. The context is stored as an array of strings in the Context property of the object.


When the output of a "Select-String" command is sent down the pipeline to another "Select-String" command, the receiving command searches only the text in the matched line. The matched line is the value of the Line property of the MatchInfo object, not the text in the context lines. As a result, the Context parameter isn't valid on the receiving "Select-String" command.


When the context includes a match, the MatchInfo object for each match includes all the context lines, but the overlapping lines appear only once in the display.`, `Int32[]`),
            new Parameter_js_3.Parameter(`Culture`, `Specifies a culture name to match the specified pattern. The Culture parameter must be used with the SimpleMatch parameter. The default behavior uses the culture of the current PowerShell runspace (session).


To get a list of all supported cultures, use "Get-Culture -ListAvailable" command.


In addition, this parameter accepts the following arguments:


- CurrentCulture, that is default;


- Ordinal, that is non-linguistic binary comparison;


- Invariant, that is culture independent comparison.




With "Select-String -Culture Ordinal -CaseSensitive -SimpleMatch" command you gets fastest binary comparison.


The Culture parameter uses tab completion to scroll through the list of arguments that specify the available cultures. To list all available arguments, use the following command:


"(Get-Command Select-String).Parameters.Culture.Attributes.ValidValues"


For more information about .NET CultureInfo.Name property, see CultureInfo.Name (/dotnet/api//system.globalization.cultureinfo.name).

The Culture parameter was introduced in PowerShell 7.`, `String`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Exclude`, `Exclude the specified items. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "*.txt". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Include`, `Includes the specified items. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "*.txt". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the text to be searched. Enter a variable that contains the text, or type a command or expression that gets the text.


Using the InputObject parameter isn't the same as sending strings down the pipeline to "Select-String".


When you pipe more than one string to the "Select-String" cmdlet, it searches for the specified text in each string and returns each string that contains the search text.


When you use the InputObject parameter to submit a collection of strings, "Select-String" treats the collection as a single combined string. "Select-String" returns the strings as a unit if it finds the search text in any string.`, `PSObject`),
            new Parameter_js_3.Parameter(`List`, `Only the first instance of matching text is returned from each input file. This is the most efficient way to retrieve a list of files that have contents matching the regular expression.


By default, "Select-String" returns a MatchInfo object for each match it finds.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to the files to be searched. The value of the LiteralPath parameter is used exactly as it's typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences. For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`NoEmphasis`, `By default, "Select-String" highlights the string that matches the pattern you searched for with the Pattern parameter. The NoEmphasis parameter disables the highlighting.


The emphasis uses negative colors based on your PowerShell background and text colors. For example, if your PowerShell colors are a black background with white text. The emphasis is a white background with black text.


This parameter was introduced in PowerShell 7.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NotMatch`, `The NotMatch parameter finds text that doesn't match the specified pattern.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to the files to search. Wildcards are permitted. The default location is the local directory.


Specify files in the directory, such as "log1.txt", " .doc", or " .*". If you specify only a directory, the command fails.`, `String[]`),
            new Parameter_js_3.Parameter(`Pattern`, `Specifies the text to find on each line. The pattern value is treated as a regular expression.


To learn about regular expressions, see about_Regular_Expressions (../Microsoft.PowerShell.Core/About/about_Regular_Expressions.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Quiet`, `Indicates that the cmdlet returns a Boolean value (True or False), instead of a MatchInfo object. The value is True if the pattern is found; otherwise the value is False.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Raw`, `Causes the cmdlet to output only the matching strings, rather than MatchInfo objects. This is the results in behavior that's the most similar to the Unix grep or Windows findstr.exe commands.


This parameter was introduced in PowerShell 7.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SimpleMatch`, `Indicates that the cmdlet uses a simple match rather than a regular expression match. In a simple match, "Select-String" searches the input for the text in the Pattern parameter. It doesn't interpret the value of the Pattern parameter as a regular expression statement.


Also, when SimpleMatch is used, the Matches property of the MatchInfo object returned is empty.


> [!NOTE] > When this parameter is used with the AllMatches parameter, the AllMatches is ignored.`, `SwitchParameter`),
        ], `Finds text in strings and files.`, `Select-String [-Pattern] <String[]> [-AllMatches] [-CaseSensitive] [-Context <Int32[]>] [-Culture <String>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Include <String[]>] -InputObject <PSObject> [-List] [-NoEmphasis] [-NotMatch] -Raw [-SimpleMatch] [<CommonParameters>]

Select-String [-Pattern] <String[]> [-AllMatches] [-CaseSensitive] [-Context <Int32[]>] [-Culture <String>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Include <String[]>] -InputObject <PSObject> [-List] [-NoEmphasis] [-NotMatch] [-Quiet] [-SimpleMatch] [<CommonParameters>]

Select-String [-Pattern] <String[]> [-AllMatches] [-CaseSensitive] [-Context <Int32[]>] [-Culture <String>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Include <String[]>] [-List] -LiteralPath <String[]> [-NoEmphasis] [-NotMatch] -Raw [-SimpleMatch] [<CommonParameters>]

Select-String [-Pattern] <String[]> [-AllMatches] [-CaseSensitive] [-Context <Int32[]>] [-Culture <String>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Include <String[]>] [-List] -LiteralPath <String[]> [-NoEmphasis] [-NotMatch] [-Quiet] [-SimpleMatch] [<CommonParameters>]

Select-String [-Pattern] <String[]> [-Path] <String[]> [-AllMatches] [-CaseSensitive] [-Context <Int32[]>] [-Culture <String>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Include <String[]>] [-List] [-NoEmphasis] [-NotMatch] [-Quiet] [-SimpleMatch] [<CommonParameters>]

Select-String [-Pattern] <String[]> [-Path] <String[]> [-AllMatches] [-CaseSensitive] [-Context <Int32[]>] [-Culture <String>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Include <String[]>] [-List] [-NoEmphasis] [-NotMatch] -Raw [-SimpleMatch] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Select-Xml`, [
            new Parameter_js_3.Parameter(`Content`, `Specifies a string that contains the XML to search. You can also pipe strings to Select-Xml .`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the paths and file names of the XML files to search. Unlike Path , the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Namespace`, `Specifies a hash table of the namespaces used in the XML. Use the format @{<namespaceName> = <namespaceValue>}.


When the XML uses the default namespace, which begins with xmlns, use an arbitrary key for the namespace name. You cannot use xmlns. In the XPath statement, prefix each node name with the namespace name and a colon, such as //namespaceName:Node.`, `Hashtable`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path and file names of the XML files to search. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Xml`, `Specifies one or more XML nodes.


An XML document will be processed as a collection of XML nodes. If you pipe an XML document to Select-Xml , each document node will be searched separately as it comes through the pipeline.`, `XmlNode[]`),
            new Parameter_js_3.Parameter(`XPath`, `Specifies an XPath search query. The query language is case-sensitive. This parameter is required.`, `String`),
        ], `Finds text in an XML string or document.`, `Select-Xml [-XPath] <String> -Content <String[]> [-Namespace <Hashtable>] [<CommonParameters>]

Select-Xml [-XPath] <String> -LiteralPath <String[]> [-Namespace <Hashtable>] [<CommonParameters>]

Select-Xml [-XPath] <String> [-Path] <String[]> [-Namespace <Hashtable>] [<CommonParameters>]

Select-Xml [-XPath] <String> [-Xml] <XmlNode[]> [-Namespace <Hashtable>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Send-DtcDiagnosticTransaction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Send-MailMessage`, [
            new Parameter_js_3.Parameter(`Attachments`, `Specifies the path and file names of files to be attached to the email message. You can use this parameter or pipe the paths and file names to "Send-MailMessage".`, `String[]`),
            new Parameter_js_3.Parameter(`Bcc`, `Specifies the email addresses that receive a copy of the mail but are not listed as recipients of the message. Enter names (optional) and the email address, such as "Name <someone@fabrikam.com>".`, `String[]`),
            new Parameter_js_3.Parameter(`Body`, `Specifies the content of the email message.`, `String`),
            new Parameter_js_3.Parameter(`BodyAsHtml`, `Specifies that the value of the Body parameter contains HTML.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Cc`, `Specifies the email addresses to which a carbon copy (CC) of the email message is sent. Enter names (optional) and the email address, such as "Name <someone@fabrikam.com>".`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to perform this action. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 . Or, enter a PSCredential object, such as one from the "Get-Credential" cmdlet.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`DeliveryNotificationOption`, `Specifies the delivery notification options for the email message. You can specify multiple values. None is the default value. The alias for this parameter is DNO .


The delivery notifications are sent to the address in the From parameter.


The acceptable values for this parameter are as follows:


- None : No notification. - OnSuccess : Notify if the delivery is successful. - OnFailure : Notify if the delivery is unsuccessful. - Delay : Notify if the delivery is delayed. - Never : Never notify.`, `DeliveryNotificationOptions`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`From`, `The From parameter is required. This parameter specifies the sender's email address. Enter a name (optional) and email address, such as "Name <someone@fabrikam.com>".`, `String`),
            new Parameter_js_3.Parameter(`Port`, `Specifies an alternate port on the SMTP server. The default value is 25, which is the default SMTP port.`, `Int32`),
            new Parameter_js_3.Parameter(`Priority`, `Specifies the priority of the email message. Normal is the default. The acceptable values for this parameter are Normal, High, and Low.`, `MailPriority`),
            new Parameter_js_3.Parameter(`ReplyTo`, `Specifies additional email addresses (other than the From address) to use to reply to this message. Enter names (optional) and the email address, such as "Name <someone@fabrikam.com>".


This parameter was introduced in PowerShell 6.2.`, `String[]`),
            new Parameter_js_3.Parameter(`SmtpServer`, `Specifies the name of the SMTP server that sends the email message.


The default value is the value of the "$PSEmailServer" preference variable. If the preference variable is not set and this parameter is not used, the "Send-MailMessage" command fails.`, `String`),
            new Parameter_js_3.Parameter(`Subject`, `The Subject parameter isn't required. This parameter specifies the subject of the email message.`, `String[]`),
            new Parameter_js_3.Parameter(`To`, `The To parameter is required. This parameter specifies the recipient's email address. If there are multiple recipients, separate their addresses with a comma (","). Enter names (optional) and the email address, such as "Name <someone@fabrikam.com>".`, `String[]`),
            new Parameter_js_3.Parameter(`UseSsl`, `The Secure Sockets Layer (SSL) protocol is used to establish a secure connection to the remote computer to send mail. By default, SSL is not used.`, `SwitchParameter`),
        ], `Sends an email message.`, `Send-MailMessage [-To] <String[]> [[-Subject] <String[]>] [[-Body] <String>] [[-SmtpServer] <String>] [-Attachments <String[]>] [-Bcc <String[]>] [-BodyAsHtml] [-Cc <String[]>] [-Credential <PSCredential>] [-DeliveryNotificationOption {None | OnSuccess | OnFailure | Delay | Never}] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] -From <String> [-Port <Int32>] [-Priority {Normal | High | Low}] [-ReplyTo <String[]>] [-UseSsl] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Acl`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Alias`, [
            new Parameter_js_3.Parameter(`Description`, `Specifies a description of the alias. You can type any string. If the description includes spaces, enclose it single quotation marks.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Use the Force parameter to change or delete an alias that has the Option parameter set to ReadOnly .


The Force parameter cannot change or delete an alias with the Option parameter set to Constant .`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of a new alias. An alias name can contain alphanumeric characters and hyphens. Alias names cannot be numeric, such as 123.`, `String`),
            new Parameter_js_3.Parameter(`Option`, `Sets the Option property value of the alias. Values such as ReadOnly and Constant protect an alias from unintended changes. To see the Option property of all aliases in the session, type "Get-Alias | Format-Table -Property Name, Options -Autosize".


The acceptable values for this parameter are as follows:


- AllScope The alias is copied to any new scopes that are created. - Constant Cannot be changed or deleted. - None Sets no options and is the default. - Private The alias is available only in the current scope. - ReadOnly Cannot be changed or deleted unless the Force parameter is used. - Unspecified`, `ScopedItemOptions`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the alias. Use a format cmdlet such as "Format-List" to display the object. By default, "Set-Alias" does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope in which this alias is valid. The default value is Local . For more information, see about_Scopes (../Microsoft.PowerShell.Core/About/about_Scopes.md).


The acceptable values are as follows:


- Global


- Local


- Private


- Numbered scopes


- Script`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the name of the cmdlet or command that the alias runs. The Value parameter is the alias's Definition property.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates or changes an alias for a cmdlet or other command in the current PowerShell session.`, `Set-Alias [-Name] <String> [-Value] <String> [-Description <String>] [-Force] [-Option {AllScope | Constant | None | Private | ReadOnly | Unspecified}] [-PassThru] [-Scope {Global | Local | Private | Numbered scopes | Script}] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-AppBackgroundTaskResourcePolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-AppLockerPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-AppxDefaultVolume`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-AppXProvisionedDataFile`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-AuthenticodeSignature`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-BitsTransfer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-CertificateAutoEnrollmentPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-CimInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-CIPolicyIdInfo`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-CIPolicySetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-CIPolicyVersion`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Clipboard`, [
            new Parameter_js_3.Parameter(`Append`, `Indicates that the cmdlet does not clear the clipboard and appends content to it.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Sets the contents of the clipboard.`, `Set-Clipboard [-Append] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Content`, [
            new Parameter_js_3.Parameter(`AsByteStream`, `Specifies that the content should be read as a stream of bytes. This parameter was introduced in PowerShell 6.0.


A warning occurs when you use the AsByteStream parameter with the Encoding parameter. The AsByteStream parameter ignores any encoding and the output is returned as a stream of bytes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Encoding`, `Specifies the type of encoding for the target file. The default value is UTF8NoBOM .


Encoding is a dynamic parameter that the FileSystem provider adds to "Set-Content". This parameter works only in file system drives.


The acceptable values for this parameter are as follows:


- ASCII : Uses the encoding for the ASCII (7-bit) character set. - BigEndianUnicode : Encodes in UTF-16 format using the big-endian byte order. - OEM : Uses the default encoding for MS-DOS and console programs. - Unicode : Encodes in UTF-16 format using the little-endian byte order. - UTF7 : Encodes in UTF-7 format. - UTF8 : Encodes in UTF-8 format. - UTF8BOM : Encodes in UTF-8 format with Byte Order Mark (BOM) - UTF8NoBOM : Encodes in UTF-8 format without Byte Order Mark (BOM) - UTF32 : Encodes in UTF-32 format.


Beginning with PowerShell 6.2, the Encoding parameter also allows numeric IDs of registered code pages (like "-Encoding 1251") or string names of registered code pages (like "-Encoding "windows-1251""). For more information, see the .NET documentation for Encoding.CodePage (/dotnet/api/system.text.encoding.codepage?view=netcore-2.2).`, `Encoding`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to set the contents of a file, even if the file is read-only. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md). The Force parameter does not override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`NoNewline`, `The string representations of the input objects are concatenated to form the output. No spaces or newlines are inserted between the output strings. No newline is added after the last output string.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the content. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of the item that receives the content. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Stream`, `Specifies an alternative data stream for content. If the stream does not exist, this cmdlet creates it. Wildcard characters are not supported. Stream is a dynamic parameter that the FileSystem provider adds to "Set-Content". This parameter works only in file system drives.


You can use the "Set-Content" cmdlet to change the content of the Zone.Identifier alternate data stream. However, we do not recommend this as a way to eliminate security checks that block files that are downloaded from the Internet. If you verify that a downloaded file is safe, use the "Unblock-File" cmdlet.


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the new content for the item.`, `Object[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Writes new content or replaces existing content in a file.`, `Set-Content [-Value] <Object[]> [-AsByteStream] [-Credential <PSCredential>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-NoNewline] [-PassThru] [-Stream <String>] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-Content [-Path] <String[]> [-Value] <Object[]> [-AsByteStream] [-Credential <PSCredential>] [-Encoding {ASCII | BigEndianUnicode | OEM | Unicode | UTF7 | UTF8 | UTF8BOM | UTF8NoBOM | UTF32}] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-NoNewline] [-PassThru] [-Stream <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Culture`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Date`, [
            new Parameter_js_3.Parameter(`Adjust`, `Specifies the value for which this cmdlet adds or subtracts from the current date and time. can type an adjustment in standard date and time format for your locale or use the Adjust parameter to pass a TimeSpan object from "New-TimeSpan" to "Set-Date".`, `TimeSpan`),
            new Parameter_js_3.Parameter(`Date`, `Changes the date and time to the specified values. You can type a new date in the short date format and a time in the standard time format for your locale. Or, you can pass a DateTime object from "Get-Date".


If you specify a date, but not a time, "Set-Date" changes the time to midnight on the specified date. If you specify only a time, it does not change the date.`, `DateTime`),
            new Parameter_js_3.Parameter(`DisplayHint`, `Specifies which elements of the date and time are displayed.The acceptable values for this parameter are:


- Date.   displays only the date. - Time.   displays only the time. - DateTime.   displays the date and time.


This parameter affects only the display. It does not affect the DateTime object that "Get-Date" retrieves.`, `DisplayHintType`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Changes the system time on the computer to a time that you specify.`, `Set-Date [-Adjust] <TimeSpan> [-DisplayHint {Date | Time | DateTime}] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-Date [-Date] <DateTime> [-DisplayHint {Date | Time | DateTime}] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DeliveryOptimizationStatus`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DODownloadMode`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DOPercentageMaxBackgroundBandwidth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DOPercentageMaxForegroundBandwidth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-DscLocalConfigurationManager`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ExecutionPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-HVCIOptions`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Item`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to set items that cannot otherwise be changed, such as read-only alias or variables. The cmdlet cannot change constant aliases or variables. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md). Even using the Force parameter, the cmdlet cannot override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Passes an object that represents the item to the pipeline. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies a path of the location of the items. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Value`, `Specifies a new value for the item.`, `Object`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Changes the value of an item to the value specified in the command.`, `Set-Item [[-Value] <Object>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-Item [-Path] <String[]> [[-Value] <Object>] [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ItemProperty`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies, as a string array, an item or items that this cmdlet excludes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as " .txt". Wildcard characters are permitted. The Exclude * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter to qualify the Path parameter. The FileSystem (../Microsoft.PowerShell.Core/About/about_FileSystem_Provider.md)provider is the only installed PowerShell provider that supports the use of filters. You can find the syntax for the FileSystem filter language in about_Wildcards (../Microsoft.PowerShell.Core/About/about_Wildcards.md). Filters are more efficient than other parameters, because the provider applies them when the cmdlet gets the objects rather than having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to set a property on items that cannot otherwise be accessed by the user. Implementation varies from provider to provider. For more information, see about_Providers (../Microsoft.PowerShell.Core/About/about_Providers.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies, as a string array, an item or items that this cmdlet includes in the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "" .txt"". Wildcard characters are permitted. The Include * parameter is effective only when the command includes the contents of an item, such as "C:\\Windows*", where the wildcard character specifies the contents of the "C:\\Windows" directory.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object that has the properties that this cmdlet changes. Enter a variable that contains the object or a command that gets the object.`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to one or more locations. The value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.


For more information, see about_Quoting_Rules (../Microsoft.Powershell.Core/About/about_Quoting_Rules.md).`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the property.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the item property. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of the items with the property to modify. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Type`, `Type is a dynamic parameter that the Registry provider adds to the "Set-ItemProperty" cmdlet. This parameter only works in the registry drives.


Specifies the type of property that this cmdlet adds. The acceptable values for this parameter are:


- String : Specifies a null-terminated string. Equivalent to REG_SZ . - ExpandString : Specifies a null-terminated string that contains unexpanded references to   environment variables that are expanded when the value is retrieved. Equivalent to REG_EXPAND_SZ . - Binary : Specifies binary data in any form. Equivalent to REG_BINARY . - DWord : Specifies a 32-bit binary number. Equivalent to REG_DWORD . - MultiString : Specifies an array of null-terminated strings terminated by two null characters.   Equivalent to REG_MULTI_SZ . - Qword : Specifies a 64-bit binary number. Equivalent to REG_QWORD . - Unknown : Indicates an unsupported registry data type, such as REG_RESOURCE_LIST .`, `RegistryValueKind`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the value of the property.`, `Object`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Creates or changes the value of a property of an item.`, `Set-ItemProperty [-Path] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -InputObject <PSObject> [-PassThru] [-Type <RegistryValueKind>] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-ItemProperty [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -InputObject <PSObject> -LiteralPath <String[]> [-PassThru] [-Type <RegistryValueKind>] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-ItemProperty [-Name] <String> [-Value] <Object> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] -LiteralPath <String[]> [-PassThru] [-Type <RegistryValueKind>] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-ItemProperty [-Path] <String[]> [-Name] <String> [-Value] <Object> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Force] [-Include <String[]>] [-PassThru] [-Type <RegistryValueKind>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-JobTrigger`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-KdsConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-LocalGroup`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-LocalUser`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Location`, [
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path of the location. The value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns a PathInfo object that represents the location. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specify the path of a new working location. If no path is provided, "Set-Location" defaults to the current user's home directory. When wildcards are used, the cmdlet chooses the first path that matches the wildcard pattern.


PowerShell keeps a history of the last 20 locations you have set. If the path is the "-" character, then the new working location will be the previous working location in history (if it exists). Similarly, if the path is the "+" character, then the new working location will be the next working location in history (if it exists). This is similar to using "Pop-Location" and "Push-Location" except that the history is a list, not a stack, and is implicitly tracked, not manually controlled. Currently, there is no way to view the history list.`, `String`),
            new Parameter_js_3.Parameter(`StackName`, `Specifies the location stack name that this cmdlet makes the current location stack. Enter a location stack name. To indicate the unnamed default location stack, type "$null" or an empty string ("").


The " -Location" cmdlets act on the current stack unless you use the StackName * parameter to specify a different stack. For more information about location stacks, see the Notes (#notes).`, `String`),
        ], `Sets the current working location to a specified location.`, `Set-Location -LiteralPath <String> [-PassThru] [<CommonParameters>]

Set-Location [[-Path] <String>] [-PassThru] [<CommonParameters>]

Set-Location [-PassThru] [-StackName <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-MarkdownOption`, [
            new Parameter_js_3.Parameter(`BoldForegroundColor`, `Sets the foreground color for rendering bold Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`Code`, `Sets the color for rendering code blocks and spans in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`Header1Color`, `Sets the color for rendering Header1 blocks in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`Header2Color`, `Sets the color for rendering Header2 blocks in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`Header3Color`, `Sets the color for rendering Header3 blocks in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`Header4Color`, `Sets the color for rendering Header4 blocks in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`Header5Color`, `Sets the color for rendering Header5 blocks in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`Header6Color`, `Sets the color for rendering Header6 blocks in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`ImageAltTextForegroundColor`, `Sets the foreground color for rendering the alternate text of an image element in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`InputObject`, `A PSMarkdownOptionInfo object containing the configuration to be set.`, `PSObject`),
            new Parameter_js_3.Parameter(`ItalicsForegroundColor`, `Sets the foreground color for rendering the italics in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`LinkForegroundColor`, `Sets the foreground color for rendering hyperlinks in Markdown text.`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Causes the cmdlet to output a PSMarkdownOptionInfo object containing the new configuration.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Theme`, `Selects a theme containing predefined color settings. The possible values are Dark and Light .`, `String`),
        ], `Sets the colors and styles used for rendering Markdown content in the console.`, `Set-MarkdownOption [-BoldForegroundColor <String>] [-Code <String>] [-Header1Color <String>] [-Header2Color <String>] [-Header3Color <String>] [-Header4Color <String>] [-Header5Color <String>] [-Header6Color <String>] [-ImageAltTextForegroundColor <String>] [-ItalicsForegroundColor <String>] [-LinkForegroundColor <String>] [-PassThru] [<CommonParameters>]

Set-MarkdownOption [-InputObject] <PSObject> [-PassThru] [<CommonParameters>]

Set-MarkdownOption [-PassThru] -Theme {Dark | Light} [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-NonRemovableAppsPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PackageSource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ProcessMitigation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PSBreakpoint`, [
            new Parameter_js_3.Parameter(`Action`, `Specifies commands that run at each breakpoint instead of breaking. Enter a script block that contains the commands. You can use this parameter to set conditional breakpoints or to perform other tasks, such as testing or logging.


If this parameter is omitted, or no action is specified, execution stops at the breakpoint, and the debugger starts.


When the Action parameter is used, the Action script block runs at each breakpoint. Execution does not stop unless the script block includes the Break keyword. If you use the Continue keyword in the script block, execution resumes until the next breakpoint.


For more information, see about_Script_Blocks (../Microsoft.PowerShell.Core/About/about_Script_Blocks.md), about_Break (../Microsoft.PowerShell.Core/About/about_Break.md), and about_Continue (../Microsoft.PowerShell.Core/About/about_Continue.md).`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`Column`, `Specifies the column number of the column in the script file on which execution stops. Enter only one column number. The default is column 1.


The Column value is used with the value of the Line parameter to specify the breakpoint. If the Line parameter specifies multiple lines, the Column parameter sets a breakpoint at the specified column on each of the specified lines. PowerShell stops executing before the statement or expression that includes the character at the specified line and column position.


Columns are counted from the top left margin beginning with column number 1 (not 0). If you specify a column that does not exist in the script, an error is not declared, but the breakpoint is never executed.`, `Int32`),
            new Parameter_js_3.Parameter(`Command`, `Sets a command breakpoint. Enter cmdlet names, such as "Get-Process", or function names. Wildcards are permitted.


Execution stops just before each instance of each command is executed. If the command is a function, execution stops each time the function is called and at each BEGIN, PROCESS, and END section.`, `String[]`),
            new Parameter_js_3.Parameter(`Line`, `Sets a line breakpoint in a script. Enter one or more line numbers, separated by commas. PowerShell stops immediately before executing the statement that begins on each of the specified lines.


Lines are counted from the top left margin of the script file beginning with line number 1 (not 0). If you specify a blank line, execution stops before the next non-blank line. If the line is out of range, the breakpoint is never hit.`, `Int32[]`),
            new Parameter_js_3.Parameter(`Mode`, `Specifies the mode of access that triggers variable breakpoints. The default is Write .


This parameter is valid only when the Variable parameter is used in the command. The mode applies to all breakpoints set in the command. The acceptable values for this parameter are:


- Write - Stops execution immediately before a new value is written to the variable. - Read - Stops execution when the variable is read, that is, when its value is accessed, either   to be assigned, displayed, or used. In read mode, execution does not stop when the value of the   variable changes. - ReadWrite - Stops execution when the variable is read or written.`, `VariableAccessMode`),
            new Parameter_js_3.Parameter(`Script`, `Specifies an array of script files that this cmdlet sets a breakpoint in. Enter the paths and file names of one or more script files. If the files are in the current directory, you can omit the path. Wildcards are permitted.


By default, variable breakpoints and command breakpoints are set on any command that runs in the current session. This parameter is required only when setting a line breakpoint.`, `String[]`),
            new Parameter_js_3.Parameter(`Variable`, `Specifies an array of variables that this cmdlet sets breakpoints on. Enter a comma-separated list of variables without dollar signs ("$").


Use the Mode parameter to determine the mode of access that triggers the breakpoints. The default mode, Write, stops execution just before a new value is written to the variable.`, `String[]`),
        ], `Sets a breakpoint on a line, command, or variable.`, `Set-PSBreakpoint [[-Script] <String[]>] [-Line] <Int32[]> [[-Column] <Int32>] [-Action <ScriptBlock>] [<CommonParameters>]

Set-PSBreakpoint [[-Script] <String[]>] [-Action <ScriptBlock>] -Command <String[]> [<CommonParameters>]

Set-PSBreakpoint [[-Script] <String[]>] [-Action <ScriptBlock>] [-Mode {Read | Write | ReadWrite}] -Variable <String[]> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PSDebug`, [
            new Parameter_js_3.Parameter(`Off`, `Turns off all script debugging features.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Step`, `Turns on script stepping. Before each line runs, PowerShell prompts you to stop, continue, or enter a new interpreter level to inspect the state of the script.


Specifying the Step parameter automatically sets a trace level of "1".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Strict`, `Specifies that variables must be assigned a value before being referenced in a script. If a variable is referenced before a value is assigned, PowerShell returns an exception error. This is equivalent to "Set-StrictMode -Version 1". For more information, see Set-StrictMode (Set-StrictMode.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Trace`, `Specifies the trace level for each line in a script. Each line is traced as it's run.


The acceptable values for this parameter are as follows:


- 0: Turn script tracing off.


- 1: Trace script lines as they run.


- 2: Trace script lines, variable assignments, function calls, and scripts.`, `Int32`),
        ], `Turns script debugging features on and off, sets the trace level, and toggles strict mode.`, `Set-PSDebug [-Off] [<CommonParameters>]

Set-PSDebug [-Step] [-Strict] [-Trace <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PSReadLineKeyHandler`, [
            new Parameter_js_3.Parameter(`Chord`, `The key or sequence of keys to be bound to a Function or ScriptBlock. A single binding is specified with a single string. If the binding is a sequence of keys, the keys are separated with a comma, e.g. "Ctrl+X,Ctrl+X". Note that this parameter accepts multiple strings. Each string is a separate binding, not a sequence of keys for a single binding.`, `String[]`),
            new Parameter_js_3.Parameter(`ScriptBlock`, `The ScriptBlock is called when the Chord is entered. The ScriptBlock is passed one or sometimes two arguments. The first argument is the key pressed (a ConsoleKeyInfo.)  The second argument could be any object depending on the context.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`BriefDescription`, `A brief description of the key binding. Used in the output of cmdlet Get-PSReadLineKeyHandler.`, `String`),
            new Parameter_js_3.Parameter(`Description`, `A more verbose description of the key binding. Used in the output of the cmdlet Get-PSReadLineKeyHandler.`, `String`),
            new Parameter_js_3.Parameter(`Function`, `The name of an existing key handler provided by PSReadLine. This parameter allows one to rebind existing key bindings or to bind a handler provided by PSReadLine that is currently unbound.


Using the ScriptBlock parameter, one can achieve equivalent functionality by calling the method directly from the ScriptBlock. This parameter is preferred though - it makes it easier to determine which functions are bound and unbound.`, `String`),
            new Parameter_js_3.Parameter(`ViMode`, `Specify which vi mode the binding applies to.


Valid values are:


-- Insert


-- Command`, `ViMode`),
        ], `Binds or rebinds keys to user defined or PSReadLine provided key handlers.`, `Set-PSReadLineKeyHandler [-Chord] <String[]> [-ScriptBlock] <ScriptBlock> [-BriefDescription <String>] [-Description <String>] [-ViMode <ViMode>] [<CommonParameters>]

Set-PSReadLineKeyHandler [-Chord] <String[]> [-Function] <String> [-ViMode <ViMode>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PSReadLineOption`, [
            new Parameter_js_3.Parameter(`EditMode`, `Specifies the command line editing mode. This will reset any key bindings set by Set-PSReadLineKeyHandler.


Valid values are:


-- Windows: Key bindings emulate PowerShell/cmd with some bindings emulating Visual Studio.


-- Emacs: Key bindings emulate Bash or Emacs.


-- Vi: Key bindings emulate Vi.`, `EditMode`),
            new Parameter_js_3.Parameter(`PromptText`, `When there is a parse error, PSReadLine changes a part of the prompt red. PSReadLine analyzes your prompt function to determine how it can change just the color of part of your prompt, but this analysis cannot be 100% reliable.


Use this option if PSReadLine is changing your prompt in surprising ways, be sure to include any trailing whitespace.


For example, if my prompt function looked like:


function prompt { Write-Host -NoNewLine -ForegroundColor Yellow "$pwd"; return "# " }


Then set:


Set-PSReadLineOption -PromptText "# ", "! "


This would change the "#" in your prompt to "!" when a parse error is detected. This is especially useful with virtual terminal escape sequences to use colors in your prompt.`, `String[]`),
            new Parameter_js_3.Parameter(`ContinuationPrompt`, `Specifies the string displayed at the beginning of the second and subsequent lines when multi-line input is being entered. Defaults to '>> '. The empty string is valid.`, `String`),
            new Parameter_js_3.Parameter(`HistoryNoDuplicates`, `Repeated commands will usually be added to history to preserve ordering during recall, but typically you don't want to see the same command multiple times when recalling or searching the history.


This option controls the recall behavior - duplicates will are still added to the history file, but if this option is set, only the most recent invocation will appear when recalling commands.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`AddToHistoryHandler`, `Specifies a ScriptBlock that can be used to control which commands get added to PSReadLine history, and whether they should be saved to the history file.


The ScriptBlock is passed the command line, and it is expected to return either a Boolean value, or an enum value of the type "[Microsoft.PowerShell.AddToHistoryOption]". The enum type "AddToHistoryOption" has 3 members: "SkipAdding", "MemoryOnly", and "MemoryAndFile".


If the ScriptBlock returns "$true", it's equivalent to "AddToHistoryOption.MemoryAndFile". The command line is added to the in-memory history queue and saved to the history file. If the ScriptBlock returns "$false", it's equivalent to "AddToHistoryOption.SkipAdding", and the command line is not added to history at all.


If the ScriptBlock returns "AddToHistoryOption.MemoryOnly", then the command line is added to the in-memory history queue, but will not be saved to the history file. This usually indicates the command line has sensitive content that should not be written to disk.


PSReadLine provides a default handler to this option:     "[Microsoft.PowerShell.PSConsoleReadLine]::GetDefaultAddToHistoryOption(string line)" The default handler attempts to detect sensitive information in a command line by matching with a simple regex pattern:     ""password|asplaintext|token|key|secret"" When successfully matched, the command line is considered to contain sensitive content, and "MemoryOnly" is returned. Otherwise, "MemoryAndFile" is returned.


To turn off the default handler, just set this option to "$null".`, `Func[String, Object]`),
            new Parameter_js_3.Parameter(`CommandValidationHandler`, `Specifies a ScriptBlock that is called from ValidateAndAcceptLine. If an exception is thrown, validation fails and the error is reported.


"ValidateAndAcceptLine" is used to avoid cluttering your history with commands that can't work, e.g. specifying parameters that do not exist.`, `Action[CommandAst]`),
            new Parameter_js_3.Parameter(`HistorySearchCursorMovesToEnd`, `When using "HistorySearchBackward" and "HistorySearchForward", the default behavior leaves the cursor at the end of the search string if any.


To move the cursor to end of the line just like when there is no search string, set this option to "$true".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`MaximumHistoryCount`, `Specifies the maximum number of commands to save in PSReadLine history.


Note that PSReadLine history is separate from PowerShell history.`, `Int32`),
            new Parameter_js_3.Parameter(`MaximumKillRingCount`, `Specifies the maximum number of items stored in the kill ring.`, `Int32`),
            new Parameter_js_3.Parameter(`ShowToolTips`, `When displaying possible completions, show tooltips in the list of completions.


This option was not enabled by default in earliers versions of PSReadLine, but is enabled by default now. To disable, set this option to "$false".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ExtraPromptLineCount`, `Use this option if your prompt spans more than one line.


This option is needed less than in previous version of PSReadLine, but is useful when the "InvokePrompt" function is used.`, `Int32`),
            new Parameter_js_3.Parameter(`Colors`, `The Colors parameter is used to specify various colors used by PSReadLine.


The argument is a Hashtable where the keys specify which element and the values specify the color.


Colors can be either a value from ConsoleColor, e.g. [ConsoleColor]::Red, or a valid escape sequence. Valid escape sequences depend on your terminal, e.g. "$([char]0x1b)[91m" (Windows PowerShell) or ""e[91m" (PowerShell 6.0) specifies Red in most terminals. You can specify other escape sequences as well, including but not limited to:


-- 256 color


-- 24 bit color


-- Foreground, background, or both


-- Inverse, bold




The valid keys include:


-- ContinuationPrompt: The color of the continuation prompt.


-- Emphasis: The emphasis color, e.g. the matching text when searching history.


-- Error: The error color, e.g. in the prompt.


-- Selection: The color to highlight the menu selection or selected text.


-- Default: The default token color.


-- Comment: The comment token color.


-- Keyword: The keyword token color.


-- String: The string token color.


-- Operator: The operator token color.


-- Variable: The variable token color.


-- Command: The command token color.


-- Parameter: The parameter token color.


-- Type: The type token color.


-- Number: The number token color.

-- Member: The member name token color.`, `Hashtable`),
            new Parameter_js_3.Parameter(`DingTone`, `When BellStyle is set to Audible, specifies the tone of the beep.`, `Int32`),
            new Parameter_js_3.Parameter(`DingDuration`, `When BellStyle is set to Audible, specifies the duration of the beep.`, `Int32`),
            new Parameter_js_3.Parameter(`BellStyle`, `Specifies how PSReadLine should respond to various error and ambiguous conditions.


Valid values are:


-- Audible: a short beep


-- Visible: a brief flash is performed


-- None: no feedback`, `BellStyle`),
            new Parameter_js_3.Parameter(`CompletionQueryItems`, `Specifies the maximum number of completion items that will be shown without prompting.


If the number of items to show is greater than this value, PSReadLine will prompt y/n before displaying the completion items.`, `Int32`),
            new Parameter_js_3.Parameter(`WordDelimiters`, `Specifies the characters that delimit words for functions like ForwardWord or KillWord.`, `string`),
            new Parameter_js_3.Parameter(`HistorySearchCaseSensitive`, `Specifies the searching history is case sensitive in functions like ReverseSearchHistory or HistorySearchBackward.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`HistorySaveStyle`, `Specifies how PSReadLine should save history.


Valid values are:


-- SaveIncrementally: save history after each command is executed - and share across multiple instances of PowerShell


-- SaveAtExit: append history file when PowerShell exits


-- SaveNothing: don't use a history file`, `HistorySaveStyle`),
            new Parameter_js_3.Parameter(`HistorySavePath`, `Specifies the path to the file where history is saved.`, `String`),
            new Parameter_js_3.Parameter(`AnsiEscapeTimeout`, `This option is specific to Windows when input is redirected, e.g. when running under "tmux" or "screen".


With redirected input on Windows, many keys are sent as a sequence of characters starting with the Escape character, so it is, in general, impossible to distinguish between a single Escape followed by other key presses.


The assumption is the terminal sends the characters quickly, faster than a user types, so PSReadLine waits for this timeout before concluding it won't see an escape sequence.


You can experiment with this timeout if you see issues or random unexpected characters when you type.`, `int`),
            new Parameter_js_3.Parameter(`ViModeIndicator`, `This option sets the visual indication for the current mode in Vi mode - either insert mode or command mode.


Valid values are:


-- None - there is no indication


-- Prompt - the prompt changes color


-- Cursor - the cursor changes size


-- Script - user-specified text is printed`, `ViModeStyle`),
            new Parameter_js_3.Parameter(`ViModeChangeHandler`, `When the "ViModeIndicator" is set to "Script", the script block provided will be invoked every time the mode changes. The script block is provided one argument of type "ViMode". Example usage is shown in Example 3 in this document.`, `ScriptBlock`),
        ], `Customizes the behavior of command line editing in PSReadLine.`, `Set-PSReadLineOption [-EditMode <EditMode>] [-PromptText <String[]>] [-ContinuationPrompt <String>] [-HistoryNoDuplicates] [-AddToHistoryHandler <Func[String, Object]>] [-CommandValidationHandler <Action[CommandAst]>] [-HistorySearchCursorMovesToEnd] [-MaximumHistoryCount <Int32>] [-MaximumKillRingCount <Int32>] [-ShowToolTips] [-ExtraPromptLineCount <Int32>] [-Colors <Hashtable>] [-DingTone <Int32>] [-DingDuration <Int32>] [-BellStyle <BellStyle>] [-CompletionQueryItems <Int32>] [-WordDelimiters <string>] [-HistorySearchCaseSensitive] [-HistorySaveStyle <HistorySaveStyle>] [-HistorySavePath <String>] [-AnsiEscapeTimeout <int>] [-ViModeIndicator <ViModeStyle>] [-ViModeChangeHandler <ScriptBlock>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-PSSessionConfiguration`, [
            new Parameter_js_3.Parameter(`AccessMode`, `Enables and disables the session configuration and determines whether it can be used for remote or local sessions on the computer. The acceptable values for this parameter are:


- Disabled. Disables the session configuration. It cannot be used for remote or local access to the   computer. This value sets the Enabled property of the session configuration   ("WSMan:<ComputerName>\\PlugIn<SessionConfigurationName>\\Enabled") to False . - Local. Adds a Network_Deny_All entry to security descriptor of the session configuration.   Users of the local computer can use the session configuration to create a local loopback session   on the same computer, but remote users are denied access. - Remote. Removes Deny_All and Network_Deny_All entries from the security descriptors of the   session configuration. Users of local and remote computers can use the session configuration to   create sessions and run commands on this computer.


The default value is Remote .


Other cmdlets can override the value of this parameter later. For example, the "Enable-PSRemoting" cmdlet enables all session configurations on the computer and permits remote access to them, and the "Disable-PSRemoting" cmdlet permits only local access to all session configurations on the computer.


This parameter was introduced in PowerShell 3.0.`, `PSSessionConfigurationAccessMode`),
            new Parameter_js_3.Parameter(`ApplicationBase`, `Specifies the path of the assembly file (*.dll) that is specified in the value of the AssemblyName parameter.`, `String`),
            new Parameter_js_3.Parameter(`AssemblyName`, `Specifies the assembly name. This cmdlet creates a session configuration based on a class that is defined in an assembly.


Enter the filename or full path of an assembly .dll file that defines a session configuration. If you enter only the file name, you can enter the path in the value of the ApplicationBase parameter.`, `String`),
            new Parameter_js_3.Parameter(`ConfigurationTypeName`, `Specifies the type of the session configuration that is defined in the assembly in the AssemblyName parameter. The type that you specify must implement the System.Management.Automation.Remoting.PSSessionConfiguration class.


This parameter is required when you specify an assembly name.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Suppresses all user prompts, and restarts the WinRM service without prompting. Restarting the service makes the configuration change effective.


To prevent a restart and suppress the restart prompt, use the NoServiceRestart parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`MaximumReceivedDataSizePerCommandMB`, `Specifies the limit on the amount of data that can be sent to this computer in any single remote command. Enter the data size in megabytes (MB). The default is 50 MB.


If a data size limit is defined in the configuration type that is specified in the ConfigurationTypeName parameter, the limit in the configuration type is used. The value of this parameter is ignored.`, `Double`),
            new Parameter_js_3.Parameter(`MaximumReceivedObjectSizeMB`, `Specifies the limits on the amount of data that can be sent to this computer in any single object. Enter the data size in megabytes. The default is 10 MB.


If an object size limit is defined in the configuration type that is specified in the ConfigurationTypeName parameter, the limit in the configuration type is used. The value of this parameter is ignored.`, `Double`),
            new Parameter_js_3.Parameter(`ModulesToImport`, `Specifies the modules and snap-ins that are automatically imported into sessions that use the session configuration. Enter the module and snap-in names.


By default, only the Microsoft.PowerShell.Core snap-in is imported into sessions, but unless the cmdlets are excluded, you can use the "Import-Module" and Add-PSSnapin cmdlets to add modules and snap-ins to the session.


The modules specified in this parameter value are imported in additions to modules specified in the session configuration file ("New-PSSessionConfigurationFile"). However, settings in the session configuration file can hide the commands exported by modules or prevent users from using them.


The modules specified in this parameter value replace the list of modules specified by using the ModulesToImport parameter of the "Register-PSSessionConfiguration" cmdlet.


This parameter was introduced in PowerShell 3.0.`, `Object[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the session configuration that you want to change.


You cannot use this parameter to change the name of the session configuration.`, `String`),
            new Parameter_js_3.Parameter(`NoServiceRestart`, `Does not restart the WinRM service, and suppresses the prompt to restart the service.


By default, when you run "Set-PSSessionConfiguration", you are prompted to restart the WinRM service to make the new session configuration effective. Until the WinRM service is restarted, the new session configuration is not effective.


To restart the WinRM service without prompting, use the Force parameter. To restart the WinRM service manually, use the "Restart-Service" cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path of a session configuration file (.pssc), such as one created by the "New-PSSessionConfigurationFile" cmdlet. If you omit the path, the default is the current directory.


For information about how to modify a session configuration file, see the help topic for the "New-PSSessionConfigurationFile" cmdlet.


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`PSVersion`, `Specifies the version of PowerShell in sessions that use this session configuration.


The value of this parameter takes precedence over the value of the PowerShellVersion key in the session configuration file.


This parameter was introduced in PowerShell 3.0.`, `Version`),
            new Parameter_js_3.Parameter(`RunAsCredential`, `Specifies credentials for commands in the session. By default, commands run with the permissions of the current user.


This parameter was introduced in PowerShell 3.0.`, `PSCredential`),
            new Parameter_js_3.Parameter(`SecurityDescriptorSddl`, `Specifies a different Security Descriptor Definition Language (SDDL) string for the configuration.


This string determines the permissions that are required to use the new session configuration. To use a session configuration in a session, users must have at least Execute(Invoke) permission for the configuration.


To use the default security descriptor for the configuration, enter an empty string ("") or a value of "$Null". The default is the root SDDL in the WSMan: drive.


If the security descriptor is complex, consider using the ShowSecurityDescriptorUI parameter instead of this one. You cannot use both parameters in the same command.`, `String`),
            new Parameter_js_3.Parameter(`SessionTypeOption`, `Specifies type-specific options for the session configuration. Enter a session type options object, such as the PSWorkflowExecutionOption object that the "New-PSWorkflowExecutionOption" cmdlet returns.


The options of sessions that use the session configuration are determined by the values of session options and the session configuration options. Unless specified, options set in the session, such as by using the "New-PSSessionOption" cmdlet, take precedence over options set in the session configuration. However, session option values cannot exceed maximum values set in the session configuration.


This parameter was introduced in PowerShell 3.0.`, `PSSessionTypeOption`),
            new Parameter_js_3.Parameter(`ShowSecurityDescriptorUI`, `Indicates that this cmdlet a property sheet that helps you create a new SDDL for the session configuration. The property sheet appears after you run the "Set-PSSessionConfiguration" command and then restart the WinRM service.


When you set permissions to the configuration, remember that users must have at least Execute(Invoke) permission to use the session configuration in a session.


You cannot use the SecurityDescriptorSDDL parameter and this parameter in the same command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`StartupScript`, `Specifies the startup script for the configuration. Enter the fully qualified path of a PowerShell script. The specified script runs in the new session that uses the session configuration.


To delete a startup script from a session configuration, enter an empty string ("") or a value of "$Null".


You can use a startup script to further configure the user session. If the script generates an error, even a non-terminating error, the session is not created and the "New-PSSession" command fails.`, `String`),
            new Parameter_js_3.Parameter(`ThreadOptions`, `Specifies the thread options setting in the configuration. This setting defines how threads are created and used when a command is executed in the session. The acceptable values for this parameter are:


- Default


- ReuseThread


- UseCurrentThread


- UseNewThread




The default value is UseCurrentThread .

For more information, see PSThreadOptions Enumeration (/dotnet/api/system.management.automation.runspaces.psthreadoptions).`, `PSThreadOptions`),
            new Parameter_js_3.Parameter(`TransportOption`, `Specifies the transport options for the session configuration. Enter a transport options object, such as the WSManConfigurationOption object that the "New-PSTransportOption" cmdlet returns.


The options of sessions that use the session configuration are determined by the values of session options and the session configuration options. Unless specified, options set in the session, such as by using the "New-PSSessionOption" cmdlet, take precedence over options set in the session configuration. However, session option values cannot exceed maximum values set in the session configuration.


This parameter was introduced in PowerShell 3.0.`, `PSTransportOption`),
            new Parameter_js_3.Parameter(`UseSharedProcess`, `Use only one process to host all sessions that are started by the same user and use the same session configuration. By default, each session is hosted in its own process.


This parameter was introduced in PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Changes the properties of a registered session configuration.`, `Set-PSSessionConfiguration [-Name] <String> [-AccessMode {Disabled | Local | Remote}] [-ApplicationBase <String>] [-Force] [-MaximumReceivedDataSizePerCommandMB <Double>] [-MaximumReceivedObjectSizeMB <Double>] [-ModulesToImport <Object[]>] [-NoServiceRestart] [-PSVersion <Version>] [-RunAsCredential <PSCredential>] [-SecurityDescriptorSddl <String>] [-SessionTypeOption <PSSessionTypeOption>] [-ShowSecurityDescriptorUI] [-StartupScript <String>] [-ThreadOptions {Default | UseNewThread | ReuseThread | UseCurrentThread}] [-TransportOption <PSTransportOption>] [-UseSharedProcess] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-PSSessionConfiguration [-Name] <String> [-AssemblyName] <String> [-ConfigurationTypeName] <String> [-AccessMode {Disabled | Local | Remote}] [-ApplicationBase <String>] [-Force] [-MaximumReceivedDataSizePerCommandMB <Double>] [-MaximumReceivedObjectSizeMB <Double>] [-ModulesToImport <Object[]>] [-NoServiceRestart] [-PSVersion <Version>] [-RunAsCredential <PSCredential>] [-SecurityDescriptorSddl <String>] [-SessionTypeOption <PSSessionTypeOption>] [-ShowSecurityDescriptorUI] [-StartupScript <String>] [-ThreadOptions {Default | UseNewThread | ReuseThread | UseCurrentThread}] [-TransportOption <PSTransportOption>] [-UseSharedProcess] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-PSSessionConfiguration [-Name] <String> [-AccessMode {Disabled | Local | Remote}] [-Force] [-MaximumReceivedDataSizePerCommandMB <Double>] [-MaximumReceivedObjectSizeMB <Double>] [-NoServiceRestart] -Path <String> [-RunAsCredential <PSCredential>] [-SecurityDescriptorSddl <String>] [-ShowSecurityDescriptorUI] [-StartupScript <String>] [-ThreadOptions {Default | UseNewThread | ReuseThread | UseCurrentThread}] [-TransportOption <PSTransportOption>] [-UseSharedProcess] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-RuleOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ScheduledJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-ScheduledJobOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-SecureBootUEFI`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Service`, [
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running "Set-Service".`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies the account used by the service as the Service Logon Account (/windows/desktop/ad/about-service-logon-accounts).


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object, such as one generated by the "Get-Credential" cmdlet. If you type a user name, this cmdlet prompts you for a password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).


This parameter was introduced in PowerShell 6.0.`, `PSCredential`),
            new Parameter_js_3.Parameter(`Description`, `Specifies a new description for the service.


The service description appears in Computer Management, Services . The Description isn't a property of the "Get-Service" ServiceController object. To see the service description, use "Get-CimInstance" that returns a Win32_Service object that represents the service.`, `String`),
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies a new display name for the service.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Specifies the Stop mode of the service. This parameter only works when "-Status Stopped" is used. If enabled, "Set-Service" stops the dependent services before the target service is stopped. By default, exceptions are raised when other running services depend on the target service.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies a ServiceController object that represents the service to change. Enter a variable that contains the object, or type a command or expression that gets the object, such as a "Get-Service" command. You can use the pipeline to send a service object to "Set-Service".`, `ServiceController`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service name of the service to be changed. Wildcard characters aren't permitted. You can use the pipeline to send a service name to "Set-Service".`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns a ServiceController object that represents the services that were changed. By default, "Set-Service" doesn't generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`StartupType`, `Specifies the start mode of the service.


The acceptable values for this parameter are as follows:


- Automatic - The service is started or was started by the operating system, at system start-up.   If an automatically started service depends on a manually started service, the manually started   service is also started automatically at system startup. - AutomaticDelayedStart - Starts shortly after the system boots. - Disabled - The service is disabled and cannot be started by a user or application. - InvalidValue - Has no effect. The cmdlet does not return an error but the StartupType of the   service is not changed. - Manual - The service is started only manually, by a user, using the Service Control Manager,   or by an application.`, `ServiceStartupType`),
            new Parameter_js_3.Parameter(`Status`, `Specifies the status for the service.


The acceptable values for this parameter are as follows:


- Paused . Suspends the service. - Running . Starts the service. - Stopped . Stops the service.`, `String`),
            new Parameter_js_3.Parameter(`SecurityDescriptorSddl`, `Specifies the SecurityDescriptor for the service in Sddl format.`, `String`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if "Set-Service" runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Starts, stops, and suspends a service, and changes its properties.`, `Set-Service [-InputObject] <ServiceController> [-Confirm] [-Credential <PSCredential>] [-Description <String>] [-DisplayName <String>] [-Force] [-PassThru] [-StartupType {Automatic | AutomaticDelayedStart | Disabled | InvalidValue | Manual}] [-Status {Paused | Running | Stopped}] [-SecurityDescriptorSddl <String>] [-WhatIf] [<CommonParameters>]

Set-Service [-Name] <String> [-Confirm] [-Credential <PSCredential>] [-Description <String>] [-DisplayName <String>] [-Force] [-PassThru] [-StartupType {Automatic | AutomaticDelayedStart | Disabled | InvalidValue | Manual}] [-Status {Paused | Running | Stopped}] [-SecurityDescriptorSddl <String>] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-StrictMode`, [
            new Parameter_js_3.Parameter(`Off`, `Indicates that this cmdlet turns strict mode off for the current scope and all child scopes.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Version`, `Specifies the conditions that cause an error in strict mode. This parameter accepts any valid PowerShell version number. Any number higher than 3 is treated as Latest .


The effective values for this parameter are:


- 1.0   - Prohibits references to uninitialized variables, except for uninitialized variables in strings. - 2.0   - Prohibits references to uninitialized variables. This includes uninitialized variables in strings.   - Prohibits references to non-existent properties of an object.   - Prohibits function calls that use the syntax for calling methods. - 3.0   - Prohibits references to uninitialized variables. This includes uninitialized variables in strings.   - Prohibits references to non-existent properties of an object.   - Prohibits function calls that use the syntax for calling methods.   - Prohibit out of bounds or unresolvable array indexes. - Latest   - Selects the latest version available. The latest version is the most strict. Use this value to     make sure that scripts use the strictest available version, even when new versions are added to     PowerShell.`, `Version`),
        ], `Establishes and enforces coding rules in expressions, scripts, and script blocks.`, `Set-StrictMode -Off [<CommonParameters>]

Set-StrictMode -Version <Version> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-TimeZone`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies the ID of the time zone that this cmdlet sets. A full list of Time Zone IDs can be obtained by running the following command: "Get-TimeZone -ListAvailable".`, `String`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies a TimeZoneInfo object to use as input.`, `TimeZoneInfo`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the name of the time zone that this cmdlet sets. A full list of Time Zone names can be obtained by running the following command: "Get-TimeZone -ListAvailable".`, `String`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Sets the system time zone to a specified time zone.`, `Set-TimeZone -Id <String> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-TimeZone [-InputObject] <TimeZoneInfo> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Set-TimeZone [-Name] <String> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-TpmOwnerAuth`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-TraceSource`, [
            new Parameter_js_3.Parameter(`Debugger`, `Indicates that the cmdlet sends the trace output to the debugger. You can view the output in any user-mode or kernel mode debugger or in Microsoft Visual Studio. This parameter also selects the default trace listener.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FilePath`, `Specifies a file that this cmdlet sends the trace output to. This parameter also selects the file trace listener. If you use this parameter to start the trace, use the RemoveFileListener parameter to stop the trace.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet overwrites a read-only file. Use with the FilePath parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ListenerOption`, `Specifies optional data to the prefix of each trace message in the output. The acceptable values for this parameter are:


- None


- LogicalOperationStack


- DateTime


- Timestamp


- ProcessId


- ThreadId


- Callstack




None is the default.

To specify multiple options, separate them with commas, but with no spaces, and enclose them in quotation marks, such as "ProcessID,ThreadID".`, `TraceOptions`),
            new Parameter_js_3.Parameter(`Name`, `Specifies which components are traced. Enter the name of the trace source of each component. Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Option`, `Specifies the type of events that are traced. The acceptable values for this parameter are:


- None


- Constructor


- Dispose


- Finalizer


- Method


- Property


- Delegates


- Events


- Exception


- Lock


- Error


- Errors


- Warning


- Verbose


- WriteLine


- Data


- Scope


- ExecutionFlow


- Assert


- All




All is the default.


The following values are combinations of other values:


- ExecutionFlow: (Constructor, Dispose, Finalizer, Method, Delegates, Events, and Scope)


- Data: (Constructor, Dispose, Finalizer, Property, Verbose, and WriteLine)


- Errors: (Error and Exception).



To specify multiple options, separate them with commas, but with no spaces, and enclose them in quotation marks, such as "Constructor,Dispose".`, `PSTraceSourceOptions`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PSHost`, `ndicates that this cmdlet sends the trace output to the PowerShell host. This parameter also selects the PSHost trace listener.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`RemoveFileListener`, `Stops the trace by removing the file trace listener associated with the specified file. Enter the path and file name of the trace output file.`, `String[]`),
            new Parameter_js_3.Parameter(`RemoveListener`, `Stops the trace by removing the trace listener.


Use the following values with RemoveListener :


- To remove PSHost (console), type "Host".


- To remove Debugger, type "Debug".


- To remove all trace listeners, type "*".




To remove the file trace listener, use the RemoveFileListener parameter.`, `String[]`),
        ], `Configures, starts, and stops a trace of PowerShell components.`, `Set-TraceSource [-Name] <String[]> [[-Option] {None | Constructor | Dispose | Finalizer | Method | Property | Delegates | Events | Exception | Lock | Error | Errors | Warning | Verbose | WriteLine | Data | Scope | ExecutionFlow | Assert | All}] [-Debugger] [-FilePath <String>] [-Force] [-ListenerOption {None | LogicalOperationStack | DateTime | Timestamp | ProcessId | ThreadId | Callstack}] [-PassThru] [-PSHost] [<CommonParameters>]

Set-TraceSource [-Name] <String[]> [-RemoveFileListener <String[]>] [<CommonParameters>]

Set-TraceSource [-Name] <String[]> [-RemoveListener <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-Variable`, [
            new Parameter_js_3.Parameter(`Description`, `Specifies the description of the variable.`, `String`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies an array of items that this cmdlet excludes from the operation. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "*.txt". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Allows you to create a variable with the same name as an existing read-only variable, or to change the value of a read-only variable.


By default, you can overwrite a variable, unless the variable has an option value of ReadOnly or Constant. For more information, see the Option parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies an array of items that this cmdlet includes in the operation. The value of this parameter qualifies the Name parameter. Enter a name or name pattern, such as "c*". Wildcards are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the variable name.`, `String[]`),
            new Parameter_js_3.Parameter(`Option`, `Specifies the value of the Options property of the variable.


Valid values are:


- None: Sets no options. ("None" is the default.)


- ReadOnly: Can be deleted. Cannot be changed, except by using the Force parameter.


- Constant: Cannot be deleted or changed. "Constant" is valid only when you are creating a variable. You cannot change the options of an existing variable to "Constant".


- Private: The variable is available only in the current scope.


- AllScope: The variable is copied to any new scopes that are created.




To see the Options property of all variables in the session, type "Get-Variable | Format-Table -Property name, options -Autosize".`, `ScopedItemOptions`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the new variable. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the scope of the variable.The acceptable values for this parameter are:


- Global


- Local


- Script


- Private


- A number relative to the current scope (0 through the number of scopes, where 0 is the current scope and 1 is its parent).




Local is the default.

For more information, see about_Scopes (../Microsoft.PowerShell.Core/About/about_scopes.md).`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the value of the variable.`, `Object`),
            new Parameter_js_3.Parameter(`Visibility`, `Determines whether the variable is visible outside of the session in which it was created. This parameter is designed for  use in scripts and commands that will be delivered to other users.


Valid values are:


- Public:  The variable is visible. ("Public" is the default.)


- Private: The variable is not visible.




When a variable is private, it does not appear in lists of variables, such as those returned by Get-Variable, or in displays of the Variable: drive. Commands to read or change the value of a private variable return an error. However, the user can run commands that use a private variable if the commands were written in the session in which the variable was defined.`, `SessionStateEntryVisibility`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Sets the value of a variable. Creates the variable if one with the requested name does not exist.`, `Set-Variable [-Name] <String[]> [[-Value] <Object>] [-Description <String>] [-Exclude <String[]>] [-Force] [-Include <String[]>] [-Option {None | ReadOnly | Constant | Private | AllScope | Unspecified}] [-PassThru] [-Scope <String>] [-Visibility {Public | Private}] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WheaMemoryPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinAcceptLanguageFromLanguageListOptOut`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinCultureFromLanguageListOptOut`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinDefaultInputMethodOverride`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WindowsEdition`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WindowsProductKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WindowsSearchSetting`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinHomeLocation`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinLanguageBarOption`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinSystemLocale`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinUILanguageOverride`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WinUserLanguageList`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WSManInstance`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Set-WSManQuickConfig`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Show-Command`, [
            new Parameter_js_3.Parameter(`ErrorPopup`, `Indicates that the cmdlet displays errors in a pop-up window, in addition to displaying them at the command line. By default, when a command that is run in a "Show-Command" window generates an error, the error is displayed only at the command line.


Also, when you run the command (by using the Run button in the "Show-Command" window), the ErrorPopup parameter returns the command results to the current command, instead of running the command and returning its output to a new command. You can use this feature to save the command results in a variable.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Height`, `Specifies the height of the "Show-Command" window in pixels. Enter a value between 300 and the number of pixels in the screen resolution. If the value is too large to display the command window on the screen, "Show-Command" generates an error. The default height is 600 pixels. For a "Show-Command" command that includes the Name parameter, the default height is 300 pixels.`, `Double`),
            new Parameter_js_3.Parameter(`Name`, `Displays a command window for the specified command. Enter the name of one command, such as the name of a cmdlet, function, or CIM command. If you omit this parameter, "Show-Command" displays a command window that lists all of the PowerShell commands in all modules installed on the computer.`, `String`),
            new Parameter_js_3.Parameter(`NoCommonParameter`, `Indicates that this cmdlet omits the Common Parameters section of the command display. By default, the Common Parameters appear in an expandable section at the bottom of the command window.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output. To run the command string, copy and paste it at the command prompt or save it in a variable and use the "Invoke-Expression" cmdlet to run the string in the variable.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Width`, `Specifies the width of the "Show-Command" window in pixels. Enter a value between 300 and the number of pixels in the screen resolution. If the value is too large to display the command window on the screen, "Show-Command" generates an error. The default width is 300 pixels.`, `Double`),
        ], `Displays PowerShell command information in a graphical window.`, `Show-Command [[-Name] <String>] [-ErrorPopup] [-Height <Double>] [-NoCommonParameter] [-PassThru] [-Width <Double>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Show-Markdown`, [
            new Parameter_js_3.Parameter(`InputObject`, `A Markdown string that will be shown in the terminal. If you do not pass in a supported format, "Show-Markdown" will emit an error.`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the path to a Markdown file. Unlike the Path parameter, the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the path to a Markdown file to be rendered.`, `String[]`),
            new Parameter_js_3.Parameter(`UseBrowser`, `Compiles the Markdown input as HTML and opens it in your default browser.`, `SwitchParameter`),
        ], `Shows a Markdown file or string in the console in a friendly way using VT100 escape sequences or in a browser using HTML.`, `Show-Markdown -InputObject <PSObject> [-UseBrowser] [<CommonParameters>]

Show-Markdown -LiteralPath <String[]> [-UseBrowser] [<CommonParameters>]

Show-Markdown [-Path] <String[]> [-UseBrowser] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Show-WindowsDeveloperLicenseRegistration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Sort-Object`, [
            new Parameter_js_3.Parameter(`Bottom`, `Specifies the number of objects to get from the end of a sorted object array. This results in a stable sort.


This parameter was introduced in PowerShell 6.0.`, `Int32`),
            new Parameter_js_3.Parameter(`CaseSensitive`, `Indicates that the sort is case-sensitive. By default, sorts are not case-sensitive.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Culture`, `Specifies the cultural configuration to use for sorts. Use "Get-Culture" to display the system's culture configuration.`, `String`),
            new Parameter_js_3.Parameter(`Descending`, `Indicates that "Sort-Object" sorts the objects in descending order. The default is ascending order.


To sort multiple properties with different sort orders, use a hash table. For example, with a hash table you can sort one property in ascending order and another property in descending order.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `To sort objects, send them down the pipeline to "Sort-Object". If you use the InputObject parameter to submit a collection of items, "Sort-Object" receives one object that represents the collection. Because one object cannot be sorted, "Sort-Object" returns the entire collection unchanged.`, `PSObject`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the property names that "Sort-Object" uses to sort the objects. Wildcards are permitted. Objects are sorted based on the property values. If you do not specify a property, "Sort-Object" sorts based on default properties for the object type.


Multiple properties can be sorted in ascending order, descending order, or a combination of sort orders. When you specify multiple properties, the objects are sorted by the first property. If multiple objects have the same value for the first property, those objects are sorted by the second property. This process continues until there are no more specified properties or no groups of objects.


The Property parameter's value can be a calculated property. To create a calculated property, use a hash table.


Valid keys for a hash table are as follows:


- Expression <string> or <script block>


- Ascending <Boolean>


- Descending <Boolean>`, `Object[]`),
            new Parameter_js_3.Parameter(`Top`, `Specifies the number of objects to get from the start of a sorted object array. This results in a stable sort.


This parameter was introduced in PowerShell 6.0.`, `Int32`),
            new Parameter_js_3.Parameter(`Unique`, `Indicates that "Sort-Object" eliminates duplicates and returns only the unique members of the collection. The first instance of a unique value is included in the sorted output. Unique is case-insensitive. Strings that only differ by character case are considered the same. For example, character and CHARACTER.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Stable`, `The sorted objects are delivered in the order they were received when the sort criteria are equal.


This parameter was added in PowerShell v6.2.0.`, `SwitchParameter`),
        ], `Sorts objects by property values.`, `Sort-Object [[-Property] <Object[]>] -Bottom <Int32> [-CaseSensitive] [-Culture <String>] [-Descending] [-InputObject <PSObject>] [-Unique] [<CommonParameters>]

Sort-Object [[-Property] <Object[]>] [-CaseSensitive] [-Culture <String>] [-Descending] [-InputObject <PSObject>] -Top <Int32> [-Unique] [<CommonParameters>]

Sort-Object [[-Property] <Object[]>] [-CaseSensitive] [-Culture <String>] [-Descending] [-InputObject <PSObject>] [-Unique] [-Stable] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Split-Path`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Extension`, `Indicates that this cmdlet returns only the extension of the leaf. For example, in the path "C:\\Test\\Logs\\Pass1.log", it returns only ".log".


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IsAbsolute`, `Indicates that this cmdlet returns $True if the path is absolute and $False if it is relative. An absolute path has a length greater than zero and does not use a dot (.) to indicate the current path.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Leaf`, `Indicates that this cmdlet returns only the last item or container in the path. For example, in the path "C:\\Test\\Logs\\Pass1.log", it returns only Pass1.log.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LeafBase`, `Indicates that this cmdlet returns only base name of the leaf. For example, in the path "C:\\Test\\Logs\\Pass1.log", it returns only "Pass1".


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the paths to be split. Unlike Path , the value of LiteralPath is used exactly as it is typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`NoQualifier`, `Indicates that this cmdlet returns the path without the qualifier. For the FileSystem or registry providers, the qualifier is the drive of the provider path, such as C: or HKCU:. For example, in the path "C:\\Test\\Logs\\Pass1.log", it returns only \\Test\\Logs\\Pass1.log.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Parent`, `Indicates that this cmdlet returns only the parent containers of the item or of the container specified by the path. For example, in the path "C:\\Test\\Logs\\Pass1.log", it returns C:\\Test\\Logs. The Parent parameter is the default split location parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the paths to be split. Wildcard characters are permitted. If the path includes spaces, enclose it in quotation marks. You can also pipe a path to this cmdlet.`, `String[]`),
            new Parameter_js_3.Parameter(`Qualifier`, `Indicates that this cmdlet returns only the qualifier of the specified path. For the FileSystem or registry providers, the qualifier is the drive of the provider path, such as C: or HKCU:.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Resolve`, `Indicates that this cmdlet displays the items that are referenced by the resulting split path instead of displaying the path elements.`, `SwitchParameter`),
        ], `Returns the specified part of a path.`, `Split-Path [-Path] <String[]> [-Credential <PSCredential>] [-Extension] [-Resolve] [<CommonParameters>]

Split-Path [-Path] <String[]> [-Credential <PSCredential>] [-IsAbsolute] [-Resolve] [<CommonParameters>]

Split-Path [-Path] <String[]> [-Credential <PSCredential>] [-Leaf] [-Resolve] [<CommonParameters>]

Split-Path [-Path] <String[]> [-Credential <PSCredential>] [-LeafBase] [-Resolve] [<CommonParameters>]

Split-Path [-Credential <PSCredential>] -LiteralPath <String[]> [-Resolve] [<CommonParameters>]

Split-Path [-Path] <String[]> [-Credential <PSCredential>] [-NoQualifier] [-Resolve] [<CommonParameters>]

Split-Path [-Path] <String[]> [-Credential <PSCredential>] [-Parent] [-Resolve] [<CommonParameters>]

Split-Path [-Path] <String[]> [[-Qualifier]] [-Credential <PSCredential>] [-Resolve] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Split-WindowsImage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-BitsTransfer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-DscConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-DtcDiagnosticResourceManager`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Job`, [
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies an array of arguments, or parameter values, for the script that is specified by the FilePath parameter or a command specified with the ScriptBlock parameter.


Arguments must be passed to ArgumentList as single-dimension array argument. For example, a comma-separated list. For more information about array dimensions, see about_Arrays (./about/about_arrays.md#rank).`, `Object[]`),
            new Parameter_js_3.Parameter(`Authentication`, `Specifies the mechanism that is used to authenticate user credentials.


The acceptable values for this parameter are as follows:


- Default


- Basic


- Credssp


- Digest


- Kerberos


- Negotiate


- NegotiateWithImplicitCredential




The default value is Default.


CredSSP authentication is available only in Windows Vista, Windows Server 2008, and later versions of the Windows operating system.


For more information about the values of this parameter, see AuthenticationMechanism (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).

> [!CAUTION] > Credential Security Support Provider (CredSSP) authentication, in which the user's credentials are > passed to a remote computer to be authenticated, is designed for commands that require > authentication on more than one resource, such as accessing a remote network share. This mechanism > increases the security risk of the remote operation. If the remote computer is compromised, the > credentials that are passed to it can be used to control the network session.`, `AuthenticationMechanism`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to perform this action. If the Credential parameter isn't specified, the command uses the current user's credentials.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`DefinitionName`, `Specifies the definition name of the job that this cmdlet starts. Use this parameter to start custom job types that have a definition name, such as scheduled jobs.


When you use "Start-Job" to start an instance of a scheduled job, the job starts immediately, regardless of job triggers or job options. The resulting job instance is a scheduled job, but it isn't saved to disk like triggered scheduled jobs. You can't use the ArgumentList parameter of "Start-Job" to provide values for parameters of scripts that run in a scheduled job.


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`DefinitionPath`, `Specifies path of the definition for the job that this cmdlet starts. Enter the definition path. The concatenation of the values of the DefinitionPath and DefinitionName parameters is the fully qualified path of the job definition. Use this parameter to start custom job types that have a definition path, such as scheduled jobs.


For scheduled jobs, the value of the DefinitionPath parameter is "$home\\AppData\\Local\\Windows\\PowerShell\\ScheduledJob".


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`FilePath`, `Specifies a local script that "Start-Job" runs as a background job. Enter the path and file name of the script or use the pipeline to send a script path to "Start-Job". The script must be on the local computer or in a folder that the local computer can access.


When you use this parameter, PowerShell converts the contents of the specified script file to a script block and runs the script block as a background job.`, `String`),
            new Parameter_js_3.Parameter(`InitializationScript`, `Specifies commands that run before the job starts. To create a script block, enclose the commands in curly braces ("{}").


Use this parameter to prepare the session in which the job runs. For example, you can use it to add functions, snap-ins, and modules to the session.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies input to the command. Enter a variable that contains the objects, or type a command or expression that generates the objects.


In the value of the ScriptBlock parameter, use the "$input" automatic variable to represent the input objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a local script that this cmdlet runs as a background job. Enter the path of a script on the local computer.


"Start-Job" uses the value of the LiteralPath parameter exactly as it's typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`Name`, `Specifies a friendly name for the new job. You can use the name to identify the job to other job cmdlets, such as the "Stop-Job" cmdlet.


The default friendly name is "Job#", where "#" is an ordinal number that is incremented for each job.`, `String`),
            new Parameter_js_3.Parameter(`PSVersion`, `Specifies a version of PowerShell to use for running the job. When the value of PSVersion is 5.1 The job is run in a Windows PowerShell 5.1 session. For any other value, the job is run using the current version of PowerShell.


This parameter was added in PowerShell 7 and only works on Windows.`, `Version`),
            new Parameter_js_3.Parameter(`RunAs32`, `Beginning with PowerShell 7, the RunAs32 parameter doesn't work on 64-bit PowerShell ("pwsh"). If RunAs32 is specified in 64-bit PowerShell, "Start-Job" throws a terminating exception error. To start a 32-bit PowerShell ("pwsh") process with RunAs32 , you need to have the 32-bit PowerShell installed.


In 32-bit PowerShell, RunAs32 forces the job to run in a 32-bit process, even on a 64-bit operating system.


On 64-bit versions of Windows 7 and Windows Server 2008 R2, when the "Start-Job" command includes the RunAs32 parameter, you can't use the Credential parameter to specify the credentials of another user.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ScriptBlock`, `Specifies the commands to run in the background job. To create a script block, enclose the commands in curly braces ("{}"). Use the "$input" automatic variable to access the value of the InputObject parameter. This parameter is required.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`Type`, `Specifies the custom type for jobs started by "Start-Job". Enter a custom job type name, such as PSScheduledJob for scheduled jobs or PSWorkflowJob for workflows jobs. This parameter isn't valid for standard background jobs.


This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`WorkingDirectory`, `Specifies the initial working directory of the background job. If the parameter isn't specified, the job runs from the default location. The default location is the current working directory of the caller that started the job.


This parameter was introduced in PowerShell 7.`, `String`),
        ], `Starts a PowerShell background job.`, `Start-Job [-ScriptBlock] <ScriptBlock> [[-InitializationScript] <ScriptBlock>] [-ArgumentList <Object[]>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-Credential <PSCredential>] [-InputObject <PSObject>] [-Name <String>] [-PSVersion <Version>] [-RunAs32] [<CommonParameters>]

Start-Job [[-InitializationScript] <ScriptBlock>] [-ArgumentList <Object[]>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-Credential <PSCredential>] [-InputObject <PSObject>] -LiteralPath <String> [-Name <String>] [-PSVersion <Version>] [-RunAs32] [<CommonParameters>]

Start-Job [-FilePath] <String> [[-InitializationScript] <ScriptBlock>] [-ArgumentList <Object[]>] [-Authentication {Default | Basic | Negotiate | NegotiateWithImplicitCredential | Credssp | Digest | Kerberos}] [-Credential <PSCredential>] [-InputObject <PSObject>] [-Name <String>] [-PSVersion <Version>] [-RunAs32] [<CommonParameters>]

Start-Job [-DefinitionName] <String> [[-DefinitionPath] <String>] [[-Type] <String>] [<CommonParameters>]

Start-Job [-WorkingDirectory <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-OSUninstall`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Process`, [
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies parameters or parameter values to use when this cmdlet starts the process. If parameters or parameter values contain a space, they need surrounded with escaped double quotes.`, `String[]`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to perform this action. By default, the cmdlet uses the credentials of the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`FilePath`, `Specifies the optional path and filename of the program that runs in the process. Enter the name of an executable file or of a document, such as a .txt or .doc file, that is associated with a program on the computer. This parameter is required.


If you specify only a filename, use the WorkingDirectory parameter to specify the path.`, `String`),
            new Parameter_js_3.Parameter(`LoadUserProfile`, `Indicates that this cmdlet loads the Windows user profile stored in the HKEY_USERS registry key for the current user.


This parameter does not affect the PowerShell profiles. For more information, see about_Profiles (../Microsoft.PowerShell.Core/About/about_Profiles.md).`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NoNewWindow`, `Start the new process in the current console window. By default PowerShell opens a new window.


You cannot use the NoNewWindow and WindowStyle parameters in the same command.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns a process object for each process that the cmdlet started. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`RedirectStandardError`, `Specifies a file. This cmdlet sends any errors generated by the process to a file that you specify. Enter the path and filename. By default, the errors are displayed in the console.`, `String`),
            new Parameter_js_3.Parameter(`RedirectStandardInput`, `Specifies a file. This cmdlet reads input from the specified file. Enter the path and filename of the input file. By default, the process gets its input from the keyboard.`, `String`),
            new Parameter_js_3.Parameter(`RedirectStandardOutput`, `Specifies a file. This cmdlet sends the output generated by the process to a file that you specify. Enter the path and filename. By default, the output is displayed in the console.`, `String`),
            new Parameter_js_3.Parameter(`UseNewEnvironment`, `Indicates that this cmdlet uses new environment variables specified for the process. By default, the started process runs with the environment variables specified for the computer and user.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Verb`, `Specifies a verb to use when this cmdlet starts the process. The verbs that are available are determined by the filename extension of the file that runs in the process.


The following table shows the verbs for some common process file types.


| File type |                Verbs                | | --------- | ----------------------------------- | | .cmd      | Edit, Open, Print, RunAs, RunAsUser | | .exe      | Open, RunAs, RunAsUser              | | .txt      | Open, Print, PrintTo                | | .wav      | Open, Play                          |


To find the verbs that can be used with the file that runs in a process, use the "New-Object" cmdlet to create a System.Diagnostics.ProcessStartInfo object for the file. The available verbs are in the Verbs property of the ProcessStartInfo object. For details, see the examples.`, `String`),
            new Parameter_js_3.Parameter(`Wait`, `Indicates that this cmdlet waits for the specified process and its descendants to complete before accepting more input. This parameter suppresses the command prompt or retains the window until the processes finish.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WindowStyle`, `Specifies the state of the window that is used for the new process. The acceptable values for this parameter are: Normal , Hidden , Minimized , and Maximized . The default value is Normal .


You cannot use the WindowStyle and NoNewWindow parameters in the same command.`, `ProcessWindowStyle`),
            new Parameter_js_3.Parameter(`WorkingDirectory`, `Specifies the location of the executable file or document that runs in the process. The default is the folder for the new process.`, `String`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.


This parameter was introduced in PowerShell 6.0.`, `SwitchParameter`),
        ], `Starts one or more processes on the local computer.`, `Start-Process [-FilePath] <String> [[-ArgumentList] <String[]>] [-Credential <PSCredential>] [-LoadUserProfile] [-NoNewWindow] [-PassThru] [-RedirectStandardError <String>] [-RedirectStandardInput <String>] [-RedirectStandardOutput <String>] [-UseNewEnvironment] [-Wait] [-WindowStyle {Normal | Hidden | Minimized | Maximized}] [-WorkingDirectory <String>] [-Confirm] [-WhatIf] [<CommonParameters>]

Start-Process [-FilePath] <String> [[-ArgumentList] <String[]>] [-PassThru] [-Verb <String>] [-Wait] [-WindowStyle {Normal | Hidden | Minimized | Maximized}] [-WorkingDirectory <String>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Service`, [
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies the display names of the services to start. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies services that this cmdlet omits. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Include`, `Specifies services that this cmdlet starts. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies ServiceController objects representing the services to be started. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `ServiceController[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service names for the service to be started.


The parameter name is optional. You can use Name or its alias, ServiceName , or you can omit the parameter name.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the service. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Starts one or more stopped services.`, `Start-Service -DisplayName <String[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Start-Service [-InputObject] <ServiceController[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Start-Service [-Name] <String[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Sleep`, [
            new Parameter_js_3.Parameter(`Milliseconds`, `Specifies how long the resource sleeps in milliseconds. The parameter can be abbreviated as m .`, `Int32`),
            new Parameter_js_3.Parameter(`Seconds`, `Specifies how long the resource sleeps in seconds. You can omit the parameter name or you can abbreviate it as s . Beginning in PowerShell 6.2.0, this parameter now accepts fractional values.`, `Double`),
        ], `Suspends the activity in a script or session for the specified period of time.`, `Start-Sleep -Milliseconds <Int32> [<CommonParameters>]

Start-Sleep [-Seconds] <Double> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-ThreadJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Start-Transcript`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Computer`, [
            new Parameter_js_3.Parameter(`ComputerName`, `Specifies the computers to stop. The default is the local computer.


Type the NETBIOS name, IP address, or fully qualified domain name of one or more computers in a comma-separated list. To specify the local computer, type the computer name or localhost.


This parameter doesn't rely on PowerShell remoting. You can use the ComputerName parameter even if your computer isn't configured to run remote commands.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Credential`, `Specifies a user account that has permission to do this action. The default is the current user.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Force`, `Forces an immediate shut down of the computer.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WsmanAuthentication`, `Specifies the mechanism that is used to authenticate the user credentials when this cmdlet uses the WSMan protocol. The default value is Default .


The acceptable values for this parameter are:


- Basic


- CredSSP


- Default


- Digest


- Kerberos


- Negotiate.




For more information about the values of this parameter, see AuthenticationMechanism (/dotnet/api/system.management.automation.runspaces.authenticationmechanism).


> [!CAUTION] > Credential Security Service Provider (CredSSP) authentication, in which the user credentials are > passed to a remote computer to be authenticated, is designed for commands that require > authentication on more than one resource, such as accessing a remote network share. This mechanism > increases the security risk of the remote operation. If the remote computer is compromised, the > credentials that are passed to it can be used to control the network session.

This parameter was introduced in PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Stops (shuts down) local and remote computers.`, `Stop-Computer [[-ComputerName] <String[]>] [[-Credential] <PSCredential>] [-Confirm] [-Force] [-WsmanAuthentication {Default | Basic | Negotiate | CredSSP | Digest | Kerberos}] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-DtcDiagnosticResourceManager`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Job`, [
            new Parameter_js_3.Parameter(`Filter`, `Specifies a hash table of conditions. This cmdlet stops jobs that satisfy all of the conditions. Enter a hash table where the keys are job properties and the values are job property values.


This parameter works only on custom job types, such as workflow jobs and scheduled jobs. It does not work on standard background jobs, such as those created by using the Start-Job cmdlet. For information about support for this parameter, see the help topic for the job type.


This parameter was introduced in Windows PowerShell 3.0.`, `Hashtable`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the IDs of jobs that this cmdlet stops. The default is all jobs in the current session.


The ID is an integer that uniquely identifies the job in the current session. It is easier to remember and type than the instance ID, but it is unique only in the current session. You can type one or more IDs, separated by commas. To find the ID of a job, type "Get-Job".`, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies the instance IDs of jobs that this cmdlet stops. The default is all jobs.


An instance ID is a GUID that uniquely identifies the job on the computer. To find the instance ID of a job, use Get-Job.`, `Guid[]`),
            new Parameter_js_3.Parameter(`Job`, `Specifies the jobs that this cmdlet stops. Enter a variable that contains the jobs or a command that gets the jobs. You can also use a pipeline operator to submit jobs to the Stop-Job cmdlet. By default, Stop-Job deletes all jobs that were started in the current session.`, `Job[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies friendly names of jobs that this cmdlet stops. Enter the job names in a comma-separated list or use wildcard characters (*) to enter a job name pattern. By default, Stop-Job stops all jobs created in the current session.


Because the friendly name is not guaranteed to be unique, use the WhatIf and Confirm parameters when stopping jobs by name.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`State`, `Specifies a job state. This cmdlet stops only jobs in the specified state. The acceptable values for this parameter are:


- NotStarted


- Running


- Completed


- Failed


- Stopped


- Blocked


- Suspended


- Disconnected


- Suspending


- Stopping




For more information about job states, see JobState Enumeration (https://msdn.microsoft.com/library/system.management.automation.jobstate)in the MSDN library.`, `JobState`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Stops a PowerShell background job.`, `Stop-Job [-Filter] <Hashtable> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Job [-Id] <Int32[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Job [-InstanceId] <Guid[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Job [-Job] <Job[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Job [-Name] <String[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Job [-State] {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint} [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Process`, [
            new Parameter_js_3.Parameter(`Force`, `Stops the specified processes without prompting for confirmation. By default, Stop-Process prompts for confirmation before stopping any process that is not owned by the current user.


To find the owner of a process, use the Get-WmiObject cmdlet to get a Win32_Process object that represents the process, and then use the GetOwner method of the object.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Id`, `Specifies the process IDs of the processes to stop. To specify multiple IDs, use commas to separate the IDs. To find the PID of a process, type "Get-Process".`, `Int32[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the process objects to stop. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `Process[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the process names of the processes to stop. You can type multiple process names, separated by commas, or use wildcard characters.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the process. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Stops one or more running processes.`, `Stop-Process [-Id] <Int32[]> [-Force] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Process [-InputObject] <Process[]> [-Force] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Process [-Force] -Name <String[]> [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Service`, [
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies the display names of the services to stop. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies services that this cmdlet omits. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Forces the cmdlet to stop a service even if that service has dependent services.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Include`, `Specifies services that this cmdlet stops. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as s*. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies ServiceController objects that represent the services to stop. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `ServiceController[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service names of the services to stop. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`NoWait`, `Indicates that this cmdlet uses the no wait option.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object that represents the service. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Stops one or more running services.`, `Stop-Service -DisplayName <String[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-NoWait] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Service [-InputObject] <ServiceController[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-NoWait] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Stop-Service [-Name] <String[]> [-Exclude <String[]>] [-Force] [-Include <String[]>] [-NoWait] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Stop-Transcript`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Suspend-BitsTransfer`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Suspend-Service`, [
            new Parameter_js_3.Parameter(`DisplayName`, `Specifies the display names of the services to be suspended. Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies services to omit from the specified services. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Include`, `Specifies services to suspend. The value of this parameter qualifies the Name parameter. Enter a name element or pattern, such as "s*". Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies ServiceController objects that represent the services to suspend. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `ServiceController[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the service names of the services to suspend. Wildcard characters are permitted.


The parameter name is optional. You can use Name or its alias, ServiceName , or you can omit the parameter name.`, `String[]`),
            new Parameter_js_3.Parameter(`PassThru`, `Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Suspends (pauses) one or more running services.`, `Suspend-Service -DisplayName <String[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Suspend-Service [-InputObject] <ServiceController[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]

Suspend-Service [-Name] <String[]> [-Exclude <String[]>] [-Include <String[]>] [-PassThru] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Switch-Certificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Tee-Object`, [
            new Parameter_js_3.Parameter(`Append`, `Indicates that the cmdlet appends the output to the specified file. Without this parameter, the new content replaces any existing content in the file without warning.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FilePath`, `Specifies a file that this cmdlet saves the object to Wildcard characters are permitted, but must resolve to a single file.`, `String`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the object to be saved and displayed. Enter a variable that contains the objects or type a command or expression that gets the objects. You can also pipe an object to "Tee-Object".


When you use the InputObject parameter with "Tee-Object", instead of piping command results to "Tee-Object", the InputObject value is treated as a single object even if the value is a collection.`, `PSObject`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a file that this cmdlet saves the object to. Unlike FilePath , the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String`),
            new Parameter_js_3.Parameter(`Variable`, `Specifies a variable that the cmdlet saves the object to. Enter a variable name without the preceding dollar sign ("$").`, `String`),
        ], `Saves command output in a file or variable and also sends it down the pipeline.`, `Tee-Object [-FilePath] <String> [-Append] [-InputObject <PSObject>] [<CommonParameters>]

Tee-Object [-InputObject <PSObject>] -LiteralPath <String> [<CommonParameters>]

Tee-Object [-InputObject <PSObject>] -Variable <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-AppLockerPolicy`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-Certificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-Connection`, [
            new Parameter_js_3.Parameter(`BufferSize`, `Specifies the size, in bytes, of the buffer sent with this command. The default value is 32.`, `Int32`),
            new Parameter_js_3.Parameter(`Repeat`, `Causes the cmdlet to send ping requests continuously. This parameter can't be used with the Count parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Count`, `Specifies the number of echo requests to send. The default value is 4.`, `Int32`),
            new Parameter_js_3.Parameter(`Delay`, `Specifies the interval between pings, in seconds.`, `System.Int32`),
            new Parameter_js_3.Parameter(`DontFragment`, `This parameter sets the Don't Fragment flag in the IP header. You can use this parameter with the BufferSize parameter to test the Path MTU size. For more information about Path MTU, see the Path MTU Discovery (https://wikipedia.org/wiki/Path_MTU_Discovery)article in wikipedia.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IPv4`, `Forces the cmdlet to use the IPv4 protocol for the test.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IPv6`, `Forces the cmdlet to use the IPv6 protocol for the test.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`MaxHops`, `Sets the maximum number of hops that an ICMP request message can be sent. The default value is controlled by the operating system. The default value for Windows 10 is 128 hops.`, `Int32`),
            new Parameter_js_3.Parameter(`MTUSize`, `This parameter is used to discover the Path MTU size. The cmdlet returns a PingReply#MTUSize object that contains the Path MTU size to the target. For more information about Path MTU, see the Path MTU Discovery (https://wikipedia.org/wiki/Path_MTU_Discovery)article in wikipedia.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Ping`, `Causes the cmdlet to do a ping test. This is the default mode for the "Test-Connection" cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Quiet`, `The Quiet parameter returns a Boolean value. Using this parameter suppresses all errors.


Each connection that's tested returns a Boolean value. If the TargetName parameter specifies multiple computers, an array of Boolean values is returned.


If any ping to a given target succeeds, "$True" is returned.


If all pings to a given target fail, "$False" is returned.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`ResolveDestination`, `Causes the cmdlet to attempt to resolve the DNS name of the target. When used in conjunction with the Traceroute parameter, the DNS names of all intermediate hosts will also be retrieved, if possible.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Source`, `Specifies the names of the computers where the ping originates. Enter a comma-separated list of computer names. The default is the local computer. NOTE: This parameter is not functional in PowerShell versions 6 and up. Supplying this parameter will have no effect on the command.`, `String`),
            new Parameter_js_3.Parameter(`TargetName`, `Specifies the computer(s) to test. Type the computer names or type IP addresses in IPv4 or IPv6 format.`, `String[]`),
            new Parameter_js_3.Parameter(`TCPPort`, `Specifies the TCP port number on the target to be used in the TCP connection test. The cmdlet will attempt to make a TCP connection to the specified port on the target.


If a connection can be made, "$True" will be returned.


If a connection cannot be made, "$False" will be returned.`, `Int32`),
            new Parameter_js_3.Parameter(`TimeoutSeconds`, `Sets the timeout value for the test. The test fails if a response isn't received before the timeout expires. The default is five seconds.


This parameter was introduced in PowerShell 6.0.`, `Int32`),
            new Parameter_js_3.Parameter(`Traceroute`, `Causes the cmdlet to do a traceroute test. When this parameter is used, the cmdlet returns a "TestConnectionCommand+TraceStatus" object.`, `SwitchParameter`),
        ], `Sends ICMP echo request packets, or pings, to one or more computers.`, `Test-Connection [-TargetName] <String[]> [-BufferSize <Int32>] [-Count <Int32>] [-Delay <System.Int32>] [-DontFragment] [-IPv4] [-IPv6] [-MaxHops <Int32>] [-Ping] [-Quiet] [-ResolveDestination] [-Source <String>] [-TimeoutSeconds <Int32>] [<CommonParameters>]

Test-Connection [-TargetName] <String[]> [-BufferSize <Int32>] [-Repeat] [-Delay <System.Int32>] [-DontFragment] [-IPv4] [-IPv6] [-MaxHops <Int32>] [-Ping] [-Quiet] [-ResolveDestination] [-Source <String>] [-TimeoutSeconds <Int32>] [<CommonParameters>]

Test-Connection [-TargetName] <String[]> [-IPv4] [-IPv6] [-MaxHops <Int32>] [-Quiet] [-ResolveDestination] [-Source <String>] [-TimeoutSeconds <Int32>] -Traceroute [<CommonParameters>]

Test-Connection [-TargetName] <String[]> [-IPv4] [-IPv6] -MTUSize [-Quiet] [-ResolveDestination] [-TimeoutSeconds <Int32>] [<CommonParameters>]

Test-Connection [-TargetName] <String[]> [-IPv4] [-IPv6] [-Quiet] [-ResolveDestination] [-Source <String>] -TCPPort <Int32> [-TimeoutSeconds <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-DscConfiguration`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-FileCatalog`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-Json`, [
            new Parameter_js_3.Parameter(`Json`, `Specifies the JSON string to test for validity. Enter a variable that contains the string, or type a command or expression that gets the string. You can also pipe a string to "Test-Json".


The Json parameter is required.`, `String`),
            new Parameter_js_3.Parameter(`Schema`, `Specifies a Schema to validate the JSON input against. If passed "Test-Json" will validate that the Json input conforms to the spec specified by the Schema parameter and return "$True" only if the input conforms to the provided Schema.


For more information, see JSON Schema (https://json-schema.org/).`, `String`),
        ], `Tests whether a string is a valid JSON document`, `Test-Json [-Json] <String> [[-Schema] <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-KdsRootKey`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-ModuleManifest`, [
            new Parameter_js_3.Parameter(`Path`, `Specifies a path and file name for the manifest file. Enter an optional path and name of the module manifest file that has the .psd1 file name extension. The default location is the current directory. Wildcard characters are supported, but must resolve to a single module manifest file. This parameter is required. You can also pipe a path to Test-ModuleManifest .`, `String`),
        ], `Verifies that a module manifest file accurately describes the contents of a module.`, `Test-ModuleManifest [-Path] <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-Path`, [
            new Parameter_js_3.Parameter(`Credential`, `> [!NOTE] > This parameter is not supported by any providers installed with PowerShell. > To impersonate another user, or elevate your credentials when running this cmdlet, > use Invoke-Command (../Microsoft.PowerShell.Core/Invoke-Command.md).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Exclude`, `Specifies items that this cmdlet omits. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "*.txt". Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a filter in the format or language of the provider. The value of this parameter qualifies the Path parameter. The syntax of the filter, including the use of wildcard characters, depends on the provider. Filters are more efficient than other parameters, because the provider applies them when it retrieves the objects instead of having PowerShell filter the objects after they are retrieved.`, `String`),
            new Parameter_js_3.Parameter(`Include`, `Specifies paths that this cmdlet tests. The value of this parameter qualifies the Path parameter. Enter a path element or pattern, such as "*.txt". Wildcard characters are permitted.`, `String[]`),
            new Parameter_js_3.Parameter(`IsValid`, `Indicates that this cmdlet tests the syntax of the path, regardless of whether the elements of the path exist. This cmdlet returns "$True" if the path syntax is valid and "$False" if it is not.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies a path to be tested. Unlike Path , the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`NewerThan`, `Specify a time as a DateTime object.`, `DateTime`),
            new Parameter_js_3.Parameter(`OlderThan`, `Specify a time as a DateTime object.`, `DateTime`),
            new Parameter_js_3.Parameter(`Path`, `Specifies a path to be tested. Wildcard characters are permitted. If the path includes spaces, enclose it in quotation marks.`, `String[]`),
            new Parameter_js_3.Parameter(`PathType`, `Specifies the type of the final element in the path. This cmdlet returns "$True" if the element is of the specified type and "$False" if it is not. The acceptable values for this parameter are:


- Container.   An element that contains other elements, such as a directory or registry key. - Leaf.   An element that does not contain other elements, such as a file. - Any.   Either a container or a leaf.


Tells whether the final element in the path is of a particular type.


> [!CAUTION] > > Up to PowerShell version 6.1.2, when the IsValid and PathType switches are > specified together, the "Test-Path" cmdlet ignores the PathType switch and only > validates the syntactic path without validating the path type. > > According to issue #8607 (https://github.com/PowerShell/PowerShell/issues/8607), fixing this > behavior may be a breaking change in a future version, where the IsValid and PathType > switches belong to separate parameter sets, and thus, cannot be used together avoiding this > confusion.`, `TestPathType`),
        ], `Determines whether all elements of a path exist.`, `Test-Path [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-IsValid] -LiteralPath <String[]> [-NewerThan <DateTime>] [-OlderThan <DateTime>] [-PathType {Any | Container | Leaf}] [<CommonParameters>]

Test-Path [-Path] <String[]> [-Credential <PSCredential>] [-Exclude <String[]>] [-Filter <String>] [-Include <String[]>] [-IsValid] [-NewerThan <DateTime>] [-OlderThan <DateTime>] [-PathType {Any | Container | Leaf}] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-PSSessionConfigurationFile`, [
            new Parameter_js_3.Parameter(`Path`, `Specifies the path and filename of a session configuration file (.pssc). If you omit the path, the default is the current folder. Wildcard characters are supported, but they must resolve to a single file. You can also pipe a session configuration file path to "Test-PSSessionConfigurationFile".`, `String`),
        ], `Verifies the keys and values in a session configuration file.`, `Test-PSSessionConfigurationFile [-Path] <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Test-WSMan`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Trace-Command`, [
            new Parameter_js_3.Parameter(`ArgumentList`, `Specifies the parameters and parameter values for the command being traced. The alias for ArgumentList is Args . This feature is especially useful for debugging dynamic parameters.`, `Object[]`),
            new Parameter_js_3.Parameter(`Command`, `Specifies a command that is being processed during the trace.`, `String`),
            new Parameter_js_3.Parameter(`Debugger`, `Indicates that the cmdlet sends the trace output to the debugger. You can view the output in any user-mode or kernel mode debugger or in Visual Studio. This parameter also selects the default trace listener.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Expression`, `Specifies the expression that is being processed during the trace. Enclose the expression in braces ({}).`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`FilePath`, `Specifies a file that the cmdlet sends the trace output to. This parameter also selects the file trace listener.`, `String`),
            new Parameter_js_3.Parameter(`Force`, `Forces the command to run without asking for user confirmation. Used with the FilePath parameter. Even using the Force parameter, the cmdlet cannot override security restrictions.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies input to the expression that is being processed during the trace.


You can enter a variable that represents the input that the expression accepts, or pass an object through the pipeline.`, `PSObject`),
            new Parameter_js_3.Parameter(`ListenerOption`, `Specifies optional data to the prefix of each trace message in the output. The acceptable values for this parameter are:


- None


- LogicalOperationStack


- DateTime


- Timestamp


- ProcessId


- ThreadId


- Callstack




None is the default.

To specify multiple options, separate them with commas, but with no spaces, and enclose them in quotation marks, such as "ProcessID,ThreadID".`, `TraceOptions`),
            new Parameter_js_3.Parameter(`Name`, `Specifies an array of PowerShell components that are traced. Enter the name of the trace source of each component. Wildcards are permitted. To find the trace sources on your computer, type "Get-TraceSource".`, `String[]`),
            new Parameter_js_3.Parameter(`Option`, `Determines the type of events that are traced. The acceptable values for this parameter are:


- None


- Constructor


- Dispose


- Finalizer


- Method


- Property


- Delegates


- Events


- Exception


- Lock


- Error


- Errors


- Warning


- Verbose


- WriteLine


- Data


- Scope


- ExecutionFlow


- Assert


- All




All is the default.


The following values are combinations of other values:


- ExecutionFlow: (Constructor, Dispose, Finalizer, Method, Delegates, Events, and Scope)


- Data: (Constructor, Dispose, Finalizer, Property, Verbose, and WriteLine)


- Errors: (Error and Exception).



To specify multiple options, separate them with commas, but with no spaces, and enclose them in quotation marks, such as "Constructor,Dispose".`, `PSTraceSourceOptions`),
            new Parameter_js_3.Parameter(`PSHost`, `Indicates that the cmdlet sends the trace output to the PowerShell host. This parameter also selects the PSHost trace listener.`, `SwitchParameter`),
        ], `Configures and starts a trace of the specified expression or command.`, `Trace-Command [-Name] <String[]> [-Command] <String> [[-Option] {None | Constructor | Dispose | Finalizer | Method | Property | Delegates | Events | Exception | Lock | Error | Errors | Warning | Verbose | WriteLine | Data | Scope | ExecutionFlow | Assert | All}] [-ArgumentList <Object[]>] [-Debugger] [-FilePath <String>] [-Force] [-InputObject <PSObject>] [-ListenerOption {None | LogicalOperationStack | DateTime | Timestamp | ProcessId | ThreadId | Callstack}] [-PSHost] [<CommonParameters>]

Trace-Command [-Name] <String[]> [-Expression] <ScriptBlock> [[-Option] {None | Constructor | Dispose | Finalizer | Method | Property | Delegates | Events | Exception | Lock | Error | Errors | Warning | Verbose | WriteLine | Data | Scope | ExecutionFlow | Assert | All}] [-Debugger] [-FilePath <String>] [-Force] [-InputObject <PSObject>] [-ListenerOption {None | LogicalOperationStack | DateTime | Timestamp | ProcessId | ThreadId | Callstack}] [-PSHost] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unblock-File`, [
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the files to unblock. Unlike Path , the value of the LiteralPath parameter is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Path`, `Specifies the files to unblock. Wildcard characters are supported.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Unblocks files that were downloaded from the Internet.`, `Unblock-File -LiteralPath <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]

Unblock-File [-Path] <String[]> [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unblock-Tpm`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Undo-DtcDiagnosticTransaction`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-Package`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-ProvisioningPackage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Uninstall-TrustedProvisioningCertificate`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unprotect-CmsMessage`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-Event`, [
            new Parameter_js_3.Parameter(`Force`, `Cancels all event subscriptions, including subscriptions that were hidden by using the SupportEvent parameter of Register-ObjectEvent , Register-WmiEvent , and Register-EngineEvent .`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies a source identifier that this cmdlet cancels event subscriptions.


A SourceIdentifier or SubscriptionId parameter must be included in every command.`, `String`),
            new Parameter_js_3.Parameter(`SubscriptionId`, `Specifies a source identifier ID that this cmdlet cancels event subscriptions.


A SourceIdentifier or SubscriptionId parameter must be included in every command.`, `Int32`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Cancels an event subscription.`, `Unregister-Event [-SourceIdentifier] <String> [-Force] [-Confirm] [-WhatIf] [<CommonParameters>]

Unregister-Event [-SubscriptionId] <Int32> [-Force] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-PackageSource`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-PSSessionConfiguration`, [
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet does not prompt you for confirmation, and restarts the WinRM service without prompting. Restarting the service makes the configuration change effective.


To prevent a restart and suppress the restart prompt, use the NoServiceRestart parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the names of the session configurations to delete. Enter one session configuration name or a configuration name pattern. Wildcard characters are permitted. This parameter is required.


You can also pipe a session configurations to "Unregister-PSSessionConfiguration".`, `String`),
            new Parameter_js_3.Parameter(`NoServiceRestart`, `Indicates that this cmdlet does not restart the WinRM service, and suppresses the prompt to restart the service.


By default, when you run an "Unregister-PSSessionConfiguration" command, you are prompted to restart the WinRM service to make the change effective. Until the WinRM service is restarted, users can still use the unregistered session configuration, even though "Get-PSSessionConfiguration" does not find it.


To restart the WinRM service without prompting, specify the Force parameter. To restart the WinRM service manually, use the "Restart-Service" cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Deletes registered session configurations from the computer.`, `Unregister-PSSessionConfiguration [-Name] <String> [-Force] [-NoServiceRestart] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-ScheduledJob`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Unregister-WindowsDeveloperLicense`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-FormatData`, [
            new Parameter_js_3.Parameter(`AppendPath`, `Specifies formatting files that this cmdlet adds to the session. The files are loaded after PowerShell loads the built-in formatting files.


When formatting .NET objects, PowerShell uses the first formatting definition that it finds for each .NET type. If you use the AppendPath parameter, PowerShell searches the data from the built-in files before it encounters the formatting data that you are adding.


Use this parameter to add a file that formats a .NET object that is not referenced in the built-in formatting files.`, `String[]`),
            new Parameter_js_3.Parameter(`PrependPath`, `Specifies formatting files that this cmdlet adds to the session. The files are loaded before PowerShell loads the built-in formatting files.


When formatting .NET objects, PowerShell uses the first formatting definition that it finds for each .NET type. If you use the PrependPath parameter, PowerShell searches the data from the files that you are adding before it encounters the formatting data from the built-in files.


Use this parameter to add a file that formats a .NET object that is also referenced in the built-in formatting files.`, `String[]`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Updates the formatting data in the current session.`, `Update-FormatData [[-AppendPath] <String[]>] [-PrependPath <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-Help`, [
            new Parameter_js_3.Parameter(`Credential`, `Specifies credentials of a user who has permission to access the file system location specified by SourcePath . This parameter is valid only when the SourcePath or LiteralPath parameter is used in the command.


The Credential parameter enables you to run "Update-Help" commands with the SourcePath parameter on remote computers. By providing explicit credentials, you can run the command on a remote computer and access a file share on a third computer without encountering an access denied error or using CredSSP authentication to delegate credentials.


Type a user name, such as User01 or Domain01\\User01 , or enter a PSCredential object generated by the "Get-Credential" cmdlet. If you type a user name, you're prompted to enter the password.


Credentials are stored in a PSCredential (/dotnet/api/system.management.automation.pscredential)object and the password is stored as a SecureString (/dotnet/api/system.security.securestring).


> [!NOTE] > For more information about SecureString data protection, see > How secure is SecureString? (/dotnet/api/system.security.securestring#how-secure-is-securestring).`, `PSCredential`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet doesn't follow the once-per-day limitation, skips version checking, and downloads files that exceed the 1 GB limit.


Without this parameter, "Update-Help" runs only once in each 24-hour period. Downloads are limited to 1 GB of uncompressed content per module and help files are only installed when they're newer than the existing files on the computer.


The once-per-day limit protects the servers that host the help files and makes it practical for you to add an "Update-Help" command to your PowerShell profile without incurring the resource cost of repeated connections or downloads.


To update help for a module in multiple UI cultures without the Force parameter, include all UI cultures in the same command, such as:


"Update-Help -Module PSScheduledJobs -UICulture en-US, fr-FR, pt-BR"`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FullyQualifiedModule`, `Specifies modules with names that are specified in the form of ModuleSpecification objects. These modules are described in the Remarks section of ModuleSpecification Constructor (Hashtable) (/dotnet/api/microsoft.powershell.commands.modulespecification.-ctor?view=powershellsdk-1.1.0#Microsoft_PowerShell_Commands_ModuleSpecification__ctor_System_Collections_Hashtable_).


For example, the FullyQualifiedModule parameter accepts a module name that is specified in the format:


"@{ModuleName = "modulename"; ModuleVersion = "version_number"}"


or


"@{ModuleName = "modulename"; ModuleVersion = "version_number"; Guid = "GUID"}." ModuleName and ModuleVersion are required, but Guid is optional.


You can't specify the FullyQualifiedModule parameter in the same command as a Module parameter.`, `ModuleSpecification[]`),
            new Parameter_js_3.Parameter(`LiteralPath`, `Specifies the folder for updated help files instead of downloading them from the internet. Use this parameter or SourcePath if you've used the "Save-Help" cmdlet to download help files to a directory.


You can pipeline a directory object, such as from the "Get-Item" or "Get-ChildItem" cmdlets, to "Update-Help".


Unlike the value of SourcePath , the value of LiteralPath is used exactly as it's typed. No characters are interpreted as wildcard characters. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell PowerShell not to interpret any characters as escape sequences.`, `String[]`),
            new Parameter_js_3.Parameter(`Module`, `Updates help for the specified modules. Enter one or more module names or name patterns in a comma-separated list, or specify a file that lists one module name on each line. Wildcard characters are permitted. You can pipeline modules from the "Get-Module" cmdlet to the "Update-Help" cmdlet.


The modules that you specify must be installed on the computer, but they don't have to be imported into the current session. You can specify any module in the session or any module that is installed in a location listed in the "$env:PSModulePath" environment variable.


A value of "*" (all) attempts to update help for all modules that are installed on the computer. Modules that don't support Updatable Help are included. This value might generate errors when the command encounters modules that don't support Updatable Help. Instead, run "Update-Help" without parameters.


The Module parameter of the "Update-Help" cmdlet doesn't accept the full path of a module file or module manifest file. To update help for a module that isn't in a "$env:PSModulePath" location, import the module into the current session before you run the "Update-Help" command.`, `String[]`),
            new Parameter_js_3.Parameter(`Recurse`, `Performs a recursive search for help files in the specified directory. This parameter is valid only when the command uses the SourcePath parameter.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Scope`, `Specifies the system scope where help is updated. Updates at the AllUsers scope require administrative privileges on Windows systems. The "-Scope" parameter was introduced in PowerShell Core version 6.1. CurrentUser is the default scope for help files in PowerShell 6.1 and above. AllUsers can be specified to install or update help for all users. On Unix systems "sudo" privileges are required to update help for all users. For example: "sudo pwsh -c Update-Help"


The acceptable values are:


- CurrentUser


- AllUsers`, `UpdateHelpScope`),
            new Parameter_js_3.Parameter(`SourcePath`, `Specifies a file system folder where "Update-Help" gets updated help files, instead of downloading them from the internet. Enter the path of a folder. Don't specify a file name or file name extension. You can pipeline a folder, such as one from the "Get-Item" or "Get-ChildItem" cmdlets, to "Update-Help".


By default, "Update-Help" downloads updated help files from the internet. Use SourcePath when you've used the "Save-Help" cmdlet to download updated help files to a directory.


To specify a default value for SourcePath , go to Group Policy , Computer Configuration , and Set the default source path for Update-Help . This Group Policy setting prevents users from using "Update-Help" to download help files from the internet. For more information, see about_Group_Policy_Settings (./About/about_Group_Policy_Settings.md).`, `String[]`),
            new Parameter_js_3.Parameter(`UICulture`, `Specifies UI culture values that "Update-Help" uses to get updated help files. Enter one or more language codes, such as es-ES , a variable that contains culture objects, or a command that gets culture objects, such as a "Get-Culture" or "Get-UICulture" command. Wildcard characters aren't permitted and you can't submit a partial language code, such as de .


By default, "Update-Help" gets help files in the UI culture set for the operating system. If you specify the UICulture parameter, "Update-Help" looks for help only for the specified UI culture.


Commands that use the UICulture parameter succeed only when the module provides help files for the specified UI culture. If the command fails because the specified UI culture isn't supported, an error message is displayed.`, `CultureInfo[]`),
            new Parameter_js_3.Parameter(`UseDefaultCredentials`, `Indicates that "Update-Help" runs the command, including the internet download, by using the credentials of the current user. By default, the command runs without explicit credentials.


This parameter is effective only when the web download uses NT LAN Manager (NTLM), negotiate, or Kerberos-based authentication.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet isn't run.`, `SwitchParameter`),
        ], `Downloads and installs the newest help files on your computer.`, `Update-Help [[-Module] <String[]>] [[-UICulture] <CultureInfo[]>] [-Credential <PSCredential>] [-Force] [-FullyQualifiedModule <ModuleSpecification[]>] [-LiteralPath <String[]>] [-Recurse] [-Scope <UpdateHelpScope>] [-UseDefaultCredentials] [-Confirm] [-WhatIf] [<CommonParameters>]

Update-Help [[-Module] <String[]>] [[-SourcePath] <String[]>] [[-UICulture] <CultureInfo[]>] [-Credential <PSCredential>] [-Force] [-FullyQualifiedModule <ModuleSpecification[]>] [-Recurse] [-Scope <UpdateHelpScope>] [-UseDefaultCredentials] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-List`, [
            new Parameter_js_3.Parameter(`Add`, `Specifies the property values to be added to the collection. Enter the values in the order that they should appear in the collection.`, `Object[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be updated. You can also pipe the object to be updated to "Update-List".`, `PSObject`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the property that contains the collection that is being updated. If you omit this parameter, "Update-List" returns an object that represents the change instead of changing the object.`, `String`),
            new Parameter_js_3.Parameter(`Remove`, `Specifies the property values to be removed from the collection.`, `Object[]`),
            new Parameter_js_3.Parameter(`Replace`, `Specifies a new collection. This parameter replaces all items in the original collection with the items specified by this parameter.`, `Object[]`),
        ], `Adds items to and removes items from a property value that contains a collection of objects.`, `Update-List [[-Property] <String>] [-Add <Object[]>] [-InputObject <PSObject>] [-Remove <Object[]>] [<CommonParameters>]

Update-List [[-Property] <String>] [-InputObject <PSObject>] -Replace <Object[]> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-TypeData`, [
            new Parameter_js_3.Parameter(`AppendPath`, `Specifies the path to optional .ps1xml files. The specified files are loaded in the order that they are listed after the built-in files are loaded. You can also pipe an AppendPath value to Update-TypeData .`, `String[]`),
            new Parameter_js_3.Parameter(`DefaultDisplayProperty`, `Specifies the property of the type that is displayed by the Format-Wide cmdlet when no other properties are specified.


Type the name of a standard or extended property of the type. The value of this parameter can be the name of a type that is added in the same command.


This value is effective only when there are no wide views defined for the type in a Format.ps1xml file.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`DefaultDisplayPropertySet`, `Specifies one or more properties of the type. These properties are displayed by the Format-List cmdlet when no other properties are specified.


Type the names of standard or extended properties of the type. The value of this parameter can be the names of types that are added in the same command.


This value is effective only when there are no list views defined for the type in a Format.ps1xml file.


This parameter was introduced in Windows PowerShell 3.0.`, `String[]`),
            new Parameter_js_3.Parameter(`DefaultKeyPropertySet`, `Specifies one or more properties of the type. These properties are used by the Group-Object and Sort-Object cmdlets when no other properties are specified.


Type the names of standard or extended properties of the type. The value of this parameter can be the names of types that are added in the same command.


This parameter was introduced in Windows PowerShell 3.0.`, `String[]`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that the cmdlet uses the specified type data, even if type data has already been specified for that type.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InheritPropertySerializationSet`, `Indicates whether the set of properties that are serialized is inherited. The default value is $Null. The acceptable values for this parameter are:


- $True. The property set is inherited. - $False. The property set is not inherited. - $Null. Inheritance is not defined.


This parameter is valid only when the value of the SerializationMethod parameter is SpecificProperties. When the value of this parameter is $False, the PropertySerializationSet parameter is required.


This parameter was introduced in Windows PowerShell 3.0.`, `Boolean`),
            new Parameter_js_3.Parameter(`MemberName`, `Specifies the name of a property or method.


Use this parameter with the TypeName , MemberType , Value and SecondValue parameters to add or change a property or method of a type.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`MemberType`, `Specifies the type of the member to add or change.


Use this parameter with the TypeName , MemberType , Value and SecondValue parameters to add or change a property or method of a type. The acceptable values for this parameter are:


- AliasProperty


- CodeMethod


- CodeProperty


- Noteproperty


- ScriptMethod


- ScriptProperty




For information about these values, see PSMemberTypes Enumeration (https://msdn.microsoft.com/library/system.management.automation.psmembertypes)in the MSDN library.

This parameter was introduced in Windows PowerShell 3.0.`, `PSMemberTypes`),
            new Parameter_js_3.Parameter(`PrependPath`, `Specifies the path to the optional .ps1xml files. The specified files are loaded in the order that they are listed before the built-in files are loaded.`, `String[]`),
            new Parameter_js_3.Parameter(`PropertySerializationSet`, `Specifies the names of properties that are serialized. Use this parameter when the value of the SerializationMethod parameter is SpecificProperties .`, `String[]`),
            new Parameter_js_3.Parameter(`SecondValue`, `Specifies additional values for AliasProperty , ScriptProperty , CodeProperty , or CodeMethod members.


Use this parameter with the TypeName , MemberType , Value , and SecondValue parameters to add or change a property or method of a type.


When the value of the MemberType parameter is AliasProperty, the value of the SecondValue parameter must be a data type. PowerShell converts (that is, casts) the value of the alias property to the specified type. For example, if you add an alias property that provides an alternate name for a string property, you can also specify a SecondValue of System.Int32 to convert the aliased string value to an integer.


When the value of the MemberType parameter is ScriptProperty, you can use the SecondValue parameter to specify an additional script block. The script block in the value of the Value parameter gets the value of a variable. The script block in the value of the SecondValue parameter set the value of the variable.


This parameter was introduced in Windows PowerShell 3.0.`, `Object`),
            new Parameter_js_3.Parameter(`SerializationDepth`, `Specifies how many levels of type objects are serialized as strings. The default value, 1, serializes the object and its properties. A value of 0 serializes the object, but not its properties. A value of 2 serializes the object, its properties, and any objects in property values.


This parameter was introduced in Windows PowerShell 3.0.`, `Int32`),
            new Parameter_js_3.Parameter(`SerializationMethod`, `Specifies a serialization method for the type. A serialization method determines which properties of the type are serialized and the technique that is used to serialize them. The acceptable values for this parameter are:


- AllPublicProperties. Serialize all public properties of the type. You can use the SerializationDepth parameter to determine whether child properties are serialized. - String. Serialize the type as a string. You can use the StringSerializationSource to specify a property of the type to use as the serialization result. Otherwise, the type is serialized by using the ToString method of the object. - SpecificProperties. Serialize only the specified properties of this type. Use the PropertySerializationSet parameter to specify the properties of the type that are serialized. You can also use the InheritPropertySerializationSet parameter to determine whether the property set is inherited and the SerializationDepth parameter to determine whether child properties are serialized.


In PowerShell, serialization methods are stored in PSStandardMembers internal objects.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`StringSerializationSource`, `Specifies the name of a property of the type. The value of specified property is used as the serialization result. This parameter is valid only when the value of the SerializationMethod parameter is String.`, `String`),
            new Parameter_js_3.Parameter(`TargetTypeForDeserialization`, `Specifies the type to which object of this type are converted when they are deserialized.


This parameter was introduced in Windows PowerShell 3.0.`, `Type`),
            new Parameter_js_3.Parameter(`TypeAdapter`, `Specifies the type of a type adapter, such as Microsoft.PowerShell.Cim.CimInstanceAdapter . A type adapter enables PowerShell to get the members of a type.


This parameter was introduced in Windows PowerShell 3.0.`, `Type`),
            new Parameter_js_3.Parameter(`TypeConverter`, `Specifies a type converter to convert values between different types. If a type converter is defined for a type, an instance of the type converter is used for the conversion.


Enter a System.Type value that is derived from the System.ComponentModel.TypeConverter or System.Management.Automation.PSTypeConverter classes.


This parameter was introduced in Windows PowerShell 3.0.`, `Type`),
            new Parameter_js_3.Parameter(`TypeData`, `Specifies an array of type data that this cmdlet adds to the session. Enter a variable that contains a TypeData object or a command that gets a TypeData object, such as a Get-TypeData command. You can also pipe a TypeData object to Update-TypeData .


This parameter was introduced in Windows PowerShell 3.0.`, `TypeData[]`),
            new Parameter_js_3.Parameter(`TypeName`, `Specifies the name of the type to extend.


For types in the System namespace, enter the short name. Otherwise, the full type name is required. Wildcards are not supported.


You can pipe type names to Update-TypeData . When you pipe an object to Update-TypeData , Update-TypeData gets the type name of the object and type data to the object type.


Use this parameter with the MemberName , MemberType , Value and SecondValue parameters to add or change a property or method of a type.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies the value of the property or method.


If you add an AliasProperty, CodeProperty, ScriptProperty, or CodeMethod member, you can use the SecondValue parameter to add additional information.


Use this parameter with the MemberName , MemberType , Value and SecondValue parameters to add or change a property or method of a type.


This parameter was introduced in Windows PowerShell 3.0.`, `Object`),
            new Parameter_js_3.Parameter(`Confirm`, `Prompts you for confirmation before running the cmdlet.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`WhatIf`, `Shows what would happen if the cmdlet runs. The cmdlet is not run.`, `SwitchParameter`),
        ], `Updates the extended type data in the session.`, `Update-TypeData [[-AppendPath] <String[]>] [-PrependPath <String[]>] [-Confirm] [-WhatIf] [<CommonParameters>]

Update-TypeData [-DefaultDisplayProperty <String>] [-DefaultDisplayPropertySet <String[]>] [-DefaultKeyPropertySet <String[]>] [-Force] [-InheritPropertySerializationSet <Boolean>] [-MemberName <String>] [-MemberType {NoteProperty | AliasProperty | ScriptProperty | CodeProperty | ScriptMethod | CodeMethod}] [-PropertySerializationSet <String[]>] [-SecondValue <Object>] [-SerializationDepth <Int32>] [-SerializationMethod <String>] [-StringSerializationSource <String>] [-TargetTypeForDeserialization <Type>] [-TypeAdapter <Type>] [-TypeConverter <Type>] -TypeName <String> [-Value <Object>] [-Confirm] [-WhatIf] [<CommonParameters>]

Update-TypeData [-TypeData] <TypeData[]> [-Force] [-Confirm] [-WhatIf] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Update-WIMBootEntry`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Use-WindowsUnattend`, [], `See help file for details.`, ``, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Wait-Debugger`, [], `Stops a script in the debugger before running the next statement in the script.`, `Wait-Debugger [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Wait-Event`, [
            new Parameter_js_3.Parameter(`SourceIdentifier`, `Specifies the source identifier that this cmdlet waits for events. By default, Wait-Event waits for any event.`, `String`),
            new Parameter_js_3.Parameter(`Timeout`, `Specifies the maximum time, in seconds, that Wait-Event waits for the event to occur. The default, -1, waits indefinitely. The timing starts when you submit the Wait-Event command.


If the specified time is exceeded, the wait ends and the command prompt returns, even if the event has not been raised. No error message is displayed.`, `Int32`),
        ], `Waits until a particular event is raised before continuing to run.`, `Wait-Event [[-SourceIdentifier] <String>] [-Timeout <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Wait-Job`, [
            new Parameter_js_3.Parameter(`Any`, `Indicates that this cmdlet displays the command prompt, and returns the job object, when any job finishes. By default, Wait-Job waits until all of the specified jobs are complete before it displays the prompt.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Filter`, `Specifies a hash table of conditions. This cmdlet waits for jobs that satisfy all of the conditions in the hash table. Enter a hash table where the keys are job properties and the values are job property values.


This parameter works only on custom job types, such as workflow jobs and scheduled jobs. It does not work on standard background jobs, such as those created by using the Start-Job cmdlet. For information about support for this parameter, see the help topic for the job type.


This parameter was introduced in Windows PowerShell 3.0.`, `Hashtable`),
            new Parameter_js_3.Parameter(`Force`, `Indicates that this cmdlet continues to wait for jobs in the Suspended or Disconnected state. By default, Wait-Job returns, or ends  the wait, when jobs are in one of the following states:


- Completed


- Failed


- Stopped


- Suspended


- Disconnected




This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Id`, `Specifies an array of IDs of jobs for which this cmdlet waits.


The ID is an integer that uniquely identifies the job in the current session. It is easier to remember and type than the instance ID, but it is unique only in the current session. You can type one or more IDs, separated by commas. To find the ID of a job, type "Get-Job".`, `Int32[]`),
            new Parameter_js_3.Parameter(`InstanceId`, `Specifies an array of instance IDs of jobs for which this cmdlet waits. The default is all jobs.


An instance ID is a GUID that uniquely identifies the job on the computer. To find the instance ID of a job, use Get-Job .`, `Guid[]`),
            new Parameter_js_3.Parameter(`Job`, `Specifies the jobs for which this cmdlet waits. Enter a variable that contains the job objects or a command that gets the job objects. You can also use a pipeline operator to send job objects to the Wait-Job cmdlet. By default, Wait-Job waits for all jobs created in the current session.`, `Job[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies friendly names of jobs for which this cmdlet waits.`, `String[]`),
            new Parameter_js_3.Parameter(`State`, `Specifies a job state. This cmdlet waits only for jobs in the specified state. The acceptable values for this parameter are:


- NotStarted


- Running


- Completed


- Failed


- Stopped


- Blocked


- Suspended


- Disconnected


- Suspending


- Stopping




For more information about job states, see JobState Enumeration (https://msdn.microsoft.com/library/system.management.automation.jobstate)in the MSDN library.`, `JobState`),
            new Parameter_js_3.Parameter(`Timeout`, `Specifies the maximum wait time for each background job, in seconds. The default value, -1, indicates that the cmdlet waits until the job finishes. The timing starts when you submit the Wait-Job command, not the Start-Job command.


If this time is exceeded, the wait ends and the command prompt returns, even if the job is still running. The command does not display any error message.`, `Int32`),
        ], `Suppresses the command prompt until one or all of the PowerShell background jobs running in the session are completed.`, `Wait-Job [-Filter] <Hashtable> [-Any] [-Force] [-Timeout <Int32>] [<CommonParameters>]

Wait-Job [-Id] <Int32[]> [-Any] [-Force] [-Timeout <Int32>] [<CommonParameters>]

Wait-Job [-InstanceId] <Guid[]> [-Any] [-Force] [-Timeout <Int32>] [<CommonParameters>]

Wait-Job [-Job] <Job[]> [-Any] [-Force] [-Timeout <Int32>] [<CommonParameters>]

Wait-Job [-Name] <String[]> [-Any] [-Force] [-Timeout <Int32>] [<CommonParameters>]

Wait-Job [-State] {NotStarted | Running | Completed | Failed | Stopped | Blocked | Suspended | Disconnected | Suspending | Stopping | AtBreakpoint} [-Any] [-Force] [-Timeout <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Wait-Process`, [
            new Parameter_js_3.Parameter(`Id`, `Specifies the process IDs of the processes. To specify multiple IDs, use commas to separate the IDs. To find the PID of a process, type "Get-Process".`, `Int32[]`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the processes by submitting process objects. Enter a variable that contains the process objects, or type a command or expression that gets the process objects, such as the Get-Process cmdlet.`, `Process[]`),
            new Parameter_js_3.Parameter(`Name`, `Specifies the process names of the processes. To specify multiple names, use commas to separate the names. Wildcard characters are not supported.`, `String[]`),
            new Parameter_js_3.Parameter(`Timeout`, `Specifies the maximum time, in seconds, that this cmdlet waits for the specified processes to stop. When this interval expires, the command displays a non-terminating error that lists the processes that are still running, and ends the wait. By default, there is no time-out.`, `Int32`),
        ], `Waits for the processes to be stopped before accepting more input.`, `Wait-Process [-Id] <Int32[]> [[-Timeout] <Int32>] [<CommonParameters>]

Wait-Process [[-Timeout] <Int32>] -InputObject <Process[]> [<CommonParameters>]

Wait-Process [-Name] <String[]> [[-Timeout] <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Where-Object`, [
            new Parameter_js_3.Parameter(`CContains`, `Indicates that this cmdlet gets objects from a collection if the property value of the object is an exact match for the specified value. This operation is case-sensitive.


For example: "Get-Process | where ProcessName -CContains "svchost"" CContains refers to a collection of values and is true if the collection contains an item that is an exact match for the specified value. If the input is a single object, PowerShell converts it to a collection of one object.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CEQ`, `Indicates that this cmdlet gets objects if the property value is the same as the specified value. This operation is case-sensitive.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CGE`, `Indicates that this cmdlet gets objects if the property value is greater than or equal to the specified value. This operation is case-sensitive.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CGT`, `Indicates that this cmdlet gets objects if the property value is greater than the specified value. This operation is case-sensitive.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CIn`, `Indicates that this cmdlet gets objects if the property value includes the specified value. This operation is case-sensitive.


For example: "Get-Process | where -Value "svchost" -CIn ProcessName" CIn resembles CContains , except that the property and value positions are reversed. For example, the following statements are both true.


"abc", "def" -CContains "abc"


"abc" -CIn "abc", "def"


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CLE`, `Indicates that this cmdlet gets objects if the property value is less-than or equal to the specified value. This operation is case-sensitive.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CLike`, `Indicates that this cmdlet gets objects if the property value matches a value that includes wildcard characters. This operation is case-sensitive.


For example: "Get-Process | where ProcessName -CLike "*host""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CLT`, `Indicates that this cmdlet gets objects if the property value is less-than the specified value. This operation is case-sensitive.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CMatch`, `Indicates that this cmdlet gets objects if the property value matches the specified regular expression. This operation is case-sensitive. When the input is scalar, the matched value is saved in "$Matches" automatic variable.


For example: "Get-Process | where ProcessName -CMatch "Shell""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CNE`, `Indicates that this cmdlet gets objects if the property value is different than the specified value. This operation is case-sensitive.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CNotContains`, `Indicates that this cmdlet gets objects if the property value of the object is not an exact match for the specified value. This operation is case-sensitive.


For example: "Get-Process | where ProcessName -CNotContains "svchost""


"NotContains" and "CNotContains refer to a collection of values and are true when the collection does not contains any items that are an exact match for the specified value. If the input is a single object, PowerShell converts it to a collection of one object.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CNotIn`, `Indicates that this cmdlet gets objects if the property value is not an exact match for the specified value. This operation is case-sensitive.


For example: "Get-Process | where -Value "svchost" -CNotIn -Property ProcessName" NotIn and CNotIn operators resemble NotContains and CNotContains , except that the property and value positions are reversed. For example, the following statements are true.


"abc", "def" -CNotContains "Abc"


"abc" -CNotIn "Abc", "def"`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CNotLike`, `Indicates that this cmdlet gets objects if the property value does not match a value that includes wildcard characters. This operation is case-sensitive.


For example: "Get-Process | where ProcessName -CNotLike "*host""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CNotMatch`, `Indicates that this cmdlet gets objects if the property value does not match the specified regular expression. This operation is case-sensitive. When the input is scalar, the matched value is saved in "$Matches" automatic variable.


For example: "Get-Process | where ProcessName -CNotMatch "Shell""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Contains`, `Indicates that this cmdlet gets objects if any item in the property value of the object is an exact match for the specified value.


For example: "Get-Process | where ProcessName -Contains "Svchost""


If the property value contains a single object, PowerShell converts it to a collection of one object.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`EQ`, `Indicates that this cmdlet gets objects if the property value is the same as the specified value.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`FilterScript`, `Specifies the script block that is used to filter the objects. Enclose the script block in braces ( {} ).


The parameter name, FilterScript , is optional.`, `ScriptBlock`),
            new Parameter_js_3.Parameter(`GE`, `Indicates that this cmdlet gets objects if the property value is greater than or equal to the specified value.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`GT`, `Indicates that this cmdlet gets objects if the property value is greater than the specified value.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`In`, `Indicates that this cmdlet gets objects if the property value matches any of the specified values.


For example: "Get-Process | where -Property ProcessName -in -Value "Svchost", "TaskHost", "WsmProvHost""


If the value of the Value parameter is a single object, PowerShell converts it to a collection of one object.


If the property value of an object is an array, PowerShell uses reference equality to determine a match. "Where-Object" returns the object only if the value of the Property parameter and any value of Value are the same instance of an object.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to be filtered. You can also pipe the objects to "Where-Object".


When you use the InputObject parameter with "Where-Object", instead of piping command results to "Where-Object", the InputObject value is treated as a single object. This is true even if the value is a collection that is the result of a command, such as "-InputObject (Get-Process)". Because InputObject cannot return individual properties from an array or collection of objects, we recommend that, if you use "Where-Object" to filter a collection of objects for those objects that have specific values in defined properties, you use "Where-Object" in the pipeline, as shown in the examples in this topic.`, `PSObject`),
            new Parameter_js_3.Parameter(`Is`, `Indicates that this cmdlet gets objects if the property value is an instance of the specified .NET Framework type. Enclose the type name in square brackets.


For example, "Get-Process | where StartTime -Is [DateTime]"


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`IsNot`, `Indicates that this cmdlet gets objects if the property value is not an instance of the specified .NET Framework type.


For example, "Get-Process | where StartTime -IsNot [DateTime]"


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LE`, `Indicates that this cmdlet gets objects if the property value is less than or equal to the specified value.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Like`, `Indicates that this cmdlet gets objects if the property value matches a value that includes wildcard characters.


For example: "Get-Process | where ProcessName -Like "*host""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`LT`, `Indicates that this cmdlet gets objects if the property value is less than the specified value.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Match`, `Indicates that this cmdlet gets objects if the property value matches the specified regular expression. When the input is scalar, the matched value is saved in "$Matches" automatic variable.


For example: "Get-Process | where ProcessName -Match "shell""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NE`, `Indicates that this cmdlet gets objects if the property value is different than the specified value.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Not`, `Indicates that this cmdlet gets objects if the property does not exist or has a value of null or false.


For example: "Get-Service | where -Not "DependentServices""


This parameter was introduced in Windows PowerShell 6.1.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NotContains`, `Indicates that this cmdlet gets objects if none of the items in the property value is an exact match for the specified value.


For example: "Get-Process | where ProcessName -NotContains "Svchost"" NotContains refers to a collection of values and is true if the collection does not contain any items that are an exact match for the specified value. If the input is a single object, PowerShell converts it to a collection of one object.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NotIn`, `Indicates that this cmdlet gets objects if the property value is not an exact match for any of the specified values.


For example: "Get-Process | where -Value "svchost" -NotIn -Property ProcessName"


If the value of Value is a single object, PowerShell converts it to a collection of one object.


If the property value of an object is an array, PowerShell uses reference equality to determine a match. "Where-Object" returns the object only if the value of Property and any value of Value are not the same instance of an object.


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NotLike`, `Indicates that this cmdlet gets objects if the property value does not match a value that includes wildcard characters.


For example: "Get-Process | where ProcessName -NotLike "*host""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`NotMatch`, `Indicates that this cmdlet gets objects when the property value does not match the specified regular expression. When the input is scalar, the matched value is saved in "$Matches" automatic variable.


For example: "Get-Process | where ProcessName -NotMatch "PowerShell""


This parameter was introduced in Windows PowerShell 3.0.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Property`, `Specifies the name of an object property.


The parameter name, Property , is optional.


This parameter was introduced in Windows PowerShell 3.0.`, `String`),
            new Parameter_js_3.Parameter(`Value`, `Specifies a property value. The parameter name, Value , is optional. This parameter accepts wildcard characters when used with the following comparison parameters:


- CLike - CNotLike - Like - NotLike This parameter was introduced in Windows PowerShell 3.0.`, `Object`),
        ], `Selects objects from a collection based on their property values.`, `Where-Object [-Property] <String> [[-Value] <Object>] -CContains [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CEQ [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CGE [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CGT [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CIn [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CLE [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CLike [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CLT [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CMatch [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CNE [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CNotContains [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CNotIn [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CNotLike [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -CNotMatch [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -Contains [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-EQ] [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-FilterScript] <ScriptBlock> [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -GE [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -GT [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] -In [-InputObject <PSObject>] [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -Is [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -IsNot [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -LE [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -Like [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -LT [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -Match [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -NE [<CommonParameters>]

Where-Object [-Property] <String> [-InputObject <PSObject>] -Not [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -NotContains [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -NotIn [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -NotLike [<CommonParameters>]

Where-Object [-Property] <String> [[-Value] <Object>] [-InputObject <PSObject>] -NotMatch [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Debug`, [
            new Parameter_js_3.Parameter(`Message`, `Specifies the debug message to send to the console.`, `String`),
        ], `Writes a debug message to the console.`, `Write-Debug [-Message] <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Error`, [
            new Parameter_js_3.Parameter(`Category`, `Specifies the category of the error. The default value is NotSpecified . The acceptable values for this parameter are:


- NotSpecified


- OpenError


- CloseError


- DeviceError


- DeadlockDetected


- InvalidArgument


- InvalidData


- InvalidOperation


- InvalidResult


- InvalidType


- MetadataError


- NotImplemented


- NotInstalled


- ObjectNotFound


- OperationStopped


- OperationTimeout


- SyntaxError


- ParserError


- PermissionDenied


- ResourceBusy


- ResourceExists


- ResourceUnavailable


- ReadError


- WriteError


- FromStdErr


- SecurityError


- ProtocolError


- ConnectionError


- AuthenticationError


- LimitsExceeded


- QuotaExceeded


- NotEnabled




For information about the error categories, see ErrorCategory Enumeration (https://go.microsoft.com/fwlink/?LinkId=143600).`, `ErrorCategory`),
            new Parameter_js_3.Parameter(`CategoryActivity`, `Specifies the action that caused the error.`, `String`),
            new Parameter_js_3.Parameter(`CategoryReason`, `Specifies how or why the activity caused the error.`, `String`),
            new Parameter_js_3.Parameter(`CategoryTargetName`, `Specifies the name of the object that was being processed when the error occurred.`, `String`),
            new Parameter_js_3.Parameter(`CategoryTargetType`, `Specifies the type of the object that was being processed when the error occurred.`, `String`),
            new Parameter_js_3.Parameter(`ErrorId`, `Specifies an ID string to identify the error. The string should be unique to the error.`, `String`),
            new Parameter_js_3.Parameter(`ErrorRecord`, `Specifies an error record object that represents the error. Use the properties of the object to describe the error.


To create an error record object, use the "New-Object" cmdlet or get an error record object from the array in the "$Error" automatic variable.`, `ErrorRecord`),
            new Parameter_js_3.Parameter(`Exception`, `Specifies an exception object that represents the error. Use the properties of the object to describe the error.


To create an exception object, use a hash table or use the "New-Object" cmdlet.`, `Exception`),
            new Parameter_js_3.Parameter(`Message`, `Specifies the message text of the error. If the text includes spaces or special characters, enclose it in quotation marks. You can also pipe a message string to "Write-Error".`, `String`),
            new Parameter_js_3.Parameter(`RecommendedAction`, `Specifies the action that the user should take to resolve or prevent the error.`, `String`),
            new Parameter_js_3.Parameter(`TargetObject`, `Specifies the object that was being processed when the error occurred. Enter the object, a variable that contains the object, or a command that gets the object.`, `Object`),
        ], `Writes an object to the error stream.`, `Write-Error [[-Message] <String>] [-Category {NotSpecified | OpenError | CloseError | DeviceError | DeadlockDetected | InvalidArgument | InvalidData | InvalidOperation | InvalidResult | InvalidType | MetadataError | NotImplemented | NotInstalled | ObjectNotFound | OperationStopped | OperationTimeout | SyntaxError | ParserError | PermissionDenied | ResourceBusy | ResourceExists | ResourceUnavailable | ReadError | WriteError | FromStdErr | SecurityError | ProtocolError | ConnectionError | AuthenticationError | LimitsExceeded | QuotaExceeded | NotEnabled}] [-CategoryActivity <String>] [-CategoryReason <String>] [-CategoryTargetName <String>] [-CategoryTargetType <String>] [-ErrorId <String>] [-RecommendedAction <String>] [-TargetObject <Object>] [<CommonParameters>]

Write-Error [[-Message] <String>] [-Category {NotSpecified | OpenError | CloseError | DeviceError | DeadlockDetected | InvalidArgument | InvalidData | InvalidOperation | InvalidResult | InvalidType | MetadataError | NotImplemented | NotInstalled | ObjectNotFound | OperationStopped | OperationTimeout | SyntaxError | ParserError | PermissionDenied | ResourceBusy | ResourceExists | ResourceUnavailable | ReadError | WriteError | FromStdErr | SecurityError | ProtocolError | ConnectionError | AuthenticationError | LimitsExceeded | QuotaExceeded | NotEnabled}] [-CategoryActivity <String>] [-CategoryReason <String>] [-CategoryTargetName <String>] [-CategoryTargetType <String>] [-ErrorId <String>] -Exception <Exception> [-RecommendedAction <String>] [-TargetObject <Object>] [<CommonParameters>]

Write-Error [-CategoryActivity <String>] [-CategoryReason <String>] [-CategoryTargetName <String>] [-CategoryTargetType <String>] -ErrorRecord <ErrorRecord> [-RecommendedAction <String>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Host`, [
            new Parameter_js_3.Parameter(`BackgroundColor`, `Specifies the background color. There is no default. The acceptable values for this parameter are:


- Black


- DarkBlue


- DarkGreen


- DarkCyan


- DarkRed


- DarkMagenta


- DarkYellow


- Gray


- DarkGray


- Blue


- Green


- Cyan


- Red


- Magenta


- Yellow


- White`, `ConsoleColor`),
            new Parameter_js_3.Parameter(`ForegroundColor`, `Specifies the text color. There is no default. The acceptable values for this parameter are:


- Black


- DarkBlue


- DarkGreen


- DarkCyan


- DarkRed


- DarkMagenta


- DarkYellow


- Gray


- DarkGray


- Blue


- Green


- Cyan


- Red


- Magenta


- Yellow


- White`, `ConsoleColor`),
            new Parameter_js_3.Parameter(`NoNewline`, `The string representations of the input objects are concatenated to form the output. No spaces or newlines are inserted between the output strings. No newline is added after the last output string.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`Object`, `Objects to display in the host.`, `Object`),
            new Parameter_js_3.Parameter(`Separator`, `Specifies a separator string to insert between objects displayed by the host.`, `Object`),
        ], `Writes customized output to a host.`, `Write-Host [[-Object] <Object>] [-BackgroundColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-ForegroundColor {Black | DarkBlue | DarkGreen | DarkCyan | DarkRed | DarkMagenta | DarkYellow | Gray | DarkGray | Blue | Green | Cyan | Red | Magenta | Yellow | White}] [-NoNewline] [-Separator <Object>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Information`, [
            new Parameter_js_3.Parameter(`MessageData`, `Specifies an informational message that you want to display to users as they run a script or command. For best results, enclose the informational message in quotation marks. An example is "Test complete."`, `Object`),
            new Parameter_js_3.Parameter(`Tags`, `Specifies a simple string that you can use to sort and filter messages that you have added to the information stream with "Write-Information". This parameter works similarly to the Tags parameter in "New-ModuleManifest".`, `String[]`),
        ], `Specifies how PowerShell handles information stream data for a command.`, `Write-Information [-MessageData] <Object> [[-Tags] <String[]>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Output`, [
            new Parameter_js_3.Parameter(`InputObject`, `Specifies the objects to send down the pipeline. Enter a variable that contains the objects, or type a command or expression that gets the objects.`, `PSObject`),
            new Parameter_js_3.Parameter(`NoEnumerate`, `By default, the "Write-Output" cmdlet always enumerates its output. The NoEnumerate parameter suppresses the default behavior, and prevents "Write-Output" from enumerating output. The NoEnumerate parameter has no effect on collections that were created by wrapping commands in parentheses, because the parentheses force enumeration.


> [!NOTE] > This switch only works correctly with PowerShell Core 6.2 and newer. On older versions of > PowerShell Core, the collection is still enumerated even with use of this switch.`, `SwitchParameter`),
        ], `Sends the specified objects to the next command in the pipeline. If the command is the last command in the pipeline, the objects are displayed in the console.`, `Write-Output [-InputObject] <PSObject> [-NoEnumerate] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Progress`, [
            new Parameter_js_3.Parameter(`Activity`, `Specifies the first line of text in the heading above the status bar. This text describes the activity whose progress is being reported.`, `String`),
            new Parameter_js_3.Parameter(`Completed`, `Indicates whether the progress bar is visible. If this parameter is omitted, "Write-Progress" displays progress information.`, `SwitchParameter`),
            new Parameter_js_3.Parameter(`CurrentOperation`, `Specifies the line of text below the progress bar. This text describes the operation that is currently taking place.`, `String`),
            new Parameter_js_3.Parameter(`Id`, `Specifies an ID that distinguishes each progress bar from the others. Use this parameter when you are creating more than one progress bar in a single command. If the progress bars do not have different IDs, they are superimposed instead of being displayed in a series.`, `Int32`),
            new Parameter_js_3.Parameter(`ParentId`, `Specifies the parent activity of the current activity. Use the value -1 if the current activity has no parent activity.`, `Int32`),
            new Parameter_js_3.Parameter(`PercentComplete`, `Specifies the percentage of the activity that is completed. Use the value -1 if the percentage complete is unknown or not applicable.`, `Int32`),
            new Parameter_js_3.Parameter(`SecondsRemaining`, `Specifies the projected number of seconds remaining until the activity is completed. Use the value -1 if the number of seconds remaining is unknown or not applicable.`, `Int32`),
            new Parameter_js_3.Parameter(`SourceId`, `Specifies the source of the record. You can use this in place of Id but cannot be used with other parameters like ParentId .`, `Int32`),
            new Parameter_js_3.Parameter(`Status`, `Specifies the second line of text in the heading above the status bar. This text describes current state of the activity.`, `String`),
        ], `Displays a progress bar within a PowerShell command window.`, `Write-Progress [-Activity] <String> [[-Status] <String>] [[-Id] <Int32>] [-Completed] [-CurrentOperation <String>] [-ParentId <Int32>] [-PercentComplete <Int32>] [-SecondsRemaining <Int32>] [-SourceId <Int32>] [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Verbose`, [
            new Parameter_js_3.Parameter(`Message`, `Specifies the message to display. This parameter is required. You can also pipe a message string to Write-Verbose .`, `String`),
        ], `Writes text to the verbose message stream.`, `Write-Verbose [-Message] <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        }),
        new ConsoleCommand_js_3.ConsoleCommand(`Write-Warning`, [
            new Parameter_js_3.Parameter(`Message`, `Specifies the warning message.`, `String`),
        ], `Writes a warning message.`, `Write-Warning [-Message] <String> [<CommonParameters>]`, "", (parameters, paramDictionary) => {
        })
    ];
    exports.PSCommands = commands;
});
define("Main/Commands/BashCommands", ["require", "exports", "Shared/Models/ConsoleCommand"], function (require, exports, ConsoleCommand_js_4) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BashCommands = void 0;
    var commands = [
        new ConsoleCommand_js_4.ConsoleCommand('accept', [], 'Accept or Reject jobs to a destination, such as a printer.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('access', [], 'Check a user\'s RWX permission for a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('aclocal', [], 'GNU autoconf too', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('aconnect', [], 'ALSA sequencer connection manager.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('acpi', [], 'Show information about the Advanced Configuration and Power Interface.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('acpi_available', [], 'Check if ACPI functionality exists on the system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('acpid', [], 'Informs user-space programs about ACPI events.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('addr2line', [], 'Used to convert addresses into file names and line numbers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('addresses', [], 'Formats for internet mail addresses.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('agetty', [], 'An alternative Linux Getty', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('alias', [], 'Create an alias for Linux commands', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('alsactl', [], 'Access advanced controls for ALSA soundcard driver.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('amidi', [], 'Perform read/write operation for ALSA RawMIDI ports.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('amixer', [], 'Access CLI-based mixer for ALSA soundcard driver.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('anacron', [], 'Used to run commands periodically.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('aplay', [], 'Sound recorder and player for CLI.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('aplaymidi', [], 'CLI utility used to play MIDI files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('apm', [], 'Show Advanced Power Management (APM) hardware info on older systems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('apmd', [], 'Used to handle events reported by APM BIOS drivers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('apropos', [], 'Shows the list of all man pages containing a specific keyword', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('apt', [], 'Advanced Package Tool, a package management system for Debian and derivatives.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('apt-get', [], 'Command-line utility to install/remove/update packages based on APT system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('aptitude', [], 'Another utility to add/remove/upgrade packages based on the APT system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ar', [], 'A utility to create/modify/extract from archives.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('arch', [], 'Display print machine hardware name.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('arecord', [], 'Just like aplay, it\'s a sound recorder and player for ALSA soundcard driver.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('arecordmidi', [], 'Record standard MIDI files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('arp', [], 'Used to make changes to the system\'s ARP cache', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('as', [], 'A portable GNU assembler.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('aspell', [], 'An interactive spell checker utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('at', [], 'Used to schedule command execution at specified date &amp; time, reading commands from an input file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('atd', [], 'Used to execute jobs queued by the at command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('atq', [], 'List a user\'s pending jobs for the at command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('atrm', [], 'Delete jobs queued by the at command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('audiosend', [], 'Used to send an audio recording as an email.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('aumix', [], 'An audio mixer utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('autoconf', [], 'Generate configuration scripts from a TEMPLATE-FILE and send the output to standard output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('autoheader', [], 'Create a template header for configure.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('automake', [], 'Creates GNU standards-compliant Makefiles from template files', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('autoreconf', [], 'Update generated configuration files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('autoscan', [], 'Generate a preliminary <span class="skimlinks-unlinked">configure.in</span>', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('autoupdate', [], 'Update a <span class="skimlinks-unlinked">configure.in</span> file to newer autoconf.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('awk', [], 'Used to find and replace text in a file(s).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('badblocks', [], 'Search a disk partition for bad sectors.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('banner', [], 'Used to print characters as a poster.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('basename', [], 'Used to display filenames with directoy or suffix.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bash', [], 'GNU Bourne-Again Shell.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('batch', [], 'Used to run commands entered on a standard input.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bc', [], 'Access the GNU bc calculator utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bg', [], 'Send processes to the background.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('biff', [], 'Notify about incoming mail and sender\'s name on a system running comsat server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bind', [], 'Used to attach a name to a socket.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bison', [], 'A GNU parser generator, compatible with yacc.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('break', [], 'Used to exit from a loop (eg: for, while, select).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('builtin', [], 'Used to run shell builtin commands, make custom functions forcommands extending their functionality.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bzcmp', [], 'Used to call the cmp program forbzip2 compressed files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bzdiff', [], 'Used to call the diff program for bzip2 compressed files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bzgrep', [], 'Used to call grep for bzip2 compressed files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bzip2', [], 'A block-sorting file compressor used to shrink given files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bzless', [], 'Used to apply \'less\' (show info one page at a time) to bzip2 compressed files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('bzmore', [], 'Used to apply \'more\' (an inferior version of less) to bzip2 compressed files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cal', [], 'Show calendar.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cardctl', [], 'Used to control PCMCIA sockets and select configuration schemes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cardmgr', [], 'Keeps an eye on the added/removes sockets for PCMCIA devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('case', [], 'Execute a command conditionally by matching a pattern.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cat', [], 'Used to concatenate files and print them on the screen.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cc', [], 'GNU C and C++ compiler.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cd', [], 'Used to change directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cdda2wav', [], 'Used to rip a CD-ROM and make WAV file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cdparanoia', [], 'Record audio from CD more reliably using data-verification algorithms.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cdrdao', [], 'Used to write all the content specified to a file to a CD all at once.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cdrecord', [], 'Used to record data or audio compact discs.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cfdisk', [], 'Show or change the disk partition table.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chage', [], 'Used to change user password information.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chattr', [], 'Used to change file attributes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chdir', [], 'Used to change active working directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chfn', [], 'Used to change real user name and information.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chgrp', [], 'Used to change group ownership for file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chkconfig', [], 'Manage execution of runlevel services.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chmod', [], 'Change access permission for a file(s).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chown', [], 'Change the owner or group for a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chpasswd', [], 'Update password in a batch.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chroot', [], 'Run a command with root privileges.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chrt', [], 'Alter process attributed in real-time.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chsh', [], 'Switch login shell.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('chvt', [], 'Change foreground virtual terminal.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cksum', [], 'Perform a CRC checksum for files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('clear', [], 'Used to clear the terminal window.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cmp', [], 'Compare two files (byte by byte).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('col', [], 'Filter reverse (and half-reverse) line feeds from the input.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('colcrt', [], 'Filter nroff output for CRT previewing.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('colrm', [], 'Remove columns from the lines of a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('column', [], 'A utility that formats its input into columns.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('comm', [], 'Used to compare two sorted files line by line.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('command', [], 'Used to execute a command with arguments ignoring shell function named command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('compress', [], 'Used to compress one or more file(s) and replacing the originals ones.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('continue', [], 'Resume the next iteration of a loop.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cp', [], 'Copy contents of one file to another.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cpio', [], 'Copy files from and to archives.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cpp', [], 'GNU C language processor.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cron', [], 'A daemon to execute scheduled commands.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('crond', [], 'Same work as cron.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('crontab', [], 'Manage crontab files (containing schedules commands) for users.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('csplit', [], 'Split a file into sections on the basis of context lines.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ctags', [], 'Make a list of functions and macro names defined in a programming source file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cupsd', [], 'A scheduler for CUPS.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('curl', [], 'Used to transfer data from or to a server using supported protocols.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cut', [], 'Used to remove sections from each line of a file(s).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('cvs', [], 'Concurrent Versions System. Used to track file versions, allow storage/retrieval of previous versions, and enables multiple users to work on the same file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('date', [], 'Show system date and time.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dc', [], 'Desk calculator utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dd', [], 'Used to convert and copy a file, create disk clone, write disk headers, etc.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ddrescue', [], 'Used to recover data from a crashed partition.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('deallocvt', [], 'Deallocates kernel memory for unused virtual consoles.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('debugfs', [], 'File system debugger for ext2/ext3/ext4', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('declare', [], 'Used to declare variables and assign attributes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('depmod', [], 'Generate <span class="skimlinks-unlinked">modules.dep</span> and map files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('devdump', [], 'Interactively displays the contents of device or file system ISO.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('df', [], 'Show disk usage.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('diff', [], 'Used to compare files line by line.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('diff3', [], 'Compare three files line by line.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dig', [], 'Domain Information Groper, a DNS lookup utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dir', [], 'List the contents of a directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dircolors', [], 'Set colors for \'ls\' by altering the LS_COLORS environment variable.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dirname', [], 'Display pathname after removing the last slash and characters thereafter.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dirs', [], 'Show the list of remembered directories.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('disable', [], 'Restrict access to a printer.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dlpsh', [], 'Interactive Desktop Link Protocol (DLP) shell for PalmOS.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dmesg', [], 'Examine and control the kernel ring buffer.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dnsdomainname', [], 'Show the DNS domain name of the system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dnssec-keygen', [], 'Generate encrypted Secure DNS keys for a given domain name.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dnssec-makekeyset', [], 'Produce domain key set from one or more DNS security keys generated by dnssec-keygen.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dnssec-signkey', [], 'Sign a secure DNS keyset with key signatures specified in the list of key-identifiers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dnssec-signzone', [], 'Sign a secure DNS zonefile with the signatures in the specified list of key-identifiers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('doexec', [], 'Used to run an executable with an arbitrary argv list provided.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('domainname', [], 'Show or set the name of current NIS (Network Information Services) domain.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dosfsck', [], 'Check and repair MS-DOS file systems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('du', [], 'Show disk usage summary for a file(s).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dump', [], 'Backup utility for ext2/ext3 file systems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dumpe2fs', [], 'Dump ext2/ext3/ext4 file systems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('dumpkeys', [], 'Show information about the keyboard driver\'s current translation tables.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('e2fsck', [], 'Used to check ext2/ext3/ext4 file systems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('e2image', [], 'Store important ext2/ext3/ext4 filesystem metadata to a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('e2label', [], 'Show or change the label on an ext2/ext3/ext4 filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('echo', [], 'Send input string(s) to standard output i.e. display text on the screen.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ed', [], 'GNU Ed û a line-oriented text editor.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('edquota', [], 'Used to edit filesystem quotas using a text editor, such as vi.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('egrep', [], 'Search and display text matching a pattern.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('eject', [], 'Eject removable media.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('elvtune', [], 'Used to set latency in the elevator algorithm used to schedule I/O activities for specified block devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('emacs', [], 'Emacs text editor command line utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('enable', [], 'Used to enable/disable shell builtin commands.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('env', [], 'Run a command in a modified environment. Show/set/delete environment variables.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('envsubst', [], 'Substitute environment variable values in shell format strings.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esd', [], 'Start the Enlightenment Sound Daemon (EsounD or esd). Enables multiple applications to access the same audio device simultaneously.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esd-config', [], 'Manage EsounD configuration.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esdcat', [], 'Use EsounD to send audio data from a specified file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esdctl', [], 'EsounD control program.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esddsp', [], 'Used to reroute non-esd audio data to esd and control all the audio using esd.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esdmon', [], 'Used to copy the sound being sent to a device. Also, send it to a secondary device.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esdplay', [], 'Use EsounD system to play a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esdrec', [], 'Use EsounD to record audio to a specified file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('esdsample', [], 'Sample audio using esd.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('etags', [], 'Used to create a list of functions and macros from a programming source file. These etags are used by emacs. For vi, use ctags.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ethtool', [], 'Used to query and control network driver and hardware settings.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('eval', [], 'Used to evaluate multiple commands or arguments are once.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ex', [], 'Interactive command', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('exec', [], 'An interactive line-based text editor.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('exit', [], 'Exit from the terminal.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('expand', [], 'Convert tabs into spaces in a given file and show the output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('expect', [], 'An extension to the Tcl script, it\'s used to automate interaction with other applications based on their expected output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('export', [], 'Used to set an environment variable.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('expr', [], 'Evaluate expressions and display them on standard output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('factor', [], 'Display prime factors of specified integer numbers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('false', [], 'Do nothing, unsuccessfully. Exit with a status code indicating failure.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fc-cache', [], 'Make font information cache after scanning the directories.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fc-list', [], 'Show the list of available fonts.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fdformat', [], 'Do a low-level format on a floppy disk.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fdisk', [], 'Make changes to the disk partition table.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fetchmail', [], 'Fetch mail from mail servers and forward it to the local mail delivery system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fg', [], 'Used to send a job to the foreground.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fgconsole', [], 'Display the number of the current virtual console.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fgrep', [], 'Display lines from a file(s) that match a specified string. A variant of grep.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('file', [], 'Determine file type for a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('find', [], 'Do a file search in a directory hierarchy.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('finger', [], 'Display user data including the information listed in <em>.plan</em>and <em>.project</em>in each user\'s home directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fingerd', [], 'Provides a network interface for the finger program.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('flex', [], 'Generate programs that perform pattern-matching on text.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fmt', [], 'Used to convert text to a specified width by filling lines and removing new lines, displaying the output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fold', [], 'Wrap input line to fit in a specified width.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('for', [], 'Expand words and run commands for each one in the resultant list.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('formail', [], 'Used to filter standard input into mailbox format.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('format', [], 'Used to format disks.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('free', [], 'Show free and used system memory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fsck', [], 'Check and repair a Linux file system', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ftp', [], 'File transfer protocol user interface.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ftpd', [], 'FTP server process.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('function', [], 'Used to define function macros.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('fuser', [], 'Find and kill a process accessing a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('g++', [], 'Run the g++ compiler.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gawk', [], 'Used for pattern scanning and language processing. A GNU implementation of AWK language.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gcc', [], 'A C and C++ compiler by GNU.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gdb', [], 'A utility to debug programs and know about where it crashes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('getent', [], 'Shows entries from Name Service Switch Libraries for specified keys.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('getkeycodes', [], 'Displays the kernel scancode-to-keycode mapping table.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('getopts', [], 'A utility to parse positional parameters.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gpasswd', [], 'Allows an administrator to change group passwords.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gpg', [], 'Enables encryption and signing services as per the OpenPGP standard.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gpgsplit', [], 'Used to split an OpenPGP message into packets.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gpgv', [], 'Used to verify OpenPGP signatures.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gpm', [], 'It enables cut and paste functionality and a mouse server for the Linux console.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gprof', [], 'Shows call graph profile data.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('grep', [], 'Searches input files for a given pattern and displays the relevant lines.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('groff', [], 'Serves as the front-end of the groff document formatting system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('groffer', [], 'Displays groff files and man pages.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('groupadd', [], 'Used to add a new user group.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('groupdel', [], 'Used to remove a user group.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('groupmod', [], 'Used to modify a group definition.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('groups', [], 'Showthe group(s) to which a user belongs.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('grpck', [], 'Verifies the integrity of group files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('grpconv', [], 'Creates agshadow file from a group or an already existing gshadow.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gs', [], 'Invokes Ghostscript, and interpreter and previewer for Adobe\'s PostScript and PDF languages.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gunzip', [], 'A utility to compress/expand files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gzexe', [], 'Used compress executable files in place and have them automatically uncompress and run at a later stage.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('gzip', [], 'Same as gzip.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('halt', [], 'Command used to half the machine.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('hash', [], 'Shows the path for the commands executed in the shell.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('hdparm', [], 'Show/configure parameters for SATA/IDE devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('head', [], 'Shows first 10 lines from each specified file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('help', [], 'Display\'s help for a built-in command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('hexdump', [], 'Shows specified file output in hexadecimal, octal, decimal, or ASCII format.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('history', [], 'Shows the command history.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('host', [], 'A utility to perform DNS lookups.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('hostid', [], 'Shows host\'s numeric ID in hexadecimal format.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('hostname', [], 'Display/set the hostname of the system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('htdigest', [], 'Manage the user authentication file used by the Apache web server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('htop', [], 'An interactive process viewer for the command line.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('hwclock', [], 'Show or configure the system\'s hardware clock.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('iconv', [], 'Convert text file from one encoding to another.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('id', [], 'Show user and group information for a specified user.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('if', [], 'Execute a command conditionally.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ifconfig', [], 'Used to configure network interfaces.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ifdown', [], 'Stops a network interface.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ifup', [], 'Starts a network interface.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('imapd', [], 'An IMAP (Interactive Mail Access Protocol) server daemon.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('import', [], 'Capture an X server screen and saves it as an image.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('inetd', [], 'Extended internet services daemon, it starts the programs that provide internet services.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('info', [], 'Used to read the documentation in Info format.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('init', [], 'Systemd system and service manager.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('insmod', [], 'A program that inserts a module into the Linux kernel.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('install', [], 'Used to copy files to specified locations and set attributions during the install process.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('iostat', [], 'Shows statistics for CPU, I/O devices, partitions, network filesystems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ip', [], 'Display/manipulate routing, devices, policy, routing and tunnels.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ipcrm', [], 'Used to remove System V interprocess communication (IPC) objects and associated data structures.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ipcs', [], 'Show information on IPC facilities for which calling process has read access.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('iptables', [], 'Administration tool for IPv4 packet filtering and NAT.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('iptables-restore', [], 'Used to restore IP tables from data specified in the input or a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('iptables-save', [], 'Used to dump IP table contents to standard output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('isodump', [], 'A utility that shows the content iso9660 images to verify the integrity of directory contents.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('isoinfo', [], 'A utility to perform directory like listings of iso9660 images.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('isosize', [], 'Show the length of an iso9660 filesystem contained in a specified file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('isovfy', [], 'Verifies the integrity of an iso9660 image.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ispell', [], 'A CLI-based spell-check utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('jobs', [], 'Show the list of active jobs and their status.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('join', [], 'For each pair of input lines, join them using a command field and display on standard output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('kbd_mode', [], 'Set a keyboard mode. Without arguments, shows the current keyboard mode.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('kbdrate', [], 'Reset keyboard repeat rate and delay time.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('kill', [], 'Send a kill (termination) signal to one more processes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('killall', [], 'Kills a process(es) running a specified command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('killall5', [], 'A SystemV killall command. Kills all the processes excluding the ones which it depends on.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('klogd', [], 'Control and prioritize the kernel messages to be displayed on the console, and log them through syslogd.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('kudzu', [], 'Used to detect new and enhanced hardware by comparing it with existing database. Only for RHEL and derivates.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('last', [], 'Shows a list of recent logins on the system by fetching data from <em>/var/log/wtmp</em> file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lastb', [], 'Shows the list of bad login attempts by fetching data from <em>/var/log/btmp</em>file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lastlog', [], 'Displays information about the most recent login of all users or a specified user.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ld', [], 'The Unix linker, it combines archives and object files. It then puts them into one output file, resolving external references.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ldconfig', [], 'Configure dynamic linker run-time bindings.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ldd', [], 'Shows shared object dependencies.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('less', [], 'Displays contents of a fileone page at a time. It\'s advanced than <em>more</em> command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lesskey', [], 'Used to specify key bindings for less command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('let', [], 'Used to perform integer artithmetic on shell variables.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lftp', [], 'An FTP utility with extra features.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lftpget', [], 'Uses lftop to retrieve HTTP, FTP, and other protocol URLs supported by lftp.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('link', [], 'Create links between two files. Similar to ln command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ln', [], 'Create links between files. Links can be hard (two names for the same file) or soft (a shortcut of the first file).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('loadkeys', [], 'Load keyboard translation tables.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('local', [], 'Used to create function variables.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('locale', [], 'Shows information about current or all locales.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('locate', [], 'Used to find files by their name.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lockfile', [], 'Create semaphore file(s) which can beused to limit access to a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('logger', [], 'Make entries in the system log.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('login', [], 'Create a new session on the system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('logname', [], 'Shows the login name of the current user.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('logout', [], 'Performs the logout operation by making changes to the utmp and wtmp files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('logrotate', [], 'Used for automatic rotation, compression, removal, and mailing of system log files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('look', [], 'Shows any lines in a file containing a given string in the beginning.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('losetup', [], 'Set up and control loop devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lpadmin', [], 'Used to configure printer and class queues provided by CUPS (Common UNIX Printing System).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lpc', [], 'Line printer control program, it provides limited control over CUPS printer and class queues.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lpinfo', [], 'Shows the list of avaiable devices and drivers known to the CUPS server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lpmove', [], 'Move on or more printing jobs to a new destination.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lpq', [], 'Shows current print queue status for a specified printer.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lpr', [], 'Used to submit files for printing.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lprint', [], 'Used to print a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lprintd', [], 'Used to abort a print job.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lprintq', [], 'List the print queue.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lprm', [], 'Cancel print jobs.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lpstat', [], 'Displays status information about current classes, jobs, and printers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ls', [], 'Shows the list of files in the current directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lsattr', [], 'Shows file attributes on a Linux ext2 file system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lsblk', [], 'Lists information about all available or the specified block devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lsmod', [], 'Show the status of modules in the Linux kernel.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lsof', [], 'List open files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lspci', [], 'List all PCI devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('lsusb', [], 'List USB devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('m4', [], 'Macro processor.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mail', [], 'Utility to compose, receive, send, forward, and reply to emails.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mailq', [], 'Shows to list all emails queued for delivery (sendmail queue).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mailstats', [], 'Shows current mail statistics.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mailto', [], 'Used to send mail with multimedia content in MIME format.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('make', [], 'Utility to maintain groups of programs, recompile them if needed.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('makedbm', [], 'Creates an NIS (Network Information Services) database map.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('makemap', [], 'Creates database maps used by the keyed map lookups in sendmail.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('man', [], 'Shows manual pages for Linux commands.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('manpath', [], 'Determine search path for manual pages.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mattrib', [], 'Used to change MS-DOS file attribute flags.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mbadblocks', [], 'Checks MD-DOS filesystems for bad blocks.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mcat', [], 'Dump raw disk image.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mcd', [], 'Used to change MS-DOS directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mcopy', [], 'Used to copy MS-DOS files from or to Unix.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('md5sum', [], 'Used to check MD5 checksum for a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mdel, mdeltree', [], 'Used to delete MS-DOS file. mdeltree recursively deletes MS-DOS directory and its contents.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mdir', [], 'Used to display an MS-DOS directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mdu', [], 'Used to display the amount of space occupied by an MS-DOS directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('merge', [], 'Three-way file merge. Includes all changes from file2 and file3 to file1.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mesg', [], 'Allow/disallow osends to sedn write messages to your terminal.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('metamail', [], 'For sending and showing rich text or multimedia email using MIME typing metadata.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('metasend', [], 'An interface for sending non-text mail.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mformat', [], 'Used to add an MS-DOS filesystem to a low-level formatted floppy disk.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mimencode', [], 'Translate to/from MIME multimedia mail encoding formats.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('minfo', [], 'Display parameters of an MS-DOS filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkdir', [], 'Used to create directories.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkdosfs', [], 'Used to create an MS-DOS filesystem under Linux.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mke2fs', [], 'Used create an ext2/ext3/ext4 filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkfifo', [], 'Used to create named pipes (FIFOs) with the given names.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkfs', [], 'Used to build a Linux filesystem on a hard disk partition.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('<span class="skimlinks-unlinked">mkfs.ext3</span>', [], 'Same as mke2fs, create an ext3 Linux filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkisofs', [], 'Used to create an ISO9660/JOLIET/HFS hybrid filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mklost+found', [], 'Create a lost+found directory on a mounted ext2 filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkmanifest', [], 'Makes alist of file names and their DOS 8.3 equivalent.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mknod', [], 'Create a FIFO, block (buffered) special file, character (unbuffered) special file with the specified name.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkraid', [], 'Used to setup RAID device arrays.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mkswap', [], 'Set up a Linux swap area.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mktemp', [], 'Create a temporary file or directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mlabel', [], 'Make an MD-DOS volume label.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mmd', [], 'Make an MS-DOS subdirectory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mmount', [], 'Mount an MS-DOS disk.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mmove', [], 'Move or rename an MS-DOS file or subdirectory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mmv', [], 'Mass move and rename files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('modinfo', [], 'Show information about a Linux kernel module.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('modprobe', [], 'Add or remove modules from the Linux kernel.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('more', [], 'Display content of a file page-by-page.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('most', [], 'Browse or page through a text file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mount', [], 'Mount a filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mountd', [], 'NFS mount daemon.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mpartition', [], 'Partition an MS-DOS disk.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mpg123', [], 'Command-line mp3 player.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mpg321', [], 'Similar to mpg123.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mrd', [], 'Remove an MS-DOS subdirectory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mren', [], 'Rename an existing MS-DOS file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mshowfat', [], 'Show FTA clusters allocated to a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mt', [], 'Control magnetic tape drive operation.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mtools', [], 'Utilities to access MS-DOS disks.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mtoolstest', [], 'Tests and displays the mtools configuration files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mtr', [], 'A network diagnostic tool.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mtype', [], 'Display contents of an MS-DOS file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mv', [], 'Move/rename files or directories.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('mzip', [], 'Change protection mode and eject disk on Zip/Jaz drive.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('named', [], 'Internet domain name server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('namei', [], 'Follow a pathname until a terminal point is found.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nameif', [], 'Name network interfaces based on MAC addresses.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nc', [], 'Netcat utility. Arbitrary TCP and UDP connections and listens.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('netstat', [], 'Show network information.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('newaliases', [], 'Rebuilds mail alias database.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('newgrp', [], 'Log-in to a new group.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('newusers', [], 'Update/create new users in batch.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nfsd', [], 'Special filesystem for controlling Linux NFS server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nfsstat', [], 'List NFS statistics.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nice', [], 'Run a program with modified scheduling priority.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nl', [], 'Show numbered line while displaying the contents of a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nm', [], 'List symbols from object files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nohup', [], 'Run a command immune to hangups.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('notify-send', [], 'A program to send desktop notifications.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nslookup', [], 'Used performs DNS queries. Read this article for more info.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('nsupdate', [], 'Dynamic DNS update utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('objcopy', [], 'Copy and translate object files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('objdump', [], 'Display information from object files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('od', [], 'Dump files in octal and other formats.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('op', [], 'Operator access, allows system administrators to grant users access to certain rootoperations that require superuser privileges.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('open', [], 'Open a file using its default application.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('openvt', [], 'Start a program on a new virtual terminal (VT).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('passwd', [], 'Change user password.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('paste', [], 'Merge lines of files. Write to standard output, TAB-separated lines consisting of sqentially correspnding lines from each file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('patch', [], 'Apply a patchfile (containing differences listing by diff program) to an original file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pathchk', [], 'Check if file names are valid or portable.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('perl', [], 'Perl 5 language interpreter.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pgrep', [], 'List process IDs matching the specified criteria among all the running processes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pidof', [], 'Find process ID of a running program.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ping', [], 'Send ICMP ECHO_REQUEST to network hosts.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pinky', [], 'Lightweight finger.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pkill', [], 'Send kill signal to processes based on name and other attributes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pmap', [], 'Report memory map of a process.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('popd', [], 'Removes directory on the head of the directory stack and takes you to the new directory on the head.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('portmap', [], 'Converts RPC program numbers to IP port numbers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('poweroff', [], 'Shuts down the machine.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pppd', [], 'Point-to-point protocol daemon.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pr', [], 'Convert (column or paginate) text files for printing.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('praliases', [], 'Prints the current system mail aliases.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('printcap', [], 'Printer capability database.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('printenv', [], 'Show values of all or specified environment variables.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('printf', [], 'Show arguments formatted according to a specified format.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ps', [], 'Report a snapshot of the current processes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ptx', [], 'Produce a permuted index of file contents.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pushd', [], 'Appends a given directory name to the head of the stack and then cd to the given directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pv', [], 'Monitor progress of data through a pipe.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pwck', [], 'Verify integrity of password files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pwconv', [], 'Creates shadow from passwdand an optionally existing shadow.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('pwd', [], 'Show current directory.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('python', [], '', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('quota', [], 'Shows disk usage, and space limits for a user or group. Without arguments, only shows user quotas.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('quotacheck', [], 'Used to scan a file system for disk usage.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('quotactl', [], 'Make changes to disk quotas.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('quotaoff', [], 'Enable enforcement of filesystem quotas.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('quotaon', [], 'Disable enforcement of filesystem quotas.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('quotastats', [], 'Shows the report of quota system statistics gathered from the kernel.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('raidstart', [], 'Start/stop RAID devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ram', [], 'RAM disk device used to access the RAM disk in raw mode.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ramsize', [], 'Show usage information for the RAM disk.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ranlib', [], 'Generate index to the contents of an archive and store it in the archive.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rar', [], 'Create and manage RAR file in Linux.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rarpd', [], 'Respond to Reverse Address Resoultion Protocol (RARP) requests.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rcp', [], 'Remote copy command to copy files between remote computers.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rdate', [], 'Set system date and time by fetching information from a remote machine.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rdev', [], 'Set or query RAM disk size, image root device, or video mode.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rdist', [], 'Remote file distribution client, maintains identical file copies over multiple hosts.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rdistd', [], 'Start the rdist server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('read', [], 'Read from a file descriptor.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('readarray', [], 'Read lines from a file into an array variable.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('readcd', [], 'Read/write compact disks.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('readelf', [], 'Shows information about ELF (Executable and Linkable fomrat) files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('readlink', [], 'Display value of a symbolic link or canonical file name.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('readonly', [], 'Mark functions and variables as read-only.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('reboot', [], 'Restart the machine.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('reject', [], 'Accept/reject print jobs sent to a specified destination.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('remsync', [], 'Synchronize remote files over email.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rename', [], 'Rename one or more files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('renice', [], 'Change priority of active processes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('repquota', [], 'Report disk usage and quotas for a specified filesystem.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('reset', [], 'Reinitialize the terminal.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('resize2fs', [], 'Used to resize ext2/ext3/ext4 file systems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('restore', [], 'Restore files from a backup created using dump.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('return', [], 'Exit a shell function.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rev', [], 'Show contents of a file, reversing the order of characters in every line.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rexec', [], 'Remote execution client for exec server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rexecd', [], 'Remote execution server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('richtext', [], 'View ôrichtextö on an ACSII terminal.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rlogin', [], 'Used to connect a local host system with a remote host.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rlogind', [], 'Acts as the server for rlogin.It facilitates remote login, and authentication based on privileged port numbers from trusted hosts.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rm', [], 'Removes specified files and directories (not by default).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rmail', [], 'Handle remote mail received via uucp.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rmdir', [], 'Used to remove empty directories.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rmmod', [], 'A program to remove modules from Linux kernel.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rndc', [], 'Name server control utility. Send command to a BIND DNS server over a TCP connection.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rootflags', [], 'Show/set flags for the kernel image.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('route', [], 'Show/change IP routing table.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('routed', [], 'A daemon, invoked at boot time, to manage internet routing tables.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rpcgen', [], 'An RPC protocol compiler. Parse a file written in the RPC language.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rpcinfo', [], 'Shows RPC information. Makes an RPC call to an RPC server and reports the findings.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rpm', [], 'A package manager for linux distributions. Originally developed for RedHat Linux.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rsh', [], 'Remote shell. Connects to a specified host and executes commands.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rshd', [], 'A daemon that acts as a server for rsh and rcp commands.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rsync', [], 'A versitile to for copying files remotely and locally.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('runlevel', [], 'Shows previous and current SysV runlevel.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rup', [], 'Remote status display. Shows current system status for all or specified hosts on the local network.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ruptime', [], 'Shows uptime and login details of the machines on the local network.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rusers', [], 'Shows the list of the users logged-in to the host or on all machines on the local network.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rusersd', [], 'The rsuerd daemon acts as a server that responds to the queries from rsuers command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rwall', [], 'Sends messages to all users on the local network.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rwho', [], 'Reports who is logged-in to the hosts on the local network.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('rwhod', [], 'Acts as a server for rwho and ruptime commands.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sane-find-scanner', [], 'Find SCSI and USB scanner and determine their device files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('scanadf', [], 'Retrieve multiple images from a scanner equipped with an automatic document feeder (ADF).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('scanimage', [], 'Read images from image aquistion devices (scanner or camera) and display on standard output in PNM (Portable aNyMap) format.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('scp', [], 'Copy files between hosts on a network securely using SSH.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('screen', [], 'A window manager that enables multiple pseudo-terminals with the help of ANSI/VT100 terminal emulation.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('script', [], 'Used to make a typescript of everything displayed on the screen during a terminal session.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sdiff', [], 'Shows two files side-by-side and highlights the differences.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sed', [], 'Stream editor for filtering and transforming text (from a file or a pipe input).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('select', [], 'Synchronous I/O multiplexing.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sendmail', [], 'It\'s a mail router or an MTA (Mail Transfer Agent). sendmail support can send a mail to one or more recepients using necessary protocols.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sensors', [], 'Shows the current readings of all sensor chips.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('seq', [], 'Displays an incremental sequence of numbers from first to last.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('set', [], 'Used to manipulate shell variables and functions.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('setfdprm', [], 'Sets floppy disk parameters as provided by the user.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('setkeycodes', [], 'Load kernel scancode-to-keycode mapping table entries.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('setleds', [], 'Show/change LED light settings of the keyboard.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('setmetamode', [], 'Define keyboard meta key handling. Without arguments, shows current meta key mode.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('setquota', [], 'Set disk quotas for users and groups.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('setsid', [], 'Run a program in a new session.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('setterm', [], 'Set terminal attributes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sftp', [], 'Secure File Transfer program.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sh', [], 'Command interpreter (shell) utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sha1sum', [], 'Compute and check 160-bit SHA1 checksum to verify file integrity.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('shift', [], 'Shift positional parameters.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('shopt', [], 'Shell options.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('showkey', [], 'Examines codes sent by the keyboard displays them in printable form.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('showmount', [], 'Shows information about NFS server mount on the host.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('shred', [], 'Overwrite a file to hide its content (optionally delete it), making it harder to recover it.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('shutdown', [], 'Power-off the machine.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('size', [], 'Lists section size and the total size of a specified file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('skill', [], 'Send a signal to processes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('slabtop', [], 'Show kernel slab cache information in real-time.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('slattach', [], 'Attack a network interface to a serial line.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sleep', [], 'Suspend execution for a specified amount of time (in seconds).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('slocate', [], 'Display matches by searching filename databases. Takes ownership and file permission into consideration.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('snice', [], 'Reset priority for processes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sort', [], 'Sort lines of text files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('source', [], 'Run commands from a specified file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('split', [], 'Split a file into pieces of fixed size.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ss', [], 'Display socket statistics, similar to netstat.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ssh', [], 'An SSH client for logging in to a remote machine. It provides encrypted communication between the hosts.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ssh-add', [], 'Adds private key identities to the authentication agent.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ssh-agent', [], 'It holds private keys used for public key authentication.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ssh-keygen', [], 'It generates, manages, converts authentication keys for ssh.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ssh-keyscan', [], 'Gather ssh public keys.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sshd', [], 'Server for the ssh program.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('stat', [], 'Display file or filesystem status.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('statd', [], 'A daemon that listens for reboot notifications from other hosts, and manages the list of hosts to be notified when the local system reboots.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('strace', [], 'Trace system calls and signals.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('strfile', [], 'Create a random access file for storing strings.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('strings', [], 'Search a specified file and prints any printable strings with at least four characters and followed by an unprintable character.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('strip', [], 'Discard symbols from object files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('stty', [], 'Change and print terminal line settings.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('su', [], 'Change user ID or become superuser.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sudo', [], 'Execute a command as superuser.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sum', [], 'Checksum and count the block in a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('suspend', [], 'Suspend the execution of the current shell.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('swapoff', [], 'Disable devices for paging and swapping.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('swapon', [], 'Enable devices for paging and swapping.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('symlink', [], 'Create a symbolic link to a file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sync', [], 'Synchronize cached writes to persistent storage.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sysctl', [], 'Configure kernel parameters at runtime.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('sysklogd', [], 'Linux system logging utilities. Provides syslogd and klogd functionalities.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('syslogd', [], 'Read and log system messages to the system console and log files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tac', [], 'Concatenate and print files in reverse order. Opposite of cat command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tail', [], 'Show the last 10 lines of each specified file(s).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tailf', [], 'Follow the growth of a log file. (Deprecated command)', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('talk', [], 'A two-way screen-oriented communication utility that allows two user to exchange messages simulateneously.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('talkd', [], 'A remote user communication server for <em>talk</em>.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tar', [], 'GNU version of the tar archiving utility. Used to store and extract multiple files from a single archive.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('taskset', [], 'Set/retrieve a process\'s CPU affinity.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tcpd', [], 'Access control utility for internet services.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tcpdump', [], 'Dump traffic on network. Displays a description of the contents of packets on a network interface that match the boolean expression.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tcpslice', [], 'Extract pieces of tcpdump files or merge them.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tee', [], 'Read from standard input and write to standard output and files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('telinit', [], 'Change SysV runlevel.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('telnet', [], 'Telnet protocol user interface. Used to interact with another host using telnet.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('telnetd', [], 'A server for the telnet protocol.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('test', [], 'Check file type and compare values.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tftp', [], 'User interface to the internet TFTP (Trivial File Transfer Protocol).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tftpd', [], 'TFTP server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('time', [], 'Run programs and summarize system resource usage.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('timeout', [], 'Execute a command with a time limit.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('times', [], 'Shows accumulated user and system times for the shell and it\'s child processes.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tload', [], 'Shows a graph of the current system load average to the specified tty.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tmpwatch', [], 'Recursively remove files and directories which haven\'t been accessed for the specified period of time.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('top', [], 'Displays real-time view of processes running on the system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('touch', [], 'Change file access and modification times.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tput', [], 'Modify terminal-dependent capabilities, color, etc.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tr', [], 'Translate, squeeze, or delete characters from standard input and display on standard output.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tracepath', [], 'Traces path to a network host discovering MTU (Maximum Transmission Unit) along this path.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('traceroute', [], 'Traces the route taken by the packets to reach the network host.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('trap', [], 'Trap function responds to hardware signals. It defines and creates handlers to run when the shell receives signals.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('troff', [], 'The troff processor of the groff text formatting system.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('TRUE', [], 'Exit with a status code indicating success.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tset', [], 'Initialize terminal.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tsort', [], 'Perform topological sort.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tty', [], 'Display the filename of the terminal connected to standard input.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tune2fs', [], 'Adjust tunable filesystem parameters on ext2/ext3/ext4 filesystems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('tunelp', [], 'Set various parameters for the line printer devices.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('type', [], 'Write a description for a command type.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ul', [], 'Underline text.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ulimit', [], 'Get and set user limits for the calling process.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('umask', [], 'Set file mode creation mask.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('umount', [], 'Unmount specified file systems.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('unalias', [], 'Remove alias definitions for specified alias names.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('uname', [], 'Show system information.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('uncompress', [], 'Uncompress the files compressed with the compress command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('unexpand', [], 'Convert spaces to tabs for a specified file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('unicode_start', [], 'Put keyboard and console in Unicode mode.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('unicode_stop', [], 'Revert keyboard and console from Unicode mode.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('uniq', [], 'Report or omit repeating lines.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('units', [], 'Convert units from one scalar to another.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('unrar', [], 'Extract files from a RAR archive.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('unset', [], 'Remove variable or function names.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('unshar', [], 'Unpack shell archive scripts.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('until', [], 'Execute command until a given condition is true.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('uptime', [], 'Tell how long the system has been running.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('useradd', [], 'Create a new user or update default user information.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('userdel', [], 'Delete a user account and related files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('usermod', [], 'Modify a user account.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('users', [], 'Show the list of active users on the machine.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('usleep', [], 'Suspend execution for microsecond intervals.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('uudecode', [], 'Decode a binary file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('uuencode', [], 'Encode a binary file.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('uuidgen', [], 'Created a new UUID (Universally Unique Identifier) table.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('vdir', [], 'Same as <strong>ls -l -b</strong>. Verbosely list directory contents.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('vi', [], 'A text editor utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('vidmode', [], 'Set the video mode for a kernel image. Displays current mode value without arguments. Alternative: rdev -v', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('vim', [], 'Vi Improved, a text-based editor which is a successor to vi.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('vmstat', [], 'Shows information about processes, memory, paging, block IO, traps, disks, and CPU activity.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('volname', [], 'Returns volume name for a device formatted with an ISO-9660 filesystem. For example, CD-ROM.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('w', [], 'Show who is logged-on and what they\'re doing.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('wait', [], 'Waits for a specified process ID(s) to terminate and returns the termination status.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('wall', [], 'Display a message on the terminals all the users who are currently logged-in.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('warnquota', [], 'Send mail to the users who\'ve exceeded their disk quota soft limit.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('watch', [], 'Runs commands repeatedly until interrupted and shows their output and errors.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('wc', [], 'Print newline, word, and byte count for each of the specified files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('wget', [], 'A non-interactive file download utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('whatis', [], 'Display one line manual page descriptions.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('whereis', [], 'Locate the binary, source, and man page files for a command.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('which', [], 'For a given command, lists the pathnames for the files which would be executed when the command runs.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('while', [], 'Conditionally execute commands (while loop).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('who', [], 'Shows who is logged on.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('whoami', [], 'Displays the username tied to the current effective user ID.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('whois', [], 'Looks for an object in a WHOIS database', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('write', [], 'Display a message on other user\'s terminal.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('xargs', [], 'Runs a command using initial arguments and then reads remaining arguments from standard input.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('xdg-open', [], 'Used to open a file or URL in an application preferred by the user.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('xinetd', [], 'Extended internet services daemon. Works similar to inetd.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('xz', [], 'Compress/ Decompress .xz and .lzma files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('yacc', [], 'Yet Another Compiler Compiler, a GNU Project parser generator.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('yes', [], 'Repeatedly output a line with a specified string(s) until killed.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypbind', [], 'A daemon that helps client processes to connect to an NIS server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypcat', [], 'Shows the NIS map (or database) for the specified MapName parameter.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypinit', [], 'Sets up NIS maps on an NIS server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypmatch', [], 'Shows values for specified keys from an NIS map.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('yppasswd', [], 'Change NIS login password.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('yppasswdd', [], 'Acts as a server for the yppasswd command. Receives and executes requests.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('yppoll', [], 'Shows the ID number or version of NIS map currently used on the NIS server.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('yppush', [], 'Forces slave NIS servers to copy updated NIS maps.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypserv', [], 'A daemon activated at system startup. It looks for information in local NIS maps.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypset', [], 'Point a client (running ypbind) to a specifc server (running ypserv).', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('yptest', [], 'Calls various functions to check the configuration of NIS services.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypwhich', [], 'Shows the hostname for NIS server or master server for a given map.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('ypxfr', [], 'Transfers NIS server map from server to a local host.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zcat', [], 'Used to compress/uncompress files. Similar to gzip', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zcmp', [], 'Compare compressed files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zdiff', [], 'Compare compressed files line by line.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zdump', [], 'Displays time for the timezone mentioned.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zforce', [], 'Adds .gz extension to all gzipped files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zgrep', [], 'Performs grep on compressed files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zic', [], 'Creates time conversion information files using the specified input files.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zip', [], 'A file compression and packaging utility.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zless', [], 'Displays information of a compressed file (using less command) on the terminal one screen at a time.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('zmore', [], 'Displays output of a compressed file (using more command) on the terminal one page at a time.', '', '', () => { }),
        new ConsoleCommand_js_4.ConsoleCommand('znew', [], 'Recompress .z files to .gz. files.', '', '', () => { })
    ];
    exports.BashCommands = commands;
});
define("Main/CommandCompletion", ["require", "exports", "Main/UserSettings", "Main/Commands/WebCommands", "Main/UI", "Main/Commands/CMDCommands", "Main/Commands/PSCommands", "Main/Commands/BashCommands"], function (require, exports, UserSettings_js_2, WebCommands_js_1, UI, CMDCommands_js_1, PSCommands_js_1, BashCommands_js_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PositionCommandCompletionWindow = exports.ShowParameterInfo = exports.ShowCommandInfo = exports.HighlightCompletionWindowItem = exports.SetCommandCompletionPositionToIncompleteParam = exports.GetCommandCompletions = exports.DisplayCommandShortcuts = exports.DisplayParameterCompletions = exports.DisplayCommandCompletions = exports.CommandCompletionStore = void 0;
    exports.CommandCompletionStore = new class {
        constructor() {
            this.CompletionPosition = -1;
            this.InputHistoryPosition = -1;
            this.InputHistoryItems = [];
        }
    };
    function DisplayCommandCompletions(commands, relevantText) {
        exports.CommandCompletionStore.CompletionTimeout = window.setTimeout(() => {
            commands.forEach(x => {
                var commandCompletionItem = document.createElement("div");
                commandCompletionItem.classList.add("command-completion-item");
                commandCompletionItem.innerHTML = x.Name;
                commandCompletionItem.onclick = function () {
                    var commandText = UI.ConsoleTextArea.value;
                    var insertCommandStart = commandText.lastIndexOf(relevantText);
                    UI.ConsoleTextArea.value = commandText.substring(0, insertCommandStart) + commandCompletionItem.innerHTML;
                    UI.CommandCompletionDiv.classList.add("hidden");
                    UI.CommandInfoDiv.classList.add("hidden");
                };
                commandCompletionItem.onfocus = function () {
                    ShowCommandInfo(x);
                };
                UI.CommandCompletionDiv.appendChild(commandCompletionItem);
            });
            if (commands.length > 0) {
                var currentText = UI.ConsoleTextArea.value.toLowerCase();
                if (commands.some(x => x.Name.toLowerCase().startsWith(currentText))) {
                    exports.CommandCompletionStore.CompletionPosition = commands.findIndex(x => x.Name.toLowerCase().startsWith(currentText));
                }
                UI.CommandCompletionDiv.classList.remove("hidden");
                HighlightCompletionWindowItem(exports.CommandCompletionStore.CompletionPosition);
                ShowCommandInfo(commands[exports.CommandCompletionStore.CompletionPosition]);
                PositionCommandCompletionWindow();
            }
        }, Math.min(commands.length, 1000));
    }
    exports.DisplayCommandCompletions = DisplayCommandCompletions;
    function DisplayParameterCompletions(command, parameters, commandText) {
        if (parameters.length > 0 && !parameters.some(x => x.Value.length == 0) && !commandText.endsWith("-")) {
            return;
        }
        UI.CommandCompletionDiv.classList.remove("hidden");
        var remainingParams = command.Parameters.filter(x => !parameters.some(y => y.Name.toLowerCase() == x.Name.toLowerCase() &&
            y.Value.length > 0))
            .filter(x => x.Name.toLowerCase()
            .startsWith(UI.ConsoleTextArea.value.substring(UI.ConsoleTextArea.value.lastIndexOf("-") + 1).toLowerCase()));
        remainingParams.forEach(param => {
            var commandCompletionItem = document.createElement("div");
            commandCompletionItem.classList.add("command-completion-item");
            commandCompletionItem.innerHTML = param.Name;
            commandCompletionItem.onclick = function () {
                var preParam = UI.ConsoleTextArea.value.substring(0, UI.ConsoleTextArea.value.lastIndexOf(" "));
                UI.ConsoleTextArea.value = preParam.trim() + ` -${commandCompletionItem.innerText}`;
                UI.CommandCompletionDiv.classList.add("hidden");
                UI.CommandInfoDiv.classList.add("hidden");
            };
            commandCompletionItem.onfocus = function () {
                ShowParameterInfo(param);
            };
            UI.CommandCompletionDiv.appendChild(commandCompletionItem);
        });
        if (!UI.CommandCompletionDiv.classList.contains("hidden") && remainingParams.length > 0) {
            SetCommandCompletionPositionToIncompleteParam(parameters);
            HighlightCompletionWindowItem(exports.CommandCompletionStore.CompletionPosition);
            ShowParameterInfo(remainingParams[exports.CommandCompletionStore.CompletionPosition]);
            PositionCommandCompletionWindow();
        }
    }
    exports.DisplayParameterCompletions = DisplayParameterCompletions;
    function DisplayCommandShortcuts(shortcutText) {
        UI.CommandCompletionDiv.classList.remove("hidden");
        var matchingShortcuts = Object.keys(UserSettings_js_2.UserSettings.CommandModeShortcuts).filter(x => UserSettings_js_2.UserSettings.CommandModeShortcuts[x].slice(1).toLowerCase().startsWith(shortcutText.toLowerCase()));
        matchingShortcuts.forEach(x => {
            var commandCompletionItem = document.createElement("div");
            commandCompletionItem.classList.add("command-completion-item");
            commandCompletionItem.innerHTML = UserSettings_js_2.UserSettings.CommandModeShortcuts[x].slice(1);
            commandCompletionItem.onclick = function () {
                UI.CommandModeSelect.value = x;
                UI.ConsoleTextArea.value = "";
                UI.CommandCompletionDiv.classList.add("hidden");
                UI.CommandInfoDiv.classList.add("hidden");
            };
            commandCompletionItem.onfocus = function () { };
            UI.CommandCompletionDiv.appendChild(commandCompletionItem);
        });
        if (!UI.CommandCompletionDiv.classList.contains("hidden") && matchingShortcuts.length > 0) {
            HighlightCompletionWindowItem(exports.CommandCompletionStore.CompletionPosition);
            PositionCommandCompletionWindow();
        }
    }
    exports.DisplayCommandShortcuts = DisplayCommandShortcuts;
    function GetCommandCompletions(commandText) {
        var commandList;
        switch (UI.CommandModeSelect.value) {
            case "Web":
                commandList = WebCommands_js_1.WebCommands;
                break;
            case "CMD":
                commandList = CMDCommands_js_1.CMDCommands;
                break;
            case "PSCore":
            case "WinPS":
                commandList = PSCommands_js_1.PSCommands;
                break;
            case "Bash":
                commandList = BashCommands_js_1.BashCommands;
                break;
            default:
                UI.CommandCompletionDiv.classList.add("hidden");
                return;
        }
        var filteredList = commandList.filter(x => x.Name.toLowerCase().indexOf(commandText.toLowerCase()) > -1);
        filteredList.sort((a, b) => a.Name.localeCompare(b.Name));
        return filteredList;
    }
    exports.GetCommandCompletions = GetCommandCompletions;
    function SetCommandCompletionPositionToIncompleteParam(parameters) {
        var lastParam = parameters[parameters.length - 1];
        if (typeof lastParam != 'undefined' && lastParam.Value.length == 0) {
            for (var i = 0; i < UI.CommandCompletionDiv.children.length; i++) {
                if (UI.CommandCompletionDiv.children[i].innerHTML.startsWith(lastParam.Name)) {
                    exports.CommandCompletionStore.CompletionPosition = i;
                    break;
                }
            }
        }
    }
    exports.SetCommandCompletionPositionToIncompleteParam = SetCommandCompletionPositionToIncompleteParam;
    function HighlightCompletionWindowItem(index) {
        UI.CommandCompletionDiv.querySelectorAll("div.selected").forEach(x => {
            x.classList.remove("selected");
        });
        if (UI.CommandCompletionDiv.children.length >= index + 1) {
            UI.CommandCompletionDiv.children[index].classList.add("selected");
            UI.CommandCompletionDiv.children[Math.max(0, index - 1)].scrollIntoView();
        }
    }
    exports.HighlightCompletionWindowItem = HighlightCompletionWindowItem;
    function ShowCommandInfo(command) {
        UI.CommandInfoDiv.innerHTML = command.PartialHelp;
        UI.CommandInfoDiv.classList.remove("hidden");
    }
    exports.ShowCommandInfo = ShowCommandInfo;
    function ShowParameterInfo(parameter) {
        if (parameter.Summary.length > 0) {
            var paramText = "";
            if (parameter.ParameterType) {
                paramText = ` [${parameter.ParameterType}]`;
            }
            UI.CommandInfoDiv.innerHTML = `<span class='text-primary'>${parameter.Name}${paramText}: </span>
                                ${parameter.Summary}`;
            UI.CommandInfoDiv.classList.remove("hidden");
        }
    }
    exports.ShowParameterInfo = ShowParameterInfo;
    function PositionCommandCompletionWindow() {
        var computedStyle = window.getComputedStyle(UI.ConsoleTextArea);
        UI.MeasurementContext.font = computedStyle.fontSize + " " + computedStyle.fontFamily;
        var width = UI.MeasurementContext.measureText(UI.ConsoleTextArea.value).width;
        UI.CommandCompletionDiv.style.marginLeft = String(width + 10) + "px";
        var wrapper = document.querySelector("#commandCompletionWrapper");
        var inputRect = UI.ConsoleTextArea.getBoundingClientRect();
        wrapper.style.left = String(inputRect.left) + "px";
        if (inputRect.top / document.documentElement.clientHeight > .5) {
            UI.CommandCompletionDiv.style.verticalAlign = "bottom";
            UI.CommandInfoDiv.style.verticalAlign = "bottom";
            wrapper.style.top = String(inputRect.top - wrapper.clientHeight) + "px";
        }
        else {
            UI.CommandCompletionDiv.style.verticalAlign = "top";
            UI.CommandInfoDiv.style.verticalAlign = "top";
            wrapper.style.top = String(inputRect.bottom + 5) + "px";
        }
    }
    exports.PositionCommandCompletionWindow = PositionCommandCompletionWindow;
});
define("Main/CommandProcessor", ["require", "exports", "Main/Commands/WebCommands", "Main/UserSettings", "Main/App", "Shared/Models/CommandLineParameter", "Main/UI", "Main/CommandCompletion", "Main/HubConnection", "Main/Console"], function (require, exports, WebCommands_js_2, UserSettings_js_3, App_js_3, CommandLineParameter_js_1, UI, CommandCompletion_js_1, HubConnection_js_1, Console_js_4) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExtractParameters = exports.ProcessCommand = exports.GetCommandMode = exports.GetCommandModeShortcut = exports.GetRelevantCommandText = exports.EvaluateCurrentCommandText = void 0;
    function EvaluateCurrentCommandText() {
        Console_js_4.AutoSizeTextArea();
        window.clearTimeout(CommandCompletion_js_1.CommandCompletionStore.CompletionTimeout);
        UI.CommandCompletionDiv.classList.add("hidden");
        UI.CommandInfoDiv.classList.add("hidden");
        UI.CommandCompletionDiv.innerHTML = "";
        CommandCompletion_js_1.CommandCompletionStore.CompletionPosition = 0;
        if (UI.ConsoleTextArea.value.startsWith("/")) {
            CommandCompletion_js_1.DisplayCommandShortcuts(UI.ConsoleTextArea.value.slice(1));
            return;
        }
        if (UI.ConsoleTextArea.value.endsWith(" ")) {
            return;
        }
        var relevantText = GetRelevantCommandText(UI.ConsoleTextArea.value);
        var commandInputArray = App_js_3.MainApp.Utilities.Split(relevantText, " ", 2);
        var matchingCommands = CommandCompletion_js_1.GetCommandCompletions(commandInputArray[0]);
        if (commandInputArray.length == 1) {
            if (matchingCommands.length == 0) {
                return;
            }
            CommandCompletion_js_1.DisplayCommandCompletions(matchingCommands, relevantText);
        }
        else if (commandInputArray.length > 1) {
            switch (UI.CommandModeSelect.value) {
                case "PSCore":
                case "WinPS":
                case "Web":
                    var parameters = ExtractParameters(UI.ConsoleTextArea.value);
                    CommandCompletion_js_1.DisplayParameterCompletions(matchingCommands[0], parameters, relevantText);
                    break;
                default:
                    break;
                    ;
            }
        }
    }
    exports.EvaluateCurrentCommandText = EvaluateCurrentCommandText;
    function GetRelevantCommandText(commandText) {
        switch (UI.CommandModeSelect.value) {
            case "PSCore":
            case "WinPS":
            case "Bash":
                var lastLineBreak = Math.max(commandText.lastIndexOf(";"), commandText.lastIndexOf("|"));
                commandText = commandText.substring(lastLineBreak + 1).trim();
                break;
            case "CMD":
                commandText = commandText.substring(commandText.lastIndexOf("&") + 1).trim();
                break;
            default:
                break;
                ;
        }
        return commandText;
    }
    exports.GetRelevantCommandText = GetRelevantCommandText;
    /** Checks the given string for a matching shortcut. */
    function GetCommandModeShortcut() {
        switch (UI.ConsoleTextArea.value.toLowerCase()) {
            case UserSettings_js_3.UserSettings.CommandModeShortcuts.Web:
                return "Web";
            case UserSettings_js_3.UserSettings.CommandModeShortcuts.CMD:
                return "CMD";
            case UserSettings_js_3.UserSettings.CommandModeShortcuts.PSCore:
                return "PSCore";
            case UserSettings_js_3.UserSettings.CommandModeShortcuts.WinPS:
                return "WinPS";
            case UserSettings_js_3.UserSettings.CommandModeShortcuts.Bash:
                return "Bash";
            default:
                return null;
        }
    }
    exports.GetCommandModeShortcut = GetCommandModeShortcut;
    function GetCommandMode() {
        return UI.CommandModeSelect.value;
    }
    exports.GetCommandMode = GetCommandMode;
    /** Processes the command input. */
    function ProcessCommand() {
        var commandText = UI.ConsoleTextArea.value.trim();
        CommandCompletion_js_1.CommandCompletionStore.InputHistoryItems.push(commandText);
        CommandCompletion_js_1.CommandCompletionStore.InputHistoryPosition = CommandCompletion_js_1.CommandCompletionStore.InputHistoryItems.length;
        UI.ConsoleTextArea.value = "";
        var commandMode = UI.CommandModeSelect.value;
        switch (commandMode) {
            case "Web":
                var matchingCommand = WebCommands_js_2.WebCommands.find(x => x.Name.toLowerCase() == commandText.split(" ")[0].toLowerCase());
                if (matchingCommand) {
                    var parameters = ExtractParameters(commandText);
                    // Infer default parameter.
                    if (parameters.length > 0 && commandText.indexOf("-") == -1 && matchingCommand.Parameters.length == 1) {
                        parameters = [
                            new CommandLineParameter_js_1.CommandLineParameter(matchingCommand.Parameters[0].Name, commandText.substring(commandText.indexOf(" ")).trim())
                        ];
                    }
                    matchingCommand.Execute(parameters);
                }
                else {
                    Console_js_4.AddConsoleOutput("Unknown command.");
                }
                break;
            case "PSCore":
            case "WinPS":
            case "CMD":
            case "Bash":
                var allDevices = App_js_3.MainApp.DataGrid.GetSelectedDevices();
                var windowsDevices = allDevices.filter(x => x.Platform.toLowerCase() == "windows");
                var linuxDevices = allDevices.filter(x => x.Platform.toLowerCase() == "linux");
                if (commandMode == "CMD" && linuxDevices.length > 0) {
                    Console_js_4.AddConsoleOutput("Linux devices will be excluded from CMD command.");
                    allDevices = windowsDevices;
                }
                if (commandMode == "Bash" && windowsDevices.length > 0) {
                    Console_js_4.AddConsoleOutput("Windows devices will be excluded from Bash command.");
                    allDevices = linuxDevices;
                }
                if (allDevices.length == 0) {
                    Console_js_4.AddConsoleOutput("At least one device must be selected to send commands.");
                    return;
                }
                var deviceIDs = allDevices.map(value => value.ID);
                HubConnection_js_1.Connection.invoke("ExecuteCommandOnClient", commandMode, commandText, deviceIDs);
                break;
            default:
                break;
        }
    }
    exports.ProcessCommand = ProcessCommand;
    function ExtractParameters(commandText) {
        var parameterArray = new Array();
        var startParams = commandText.indexOf(" ");
        if (startParams == -1) {
            return parameterArray;
        }
        commandText.substr(startParams).trim().split(" -").forEach(x => {
            if (x.trim().length == 0) {
                return;
            }
            var kv = x.trim();
            var key = "";
            var value = "";
            if (kv.indexOf(" ") == -1 || kv.substr(kv.indexOf(" ")).trim().length == 0) {
                key = kv;
            }
            else {
                key = kv.substr(0, kv.indexOf(" "));
                value = kv.substr(kv.indexOf(" ")).trim();
            }
            key = key.replace("-", "");
            parameterArray.push(new CommandLineParameter_js_1.CommandLineParameter(key, value));
        });
        return parameterArray;
    }
    exports.ExtractParameters = ExtractParameters;
});
define("Main/InputEventHandlers", ["require", "exports", "Main/CommandCompletion", "Main/UI", "Main/CommandProcessor", "Main/DataGrid", "Main/HubConnection", "Main/Commands/WebCommands", "Main/Console", "Shared/UI"], function (require, exports, CommandCompletion_js_2, UI, CommandProcessor, DataGrid, HubConnection, WebCommands_js_3, Console_js_5, UI_js_7) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ApplyInputEventHandlers = void 0;
    function ApplyInputEventHandlers() {
        keyDownOnWindow();
        keyDownOnInputTextArea();
        inputOnCommandTextArea();
        inputOnFilterTextBox();
        clickToggleAllDevices();
        clickStartRemoteControlButton();
        consoleTabSelected();
        deviceGroupSelectChanged();
        addAlertHandlers();
        hideOfflineDevicesCheckboxChanged();
        addGridPaginationHandlers();
        window.addEventListener("resize", ev => {
            CommandCompletion_js_2.PositionCommandCompletionWindow();
        });
    }
    exports.ApplyInputEventHandlers = ApplyInputEventHandlers;
    function addGridPaginationHandlers() {
        UI.LeftPaginationButton.addEventListener("click", (ev) => {
            DataGrid.PageDown();
        });
        UI.RightPaginationButton.addEventListener("click", (ev) => {
            DataGrid.PageUp();
        });
        var changePageTimeout = -1;
        UI.CurrentPageInput.addEventListener("input", (ev) => {
            if (changePageTimeout > 0) {
                window.clearTimeout(changePageTimeout);
            }
            changePageTimeout = window.setTimeout(() => {
                DataGrid.GoToCurrentPage();
            }, 1500);
        });
    }
    function addAlertHandlers() {
        UI.AlertsButton.addEventListener("click", ev => {
            UI.AlertsFrame.classList.toggle("open");
        });
        UI.CloseAlertsButton.addEventListener("click", ev => {
            UI.AlertsFrame.classList.toggle("open");
        });
        document.querySelectorAll(".alert-dismiss-button").forEach(element => {
            element.addEventListener("click", ev => {
                var alertID = ev.currentTarget.getAttribute("alert");
                var xhr = new XMLHttpRequest();
                xhr.open("delete", location.origin + "/api/Alerts/Delete/" + alertID);
                xhr.onload = function () {
                    if (xhr.status == 200) {
                        document.getElementById(alertID).remove();
                        var currentCount = Number(UI.AlertsCount.innerText);
                        currentCount--;
                        UI.AlertsCount.innerText = String(currentCount);
                    }
                    else {
                        UI_js_7.ShowModal("API Error", "There was an error deleting the alert.");
                    }
                };
                xhr.send();
            });
        });
    }
    function arrowUpOrDownOnTextArea(e) {
        if (e.ctrlKey) {
            if (e.key.toLowerCase() == "arrowdown") {
                UI.TabContentWrapper.scrollTop += 30;
            }
            else if (e.key.toLowerCase() == "arrowup") {
                UI.TabContentWrapper.scrollTop -= 30;
            }
        }
        else {
            if (!UI.CommandCompletionDiv.classList.contains("hidden")) {
                if (e.key.toLowerCase() == "arrowdown") {
                    if (CommandCompletion_js_2.CommandCompletionStore.CompletionPosition < UI.CommandCompletionDiv.children.length - 1) {
                        CommandCompletion_js_2.CommandCompletionStore.CompletionPosition += 1;
                        CommandCompletion_js_2.HighlightCompletionWindowItem(CommandCompletion_js_2.CommandCompletionStore.CompletionPosition);
                        UI.CommandCompletionDiv.querySelector(".selected").onfocus(new FocusEvent(""));
                    }
                }
                else if (e.key.toLowerCase() == "arrowup") {
                    if (CommandCompletion_js_2.CommandCompletionStore.CompletionPosition > 0) {
                        CommandCompletion_js_2.CommandCompletionStore.CompletionPosition -= 1;
                        CommandCompletion_js_2.HighlightCompletionWindowItem(CommandCompletion_js_2.CommandCompletionStore.CompletionPosition);
                        UI.CommandCompletionDiv.querySelector(".selected").onfocus(new FocusEvent(""));
                    }
                }
            }
            else {
                if (e.key.toLowerCase() == "arrowdown") {
                    if (CommandCompletion_js_2.CommandCompletionStore.InputHistoryPosition < CommandCompletion_js_2.CommandCompletionStore.InputHistoryItems.length - 1) {
                        CommandCompletion_js_2.CommandCompletionStore.InputHistoryPosition += 1;
                        UI.ConsoleTextArea.value = CommandCompletion_js_2.CommandCompletionStore.InputHistoryItems[CommandCompletion_js_2.CommandCompletionStore.InputHistoryPosition];
                    }
                }
                else if (e.key.toLowerCase() == "arrowup") {
                    if (CommandCompletion_js_2.CommandCompletionStore.InputHistoryPosition > 0) {
                        CommandCompletion_js_2.CommandCompletionStore.InputHistoryPosition -= 1;
                        UI.ConsoleTextArea.value = CommandCompletion_js_2.CommandCompletionStore.InputHistoryItems[CommandCompletion_js_2.CommandCompletionStore.InputHistoryPosition];
                    }
                }
            }
        }
    }
    function clickToggleAllDevices() {
        document.getElementById("toggleAllDevices").addEventListener("click", function (e) {
            DataGrid.ToggleSelectAll();
        });
    }
    function clickStartRemoteControlButton() {
        document.getElementById("startRemoteControlButton").addEventListener("click", function (e) {
            var selectedDevices = DataGrid.GetSelectedDevices();
            if (selectedDevices.length == 0) {
                UI_js_7.ShowMessage("You must select a device first.");
            }
            else if (selectedDevices.length > 1) {
                UI_js_7.ShowMessage("You must select only one device to control.");
            }
            else {
                WebCommands_js_3.WebCommands.find(x => x.Name == "RemoteControl").Execute([]);
            }
        });
    }
    function consoleTabSelected() {
        $(UI.ConsoleTab).on("shown.bs.tab", () => {
            UI.ConsoleAlert.hidden = true;
            UI.ConsoleAlert.innerText = "0";
            UI.ConsoleFrame.scrollTop = UI.ConsoleFrame.scrollHeight;
        });
    }
    function deviceGroupSelectChanged() {
        UI.DeviceGroupSelect.addEventListener("change", (ev) => {
            DataGrid.GridState.GroupFilter = UI.DeviceGroupSelect.value;
            if (UI.DeviceGroupSelect.selectedIndex == 0) {
                DataGrid.GridState.ShowAllGroups = true;
            }
            else {
                DataGrid.GridState.ShowAllGroups = false;
            }
            DataGrid.ApplyFilterToAll();
        });
    }
    function hideOfflineDevicesCheckboxChanged() {
        UI.HideOfflineDevicesCheckbox.addEventListener("change", ev => {
            DataGrid.GridState.HideOffline = UI.HideOfflineDevicesCheckbox.checked;
            DataGrid.ApplyFilterToAll();
        });
    }
    function inputOnCommandTextArea() {
        UI.ConsoleTextArea.addEventListener("input", (e) => {
            var commandMode = CommandProcessor.GetCommandModeShortcut();
            if (commandMode) {
                UI.CommandModeSelect.value = commandMode;
                UI.ConsoleTextArea.value = "";
                UI.CommandCompletionDiv.classList.add("hidden");
            }
            else {
                CommandProcessor.EvaluateCurrentCommandText();
            }
            UI.ConsoleFrame.scrollTop = UI.ConsoleFrame.scrollHeight;
        });
    }
    function inputOnFilterTextBox() {
        UI.GridFilter.addEventListener("input", (e) => {
            var currentText = e.currentTarget.value.toLowerCase();
            DataGrid.GridState.SearchFilter = currentText;
            DataGrid.ApplyFilterToAll();
        });
    }
    function keyDownOnInputTextArea() {
        UI.ConsoleTextArea.addEventListener("keydown", function (e) {
            if (!e.shiftKey) {
                switch (e.key.toLowerCase()) {
                    case "enter":
                        e.preventDefault();
                        if (UI.ConsoleTextArea.value.trim().length == 0) {
                            return;
                        }
                        UI.CommandCompletionDiv.classList.add("hidden");
                        UI.CommandInfoDiv.classList.add("hidden");
                        Console_js_5.AddConsoleOutput(`<span class="echo-input">${UI.ConsoleTextArea.value}</span>`);
                        if (!HubConnection.Connected) {
                            Console_js_5.AddConsoleOutput("Not connected.  Reconnecting...");
                            HubConnection.Connect();
                            return;
                        }
                        CommandProcessor.ProcessCommand();
                        break;
                    case "arrowup":
                    case "arrowdown":
                        e.preventDefault();
                        arrowUpOrDownOnTextArea(e);
                        break;
                    case "escape":
                        if (!UI.CommandCompletionDiv.classList.contains("hidden")) {
                            e.preventDefault();
                            UI.CommandCompletionDiv.classList.add("hidden");
                            UI.CommandInfoDiv.classList.add("hidden");
                        }
                        else {
                            e.preventDefault();
                            UI.ConsoleTextArea.value = "";
                        }
                        break;
                    case "tab":
                        if (!UI.CommandCompletionDiv.classList.contains("hidden")) {
                            e.preventDefault();
                            UI.CommandCompletionDiv.querySelector(".selected").click();
                        }
                        break;
                    case "backspace":
                        if (UI.ConsoleTextArea.value.length == 0 && !UI.CommandCompletionDiv.classList.contains("hidden")) {
                            UI.CommandCompletionDiv.classList.add("hidden");
                            UI.CommandInfoDiv.classList.add("hidden");
                        }
                        break;
                    default:
                        break;
                }
            }
        });
    }
    function keyDownOnWindow() {
        window.addEventListener("keydown", (e) => {
            if (!document.activeElement.isEqualNode(UI.ConsoleTextArea) &&
                document.activeElement.tagName.toLowerCase() != "select" &&
                document.activeElement.tagName.toLowerCase() != "input" &&
                document.activeElement.tagName.toLowerCase() != "textarea" &&
                !e.altKey &&
                !e.ctrlKey) {
                UI.ConsoleTextArea.focus();
            }
            if (e.ctrlKey && e.key.toLowerCase() == "q") {
                UI.ConsoleOutputDiv.innerHTML = "";
            }
        });
    }
});
define("Shared/Sound", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Sound = void 0;
    exports.Sound = new class {
        constructor() {
            this.SourceNodes = new Array();
        }
        Init() {
            if (this.Context) {
                // Already initialized.
                return;
            }
            if (AudioContext) {
                this.Context = new AudioContext();
            }
            else if (window["webkitAudioContext"]) {
                this.Context = new window["webkitAudioContext"];
            }
            else {
                return;
            }
            this.BackgroundAudio = new Audio();
            this.BackgroundNode = this.Context.createMediaElementSource(this.BackgroundAudio);
            this.BackgroundNode.connect(this.Context.destination);
        }
        Play(buffer) {
            if (!this.Context) {
                return;
            }
            var fr = new FileReader();
            fr.onload = async (ev) => {
                var audioBuffer = await this.Context.decodeAudioData(fr.result);
                var bufferSource = this.Context.createBufferSource();
                bufferSource.buffer = audioBuffer;
                bufferSource.connect(this.Context.destination);
                bufferSource.start();
            };
            fr.readAsArrayBuffer(new Blob([buffer], { 'type': 'audio/wav' }));
        }
        ;
    };
});
define("Main/App", ["require", "exports", "Main/HubConnection", "Main/UI", "Main/CommandProcessor", "Main/Commands/WebCommands", "Main/Commands/CMDCommands", "Main/Commands/PSCommands", "Shared/Utilities", "Main/DataGrid", "Main/UserSettings", "Main/InputEventHandlers", "Shared/Sound", "Main/Console"], function (require, exports, HubConnection, UI, CommandProcessor, WebCommands_1, CMDCommands_1, PSCommands_1, Utilities, DataGrid, UserSettings_1, InputEventHandlers_1, Sound_1, Console) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MainApp = void 0;
    exports.MainApp = {
        Commands: {
            "Web": WebCommands_1.WebCommands,
            "WinPS": PSCommands_1.PSCommands,
            "PSCore": PSCommands_1.PSCommands,
            "CMD": CMDCommands_1.CMDCommands
        },
        CommandProcessor: CommandProcessor,
        Console: Console,
        DataGrid: DataGrid,
        UI: UI,
        Utilities: Utilities,
        HubConnection: HubConnection,
        UserSettings: UserSettings_1.UserSettings,
        Sound: Sound_1.Sound,
        Init() {
            UI.ConsoleTextArea.focus();
            InputEventHandlers_1.ApplyInputEventHandlers();
            HubConnection.Connect();
        }
    };
});
//# sourceMappingURL=outMain.js.map